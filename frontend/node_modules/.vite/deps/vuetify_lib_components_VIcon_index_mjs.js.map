{
  "version": 3,
  "sources": ["../../vuetify/src/components/VIcon/VIcon.tsx", "../../vuetify/src/composables/size.ts", "../../vuetify/src/composables/tag.ts", "../../vuetify/src/composables/color.ts"],
  "sourcesContent": ["// Styles\nimport './VIcon.sass'\n\n// Composables\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { IconValue, useIcon } from '@/composables/icons'\nimport { useTextColor } from '@/composables/color'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { convertToUnit, defineComponent, flattenFragments, propsFactory } from '@/util'\n\n// Types\nimport type { ComputedRef } from 'vue'\n\nexport const makeVIconProps = propsFactory({\n  color: String,\n  start: Boolean,\n  end: Boolean,\n  icon: IconValue,\n\n  ...makeSizeProps(),\n  ...makeTagProps({ tag: 'i' }),\n  ...makeThemeProps(),\n}, 'v-icon')\n\nexport const VIcon = defineComponent({\n  name: 'VIcon',\n\n  props: makeVIconProps(),\n\n  setup (props, { attrs, slots }) {\n    let slotIcon: ComputedRef<string | undefined> | undefined\n    if (slots.default) {\n      slotIcon = computed(() => {\n        const slot = slots.default?.()\n        if (!slot) return\n\n        return flattenFragments(slot).filter(node =>\n          node.children && typeof node.children === 'string'\n        )[0]?.children as string\n      })\n    }\n\n    const { themeClasses } = provideTheme(props)\n    const { iconData } = useIcon(slotIcon || props)\n    const { sizeClasses } = useSize(props)\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'color'))\n\n    return () => {\n      return (\n        <iconData.value.component\n          tag={ props.tag }\n          icon={ iconData.value.icon }\n          class={[\n            'v-icon',\n            'notranslate',\n            sizeClasses.value,\n            textColorClasses.value,\n            themeClasses.value,\n            {\n              'v-icon--clickable': !!attrs.onClick,\n              'v-icon--start': props.start,\n              'v-icon--end': props.end,\n            },\n          ]}\n          style={[\n            !sizeClasses.value ? ({\n              fontSize: convertToUnit(props.size),\n              width: convertToUnit(props.size),\n              height: convertToUnit(props.size),\n            }) : undefined,\n            textColorStyles.value,\n          ]}\n          aria-hidden=\"true\"\n        />\n      )\n    }\n  },\n})\n", "// Utilities\nimport { computed } from 'vue'\nimport { convertToUnit, getCurrentInstanceName, propsFactory } from '@/util'\n\n// Types\nconst predefinedSizes = ['x-small', 'small', 'default', 'large', 'x-large']\n\nexport interface SizeProps {\n  size?: string | number\n}\n\n// Composables\nexport const makeSizeProps = propsFactory({\n  size: {\n    type: [String, Number],\n    default: 'default',\n  },\n}, 'size')\n\nexport function useSize (\n  props: SizeProps,\n  name = getCurrentInstanceName(),\n) {\n  const sizeClasses = computed(() => {\n    return predefinedSizes.includes(props.size as string)\n      ? `${name}--size-${props.size}`\n      : null\n  })\n\n  const sizeStyles = computed(() => {\n    return !predefinedSizes.includes(props.size as string) && props.size\n      ? ({\n        width: convertToUnit(props.size),\n        height: convertToUnit(props.size),\n      }) : null\n  })\n\n  return { sizeClasses, sizeStyles }\n}\n", "// Utilities\nimport { propsFactory } from '@/util'\n\n// Types\nexport interface TagProps {\n  tag: string\n}\n\n// Composables\nexport const makeTagProps = propsFactory({\n  tag: {\n    type: String,\n    default: 'div',\n  },\n}, 'tag')\n", "// Utilities\nimport { computed, isRef } from 'vue'\nimport { isCssColor } from '@/util'\n\n// Types\nimport type { CSSProperties, Ref } from 'vue'\n\ntype ColorValue = string | false | null | undefined\n\nexport interface TextColorData {\n  textColorClasses: Ref<string[]>\n  textColorStyles: Ref<CSSProperties>\n}\n\nexport interface BackgroundColorData {\n  backgroundColorClasses: Ref<string[]>\n  backgroundColorStyles: Ref<CSSProperties>\n}\n\n// Composables\nexport function useColor (colors: Ref<{ background?: ColorValue, text?: ColorValue }>) {\n  const backgroundIsCssColor = computed(() => isCssColor(colors.value.background))\n  const textIsCssColor = computed(() => isCssColor(colors.value.text))\n\n  const colorClasses = computed(() => {\n    const classes: string[] = []\n\n    if (colors.value.background && !backgroundIsCssColor.value) {\n      classes.push(`bg-${colors.value.background}`)\n    }\n\n    if (colors.value.text && !textIsCssColor.value) {\n      classes.push(`text-${colors.value.text}`)\n    }\n\n    return classes\n  })\n\n  const colorStyles = computed(() => {\n    const styles: CSSProperties = {}\n\n    if (colors.value.background && backgroundIsCssColor.value) {\n      styles.backgroundColor = colors.value.background\n    }\n\n    if (colors.value.text && textIsCssColor.value) {\n      styles.color = colors.value.text\n      styles.caretColor = colors.value.text\n    }\n\n    return styles\n  })\n\n  return { colorClasses, colorStyles }\n}\n\nexport function useTextColor (color: Ref<ColorValue>): TextColorData\nexport function useTextColor <T extends Record<K, ColorValue>, K extends string> (props: T, name: K): TextColorData\nexport function useTextColor <T extends Record<K, ColorValue>, K extends string> (\n  props: T | Ref<ColorValue>,\n  name?: K\n): TextColorData {\n  const colors = computed(() => ({\n    text: isRef(props) ? props.value : (name ? props[name] : null),\n  }))\n\n  const {\n    colorClasses: textColorClasses,\n    colorStyles: textColorStyles,\n  } = useColor(colors)\n\n  return { textColorClasses, textColorStyles }\n}\n\nexport function useBackgroundColor (color: Ref<ColorValue>): BackgroundColorData\nexport function useBackgroundColor <T extends Record<K, ColorValue>, K extends string> (props: T, name: K): BackgroundColorData\nexport function useBackgroundColor <T extends Record<K, ColorValue>, K extends string> (\n  props: T | Ref<ColorValue>,\n  name?: K\n): BackgroundColorData {\n  const colors = computed(() => ({\n    background: isRef(props) ? props.value : (name ? props[name] : null),\n  }))\n\n  const {\n    colorClasses: backgroundColorClasses,\n    colorStyles: backgroundColorStyles,\n  } = useColor(colors)\n\n  return { backgroundColorClasses, backgroundColorStyles }\n}\n"],
  "mappings": "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",
  "names": []
}
