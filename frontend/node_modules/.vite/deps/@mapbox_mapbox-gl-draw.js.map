{
  "version": 3,
  "sources": ["../../@mapbox/mapbox-gl-draw/src/lib/mode_handler.js", "../../@mapbox/mapbox-gl-draw/node_modules/wgs84/index.js", "../../@mapbox/mapbox-gl-draw/node_modules/@mapbox/geojson-area/index.js", "../../@mapbox/mapbox-gl-draw/src/constants.js", "../../@mapbox/mapbox-gl-draw/src/lib/sort_features.js", "../../@mapbox/mapbox-gl-draw/src/lib/string_set.js", "../../@mapbox/mapbox-gl-draw/src/lib/features_at.js", "../../@mapbox/mapbox-gl-draw/src/lib/map_event_to_bounding_box.js", "../../@mapbox/mapbox-gl-draw/src/lib/get_features_and_set_cursor.js", "../../@mapbox/mapbox-gl-draw/src/lib/euclidean_distance.js", "../../@mapbox/mapbox-gl-draw/src/lib/is_click.js", "../../@mapbox/mapbox-gl-draw/src/lib/is_tap.js", "../../@mapbox/mapbox-gl-draw/node_modules/hat/index.js", "../../@mapbox/mapbox-gl-draw/src/feature_types/feature.js", "../../@mapbox/mapbox-gl-draw/src/feature_types/point.js", "../../@mapbox/mapbox-gl-draw/src/feature_types/line_string.js", "../../@mapbox/mapbox-gl-draw/src/feature_types/polygon.js", "../../@mapbox/mapbox-gl-draw/src/feature_types/multi_feature.js", "../../@mapbox/mapbox-gl-draw/src/modes/mode_interface_accessors.js", "../../@mapbox/mapbox-gl-draw/src/modes/mode_interface.js", "../../@mapbox/mapbox-gl-draw/src/modes/object_to_mode.js", "../../@mapbox/mapbox-gl-draw/src/lib/to_dense_array.js", "../../@mapbox/mapbox-gl-draw/src/render.js", "../../@mapbox/mapbox-gl-draw/src/store.js", "../../@mapbox/mapbox-gl-draw/node_modules/xtend/immutable.js", "../../@mapbox/mapbox-gl-draw/src/ui.js", "../../@mapbox/mapbox-gl-draw/src/setup.js", "../../@mapbox/mapbox-gl-draw/src/events.js", "../../@mapbox/mapbox-gl-draw/src/lib/common_selectors.js", "../../@mapbox/mapbox-gl-draw/node_modules/@mapbox/point-geometry/index.js", "../../@mapbox/mapbox-gl-draw/src/lib/mouse_event_point.js", "../../@mapbox/mapbox-gl-draw/src/lib/create_vertex.js", "../../@mapbox/mapbox-gl-draw/src/lib/create_supplementary_points.js", "../../@mapbox/mapbox-gl-draw/src/lib/create_midpoint.js", "../../@mapbox/mapbox-gl-draw/src/lib/double_click_zoom.js", "../../@mapbox/mapbox-gl-draw/node_modules/@mapbox/geojson-normalize/index.js", "../../@mapbox/mapbox-gl-draw/node_modules/geojson-flatten/dist/index.es.js", "../../@mapbox/mapbox-gl-draw/node_modules/@mapbox/geojson-coords/flatten.js", "../../@mapbox/mapbox-gl-draw/node_modules/@mapbox/geojson-coords/index.js", "../../@mapbox/mapbox-gl-draw/node_modules/traverse/index.js", "../../@mapbox/mapbox-gl-draw/node_modules/@mapbox/extent/index.js", "../../@mapbox/mapbox-gl-draw/node_modules/@mapbox/geojson-extent/index.js", "../../@mapbox/mapbox-gl-draw/src/lib/constrain_feature_movement.js", "../../@mapbox/mapbox-gl-draw/src/lib/move_features.js", "../../@mapbox/mapbox-gl-draw/src/modes/simple_select.js", "../../@mapbox/mapbox-gl-draw/src/modes/direct_select.js", "../../@mapbox/mapbox-gl-draw/src/modes/draw_point.js", "../../@mapbox/mapbox-gl-draw/src/lib/is_event_at_coordinates.js", "../../@mapbox/mapbox-gl-draw/src/modes/draw_polygon.js", "../../@mapbox/mapbox-gl-draw/src/modes/draw_line_string.js", "../../@mapbox/mapbox-gl-draw/src/modes/index.js", "../../@mapbox/mapbox-gl-draw/src/options.js", "../../@mapbox/mapbox-gl-draw/src/lib/theme.js", "../../@mapbox/mapbox-gl-draw/node_modules/lodash.isequal/index.js", "../../@mapbox/mapbox-gl-draw/src/api.js", "../../@mapbox/mapbox-gl-draw/src/lib/string_sets_are_equal.js", "../../@mapbox/mapbox-gl-draw/index.js", "dep:@mapbox_mapbox-gl-draw"],
  "sourcesContent": ["\nconst ModeHandler = function(mode, DrawContext) {\n\n  const handlers = {\n    drag: [],\n    click: [],\n    mousemove: [],\n    mousedown: [],\n    mouseup: [],\n    mouseout: [],\n    keydown: [],\n    keyup: [],\n    touchstart: [],\n    touchmove: [],\n    touchend: [],\n    tap: []\n  };\n\n  const ctx = {\n    on(event, selector, fn) {\n      if (handlers[event] === undefined) {\n        throw new Error(`Invalid event type: ${event}`);\n      }\n      handlers[event].push({\n        selector,\n        fn\n      });\n    },\n    render(id) {\n      DrawContext.store.featureChanged(id);\n    }\n  };\n\n  const delegate = function (eventName, event) {\n    const handles = handlers[eventName];\n    let iHandle = handles.length;\n    while (iHandle--) {\n      const handle = handles[iHandle];\n      if (handle.selector(event)) {\n        const skipRender = handle.fn.call(ctx, event);\n        if (!skipRender) {\n          DrawContext.store.render();\n        }\n        DrawContext.ui.updateMapClasses();\n\n        // ensure an event is only handled once\n        // we do this to let modes have multiple overlapping selectors\n        // and relay on order of oppertations to filter\n        break;\n      }\n    }\n  };\n\n  mode.start.call(ctx);\n\n  return {\n    render: mode.render,\n    stop() {\n      if (mode.stop) mode.stop();\n    },\n    trash() {\n      if (mode.trash) {\n        mode.trash();\n        DrawContext.store.render();\n      }\n    },\n    combineFeatures() {\n      if (mode.combineFeatures) {\n        mode.combineFeatures();\n      }\n    },\n    uncombineFeatures() {\n      if (mode.uncombineFeatures) {\n        mode.uncombineFeatures();\n      }\n    },\n    drag(event) {\n      delegate('drag', event);\n    },\n    click(event) {\n      delegate('click', event);\n    },\n    mousemove(event) {\n      delegate('mousemove', event);\n    },\n    mousedown(event) {\n      delegate('mousedown', event);\n    },\n    mouseup(event) {\n      delegate('mouseup', event);\n    },\n    mouseout(event) {\n      delegate('mouseout', event);\n    },\n    keydown(event) {\n      delegate('keydown', event);\n    },\n    keyup(event) {\n      delegate('keyup', event);\n    },\n    touchstart(event) {\n      delegate('touchstart', event);\n    },\n    touchmove(event) {\n      delegate('touchmove', event);\n    },\n    touchend(event) {\n      delegate('touchend', event);\n    },\n    tap(event) {\n      delegate('tap', event);\n    }\n  };\n};\n\nexport default ModeHandler;\n", "module.exports.RADIUS = 6378137;\nmodule.exports.FLATTENING = 1/298.257223563;\nmodule.exports.POLAR_RADIUS = 6356752.3142;\n", "var wgs84 = require('wgs84');\n\nmodule.exports.geometry = geometry;\nmodule.exports.ring = ringArea;\n\nfunction geometry(_) {\n    var area = 0, i;\n    switch (_.type) {\n        case 'Polygon':\n            return polygonArea(_.coordinates);\n        case 'MultiPolygon':\n            for (i = 0; i < _.coordinates.length; i++) {\n                area += polygonArea(_.coordinates[i]);\n            }\n            return area;\n        case 'Point':\n        case 'MultiPoint':\n        case 'LineString':\n        case 'MultiLineString':\n            return 0;\n        case 'GeometryCollection':\n            for (i = 0; i < _.geometries.length; i++) {\n                area += geometry(_.geometries[i]);\n            }\n            return area;\n    }\n}\n\nfunction polygonArea(coords) {\n    var area = 0;\n    if (coords && coords.length > 0) {\n        area += Math.abs(ringArea(coords[0]));\n        for (var i = 1; i < coords.length; i++) {\n            area -= Math.abs(ringArea(coords[i]));\n        }\n    }\n    return area;\n}\n\n/**\n * Calculate the approximate area of the polygon were it projected onto\n *     the earth.  Note that this area will be positive if ring is oriented\n *     clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n *     Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n *     Laboratory, Pasadena, CA, June 2007 http://trs-new.jpl.nasa.gov/dspace/handle/2014/40409\n *\n * Returns:\n * {float} The approximate signed geodesic area of the polygon in square\n *     meters.\n */\n\nfunction ringArea(coords) {\n    var p1, p2, p3, lowerIndex, middleIndex, upperIndex, i,\n    area = 0,\n    coordsLength = coords.length;\n\n    if (coordsLength > 2) {\n        for (i = 0; i < coordsLength; i++) {\n            if (i === coordsLength - 2) {// i = N-2\n                lowerIndex = coordsLength - 2;\n                middleIndex = coordsLength -1;\n                upperIndex = 0;\n            } else if (i === coordsLength - 1) {// i = N-1\n                lowerIndex = coordsLength - 1;\n                middleIndex = 0;\n                upperIndex = 1;\n            } else { // i = 0 to N-3\n                lowerIndex = i;\n                middleIndex = i+1;\n                upperIndex = i+2;\n            }\n            p1 = coords[lowerIndex];\n            p2 = coords[middleIndex];\n            p3 = coords[upperIndex];\n            area += ( rad(p3[0]) - rad(p1[0]) ) * Math.sin( rad(p2[1]));\n        }\n\n        area = area * wgs84.RADIUS * wgs84.RADIUS / 2;\n    }\n\n    return area;\n}\n\nfunction rad(_) {\n    return _ * Math.PI / 180;\n}", "export const classes = {\n  CONTROL_BASE: 'mapboxgl-ctrl',\n  CONTROL_PREFIX: 'mapboxgl-ctrl-',\n  CONTROL_BUTTON: 'mapbox-gl-draw_ctrl-draw-btn',\n  CONTROL_BUTTON_LINE: 'mapbox-gl-draw_line',\n  CONTROL_BUTTON_POLYGON: 'mapbox-gl-draw_polygon',\n  CONTROL_BUTTON_POINT: 'mapbox-gl-draw_point',\n  CONTROL_BUTTON_TRASH: 'mapbox-gl-draw_trash',\n  CONTROL_BUTTON_COMBINE_FEATURES: 'mapbox-gl-draw_combine',\n  CONTROL_BUTTON_UNCOMBINE_FEATURES: 'mapbox-gl-draw_uncombine',\n  CONTROL_GROUP: 'mapboxgl-ctrl-group',\n  ATTRIBUTION: 'mapboxgl-ctrl-attrib',\n  ACTIVE_BUTTON: 'active',\n  BOX_SELECT: 'mapbox-gl-draw_boxselect'\n};\n\nexport const sources = {\n  HOT: 'mapbox-gl-draw-hot',\n  COLD: 'mapbox-gl-draw-cold'\n};\n\nexport const cursors = {\n  ADD: 'add',\n  MOVE: 'move',\n  DRAG: 'drag',\n  POINTER: 'pointer',\n  NONE: 'none'\n};\n\nexport const types = {\n  POLYGON: 'polygon',\n  LINE: 'line_string',\n  POINT: 'point'\n};\n\nexport const geojsonTypes = {\n  FEATURE: 'Feature',\n  POLYGON: 'Polygon',\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  FEATURE_COLLECTION: 'FeatureCollection',\n  MULTI_PREFIX: 'Multi',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon'\n};\n\nexport const modes = {\n  DRAW_LINE_STRING: 'draw_line_string',\n  DRAW_POLYGON: 'draw_polygon',\n  DRAW_POINT: 'draw_point',\n  SIMPLE_SELECT: 'simple_select',\n  DIRECT_SELECT: 'direct_select',\n  STATIC: 'static'\n};\n\nexport const events = {\n  CREATE: 'draw.create',\n  DELETE: 'draw.delete',\n  UPDATE: 'draw.update',\n  SELECTION_CHANGE: 'draw.selectionchange',\n  MODE_CHANGE: 'draw.modechange',\n  ACTIONABLE: 'draw.actionable',\n  RENDER: 'draw.render',\n  COMBINE_FEATURES: 'draw.combine',\n  UNCOMBINE_FEATURES: 'draw.uncombine'\n};\n\nexport const updateActions = {\n  MOVE: 'move',\n  CHANGE_COORDINATES: 'change_coordinates'\n};\n\nexport const meta = {\n  FEATURE: 'feature',\n  MIDPOINT: 'midpoint',\n  VERTEX: 'vertex'\n};\n\nexport const activeStates = {\n  ACTIVE: 'true',\n  INACTIVE: 'false'\n};\n\nexport const interactions = [\n  'scrollZoom',\n  'boxZoom',\n  'dragRotate',\n  'dragPan',\n  'keyboard',\n  'doubleClickZoom',\n  'touchZoomRotate'\n];\n\nexport const LAT_MIN = -90;\nexport const LAT_RENDERED_MIN = -85;\nexport const LAT_MAX = 90;\nexport const LAT_RENDERED_MAX = 85;\nexport const LNG_MIN = -270;\nexport const LNG_MAX = 270;\n", "import area from '@mapbox/geojson-area';\nimport * as Constants from '../constants';\n\nconst FEATURE_SORT_RANKS = {\n  Point: 0,\n  LineString: 1,\n  Polygon: 2\n};\n\nfunction comparator(a, b) {\n  const score = FEATURE_SORT_RANKS[a.geometry.type] - FEATURE_SORT_RANKS[b.geometry.type];\n\n  if (score === 0 && a.geometry.type === Constants.geojsonTypes.POLYGON) {\n    return a.area - b.area;\n  }\n\n  return score;\n}\n\n// Sort in the order above, then sort polygons by area ascending.\nfunction sortFeatures(features) {\n  return features.map((feature) => {\n    if (feature.geometry.type === Constants.geojsonTypes.POLYGON) {\n      feature.area = area.geometry({\n        type: Constants.geojsonTypes.FEATURE,\n        property: {},\n        geometry: feature.geometry\n      });\n    }\n    return feature;\n  }).sort(comparator).map((feature) => {\n    delete feature.area;\n    return feature;\n  });\n}\n\nexport default sortFeatures;\n", "function StringSet(items) {\n  this._items = {};\n  this._nums = {};\n  this._length = items ? items.length : 0;\n  if (!items) return;\n  for (let i = 0, l = items.length; i < l; i++) {\n    this.add(items[i]);\n    if (items[i] === undefined) continue;\n    if (typeof items[i] === 'string') this._items[items[i]] = i;\n    else this._nums[items[i]] = i;\n\n  }\n}\n\nStringSet.prototype.add = function(x) {\n  if (this.has(x)) return this;\n  this._length++;\n  if (typeof x === 'string') this._items[x] = this._length;\n  else this._nums[x] = this._length;\n  return this;\n};\n\nStringSet.prototype.delete = function(x) {\n  if (this.has(x) === false) return this;\n  this._length--;\n  delete this._items[x];\n  delete this._nums[x];\n  return this;\n};\n\nStringSet.prototype.has = function(x) {\n  if (typeof x !== 'string' && typeof x !== 'number') return false;\n  return this._items[x] !== undefined || this._nums[x] !== undefined;\n};\n\nStringSet.prototype.values = function() {\n  const values = [];\n  Object.keys(this._items).forEach((k) => {\n    values.push({ k, v: this._items[k] });\n  });\n  Object.keys(this._nums).forEach((k) => {\n    values.push({ k: JSON.parse(k), v: this._nums[k] });\n  });\n\n  return values.sort((a, b) => a.v - b.v).map(a => a.k);\n};\n\nStringSet.prototype.clear = function() {\n  this._length = 0;\n  this._items = {};\n  this._nums = {};\n  return this;\n};\n\nexport default StringSet;\n", "import sortFeatures from './sort_features';\nimport mapEventToBoundingBox from './map_event_to_bounding_box';\nimport * as Constants from '../constants';\nimport StringSet from './string_set';\n\nconst META_TYPES = [\n  Constants.meta.FEATURE,\n  Constants.meta.MIDPOINT,\n  Constants.meta.VERTEX\n];\n\n// Requires either event or bbox\nexport default {\n  click: featuresAtClick,\n  touch: featuresAtTouch\n};\n\nfunction featuresAtClick(event, bbox, ctx) {\n  return featuresAt(event, bbox, ctx, ctx.options.clickBuffer);\n}\n\nfunction featuresAtTouch(event, bbox, ctx) {\n  return featuresAt(event, bbox, ctx, ctx.options.touchBuffer);\n}\n\nfunction featuresAt(event, bbox, ctx, buffer) {\n  if (ctx.map === null) return [];\n\n  const box = (event) ? mapEventToBoundingBox(event, buffer) : bbox;\n\n  const queryParams = {};\n  if (ctx.options.styles) queryParams.layers = ctx.options.styles.map(s => s.id);\n\n  const features = ctx.map.queryRenderedFeatures(box, queryParams)\n    .filter(feature => META_TYPES.indexOf(feature.properties.meta) !== -1);\n\n  const featureIds = new StringSet();\n  const uniqueFeatures = [];\n  features.forEach((feature) => {\n    const featureId = feature.properties.id;\n    if (featureIds.has(featureId)) return;\n    featureIds.add(featureId);\n    uniqueFeatures.push(feature);\n  });\n\n  return sortFeatures(uniqueFeatures);\n}\n", "/**\n * Returns a bounding box representing the event's location.\n *\n * @param {Event} mapEvent - Mapbox GL JS map event, with a point properties.\n * @return {Array<Array<number>>} Bounding box.\n */\nfunction mapEventToBoundingBox(mapEvent, buffer = 0) {\n  return [\n    [mapEvent.point.x - buffer, mapEvent.point.y - buffer],\n    [mapEvent.point.x + buffer, mapEvent.point.y + buffer]\n  ];\n}\n\nexport default mapEventToBoundingBox;\n", "import featuresAt from './features_at';\nimport * as Constants from '../constants';\n\nexport default function getFeatureAtAndSetCursors(event, ctx) {\n  const features = featuresAt.click(event, null, ctx);\n  const classes = { mouse: Constants.cursors.NONE };\n\n  if (features[0]) {\n    classes.mouse = (features[0].properties.active === Constants.activeStates.ACTIVE) ?\n      Constants.cursors.MOVE : Constants.cursors.POINTER;\n    classes.feature = features[0].properties.meta;\n  }\n\n  if (ctx.events.currentModeName().indexOf('draw') !== -1) {\n    classes.mouse = Constants.cursors.ADD;\n  }\n\n  ctx.ui.queueMapClasses(classes);\n  ctx.ui.updateMapClasses();\n\n  return features[0];\n}\n", "export default function(a, b) {\n  const x = a.x - b.x;\n  const y = a.y - b.y;\n  return Math.sqrt((x * x) + (y * y));\n}\n", "import euclideanDistance from './euclidean_distance';\n\nconst FINE_TOLERANCE = 4;\nconst GROSS_TOLERANCE = 12;\nconst INTERVAL = 500;\n\nexport default function isClick(start, end, options = {}) {\n  const fineTolerance = (options.fineTolerance != null) ? options.fineTolerance : FINE_TOLERANCE;\n  const grossTolerance = (options.grossTolerance != null) ? options.grossTolerance : GROSS_TOLERANCE;\n  const interval = (options.interval != null) ? options.interval : INTERVAL;\n\n  start.point = start.point || end.point;\n  start.time = start.time || end.time;\n  const moveDistance = euclideanDistance(start.point, end.point);\n\n  return moveDistance < fineTolerance ||\n    (moveDistance < grossTolerance && (end.time - start.time) < interval);\n}\n", "import euclideanDistance from './euclidean_distance';\n\nconst TOLERANCE = 25;\nconst INTERVAL = 250;\n\nexport default function isTap(start, end, options = {}) {\n  const tolerance = (options.tolerance != null) ? options.tolerance : TOLERANCE;\n  const interval = (options.interval != null) ? options.interval : INTERVAL;\n\n  start.point = start.point || end.point;\n  start.time = start.time || end.time;\n  const moveDistance = euclideanDistance(start.point, end.point);\n\n  return moveDistance < tolerance && (end.time - start.time) < interval;\n}\n", "var hat = module.exports = function (bits, base) {\n    if (!base) base = 16;\n    if (bits === undefined) bits = 128;\n    if (bits <= 0) return '0';\n    \n    var digits = Math.log(Math.pow(2, bits)) / Math.log(base);\n    for (var i = 2; digits === Infinity; i *= 2) {\n        digits = Math.log(Math.pow(2, bits / i)) / Math.log(base) * i;\n    }\n    \n    var rem = digits - Math.floor(digits);\n    \n    var res = '';\n    \n    for (var i = 0; i < Math.floor(digits); i++) {\n        var x = Math.floor(Math.random() * base).toString(base);\n        res = x + res;\n    }\n    \n    if (rem) {\n        var b = Math.pow(base, rem);\n        var x = Math.floor(Math.random() * b).toString(base);\n        res = x + res;\n    }\n    \n    var parsed = parseInt(res, base);\n    if (parsed !== Infinity && parsed >= Math.pow(2, bits)) {\n        return hat(bits, base)\n    }\n    else return res;\n};\n\nhat.rack = function (bits, base, expandBy) {\n    var fn = function (data) {\n        var iters = 0;\n        do {\n            if (iters ++ > 10) {\n                if (expandBy) bits += expandBy;\n                else throw new Error('too many ID collisions, use more bits')\n            }\n            \n            var id = hat(bits, base);\n        } while (Object.hasOwnProperty.call(hats, id));\n        \n        hats[id] = data;\n        return id;\n    };\n    var hats = fn.hats = {};\n    \n    fn.get = function (id) {\n        return fn.hats[id];\n    };\n    \n    fn.set = function (id, value) {\n        fn.hats[id] = value;\n        return fn;\n    };\n    \n    fn.bits = bits || 128;\n    fn.base = base || 16;\n    return fn;\n};\n", "import hat from 'hat';\nimport * as Constants from '../constants';\n\nconst Feature = function(ctx, geojson) {\n  this.ctx = ctx;\n  this.properties = geojson.properties || {};\n  this.coordinates = geojson.geometry.coordinates;\n  this.id = geojson.id || hat();\n  this.type = geojson.geometry.type;\n};\n\nFeature.prototype.changed = function() {\n  this.ctx.store.featureChanged(this.id);\n};\n\nFeature.prototype.incomingCoords = function(coords) {\n  this.setCoordinates(coords);\n};\n\nFeature.prototype.setCoordinates = function(coords) {\n  this.coordinates = coords;\n  this.changed();\n};\n\nFeature.prototype.getCoordinates = function() {\n  return JSON.parse(JSON.stringify(this.coordinates));\n};\n\nFeature.prototype.setProperty = function(property, value) {\n  this.properties[property] = value;\n};\n\nFeature.prototype.toGeoJSON = function() {\n  return JSON.parse(JSON.stringify({\n    id: this.id,\n    type: Constants.geojsonTypes.FEATURE,\n    properties: this.properties,\n    geometry: {\n      coordinates: this.getCoordinates(),\n      type: this.type\n    }\n  }));\n};\n\nFeature.prototype.internal = function(mode) {\n  const properties = {\n    id: this.id,\n    meta: Constants.meta.FEATURE,\n    'meta:type': this.type,\n    active: Constants.activeStates.INACTIVE,\n    mode\n  };\n\n  if (this.ctx.options.userProperties) {\n    for (const name in this.properties) {\n      properties[`user_${name}`] = this.properties[name];\n    }\n  }\n\n  return {\n    type: Constants.geojsonTypes.FEATURE,\n    properties,\n    geometry: {\n      coordinates: this.getCoordinates(),\n      type: this.type\n    }\n  };\n};\n\nexport default Feature;\n", "import Feature from './feature';\n\nconst Point = function(ctx, geojson) {\n  Feature.call(this, ctx, geojson);\n};\n\nPoint.prototype = Object.create(Feature.prototype);\n\nPoint.prototype.isValid = function() {\n  return typeof this.coordinates[0] === 'number' &&\n    typeof this.coordinates[1] === 'number';\n};\n\nPoint.prototype.updateCoordinate = function(pathOrLng, lngOrLat, lat) {\n  if (arguments.length === 3) {\n    this.coordinates = [lngOrLat, lat];\n  } else {\n    this.coordinates = [pathOrLng, lngOrLat];\n  }\n  this.changed();\n};\n\nPoint.prototype.getCoordinate = function() {\n  return this.getCoordinates();\n};\n\nexport default Point;\n", "import Feature from './feature';\n\nconst LineString = function(ctx, geojson) {\n  Feature.call(this, ctx, geojson);\n};\n\nLineString.prototype = Object.create(Feature.prototype);\n\nLineString.prototype.isValid = function() {\n  return this.coordinates.length > 1;\n};\n\nLineString.prototype.addCoordinate = function(path, lng, lat) {\n  this.changed();\n  const id = parseInt(path, 10);\n  this.coordinates.splice(id, 0, [lng, lat]);\n};\n\nLineString.prototype.getCoordinate = function(path) {\n  const id = parseInt(path, 10);\n  return JSON.parse(JSON.stringify(this.coordinates[id]));\n};\n\nLineString.prototype.removeCoordinate = function(path) {\n  this.changed();\n  this.coordinates.splice(parseInt(path, 10), 1);\n};\n\nLineString.prototype.updateCoordinate = function(path, lng, lat) {\n  const id = parseInt(path, 10);\n  this.coordinates[id] = [lng, lat];\n  this.changed();\n};\n\nexport default LineString;\n", "import Feature from './feature';\n\nconst Polygon = function(ctx, geojson) {\n  Feature.call(this, ctx, geojson);\n  this.coordinates = this.coordinates.map(ring => ring.slice(0, -1));\n};\n\nPolygon.prototype = Object.create(Feature.prototype);\n\nPolygon.prototype.isValid = function() {\n  if (this.coordinates.length === 0) return false;\n  return this.coordinates.every(ring => ring.length > 2);\n};\n\n// Expects valid geoJSON polygon geometry: first and last positions must be equivalent.\nPolygon.prototype.incomingCoords = function(coords) {\n  this.coordinates = coords.map(ring => ring.slice(0, -1));\n  this.changed();\n};\n\n// Does NOT expect valid geoJSON polygon geometry: first and last positions should not be equivalent.\nPolygon.prototype.setCoordinates = function(coords) {\n  this.coordinates = coords;\n  this.changed();\n};\n\nPolygon.prototype.addCoordinate = function(path, lng, lat) {\n  this.changed();\n  const ids = path.split('.').map(x => parseInt(x, 10));\n\n  const ring = this.coordinates[ids[0]];\n\n  ring.splice(ids[1], 0, [lng, lat]);\n};\n\nPolygon.prototype.removeCoordinate = function(path) {\n  this.changed();\n  const ids = path.split('.').map(x => parseInt(x, 10));\n  const ring = this.coordinates[ids[0]];\n  if (ring) {\n    ring.splice(ids[1], 1);\n    if (ring.length < 3) {\n      this.coordinates.splice(ids[0], 1);\n    }\n  }\n};\n\nPolygon.prototype.getCoordinate = function(path) {\n  const ids = path.split('.').map(x => parseInt(x, 10));\n  const ring = this.coordinates[ids[0]];\n  return JSON.parse(JSON.stringify(ring[ids[1]]));\n};\n\nPolygon.prototype.getCoordinates = function() {\n  return this.coordinates.map(coords => coords.concat([coords[0]]));\n};\n\nPolygon.prototype.updateCoordinate = function(path, lng, lat) {\n  this.changed();\n  const parts = path.split('.');\n  const ringId = parseInt(parts[0], 10);\n  const coordId = parseInt(parts[1], 10);\n\n  if (this.coordinates[ringId] === undefined) {\n    this.coordinates[ringId] = [];\n  }\n\n  this.coordinates[ringId][coordId] = [lng, lat];\n};\n\nexport default Polygon;\n", "import Feature from './feature';\nimport * as Constants from '../constants';\nimport hat from 'hat';\n\nimport MultiPoint from './point';\nimport MultiLineString from './line_string';\nimport MultiPolygon from './polygon';\n\nconst models = {\n  MultiPoint,\n  MultiLineString,\n  MultiPolygon\n};\n\nconst takeAction = (features, action, path, lng, lat) => {\n  const parts = path.split('.');\n  const idx = parseInt(parts[0], 10);\n  const tail = (!parts[1]) ? null : parts.slice(1).join('.');\n  return features[idx][action](tail, lng, lat);\n};\n\nconst MultiFeature = function(ctx, geojson) {\n  Feature.call(this, ctx, geojson);\n\n  delete this.coordinates;\n  this.model = models[geojson.geometry.type];\n  if (this.model === undefined) throw new TypeError(`${geojson.geometry.type} is not a valid type`);\n  this.features = this._coordinatesToFeatures(geojson.geometry.coordinates);\n};\n\nMultiFeature.prototype = Object.create(Feature.prototype);\n\nMultiFeature.prototype._coordinatesToFeatures = function(coordinates) {\n  const Model = this.model.bind(this);\n  return coordinates.map(coords => new Model(this.ctx, {\n    id: hat(),\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      coordinates: coords,\n      type: this.type.replace('Multi', '')\n    }\n  }));\n};\n\nMultiFeature.prototype.isValid = function() {\n  return this.features.every(f => f.isValid());\n};\n\nMultiFeature.prototype.setCoordinates = function(coords) {\n  this.features = this._coordinatesToFeatures(coords);\n  this.changed();\n};\n\nMultiFeature.prototype.getCoordinate = function(path) {\n  return takeAction(this.features, 'getCoordinate', path);\n};\n\nMultiFeature.prototype.getCoordinates = function() {\n  return JSON.parse(JSON.stringify(this.features.map((f) => {\n    if (f.type === Constants.geojsonTypes.POLYGON) return f.getCoordinates();\n    return f.coordinates;\n  })));\n};\n\nMultiFeature.prototype.updateCoordinate = function(path, lng, lat) {\n  takeAction(this.features, 'updateCoordinate', path, lng, lat);\n  this.changed();\n};\n\nMultiFeature.prototype.addCoordinate = function(path, lng, lat) {\n  takeAction(this.features, 'addCoordinate', path, lng, lat);\n  this.changed();\n};\n\nMultiFeature.prototype.removeCoordinate = function(path) {\n  takeAction(this.features, 'removeCoordinate', path);\n  this.changed();\n};\n\nMultiFeature.prototype.getFeatures = function() {\n  return this.features;\n};\n\nexport default MultiFeature;\n", "import * as Constants from '../constants';\nimport featuresAt from '../lib/features_at';\nimport Point from '../feature_types/point';\nimport LineString from '../feature_types/line_string';\nimport Polygon from '../feature_types/polygon';\nimport MultiFeature from '../feature_types/multi_feature';\n\nexport default function ModeInterface(ctx) {\n  this.map = ctx.map;\n  this.drawConfig = JSON.parse(JSON.stringify(ctx.options || {}));\n  this._ctx = ctx;\n}\n\n/**\n * Sets Draw's interal selected state\n * @name this.setSelected\n * @param {DrawFeature[]} - whats selected as a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js)\n */\nModeInterface.prototype.setSelected = function(features) {\n  return this._ctx.store.setSelected(features);\n};\n\n/**\n * Sets Draw's internal selected coordinate state\n * @name this.setSelectedCoordinates\n * @param {Object[]} coords - a array of {coord_path: 'string', featureId: 'string'}\n */\nModeInterface.prototype.setSelectedCoordinates = function(coords) {\n  this._ctx.store.setSelectedCoordinates(coords);\n  coords.reduce((m, c) => {\n    if (m[c.feature_id] === undefined) {\n      m[c.feature_id] = true;\n      this._ctx.store.get(c.feature_id).changed();\n    }\n    return m;\n  }, {});\n};\n\n/**\n * Get all selected features as a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js)\n * @name this.getSelected\n * @returns {DrawFeature[]}\n */\nModeInterface.prototype.getSelected = function() {\n  return this._ctx.store.getSelected();\n};\n\n/**\n * Get the ids of all currently selected features\n * @name this.getSelectedIds\n * @returns {String[]}\n */\nModeInterface.prototype.getSelectedIds = function() {\n  return this._ctx.store.getSelectedIds();\n};\n\n/**\n * Check if a feature is selected\n * @name this.isSelected\n * @param {String} id - a feature id\n * @returns {Boolean}\n */\nModeInterface.prototype.isSelected = function(id) {\n  return this._ctx.store.isSelected(id);\n};\n\n/**\n * Get a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js) by its id\n * @name this.getFeature\n * @param {String} id - a feature id\n * @returns {DrawFeature}\n */\nModeInterface.prototype.getFeature = function(id) {\n  return this._ctx.store.get(id);\n};\n\n/**\n * Add a feature to draw's internal selected state\n * @name this.select\n * @param {String} id\n */\nModeInterface.prototype.select = function(id) {\n  return this._ctx.store.select(id);\n};\n\n/**\n * Remove a feature from draw's internal selected state\n * @name this.delete\n * @param {String} id\n */\nModeInterface.prototype.deselect = function(id) {\n  return this._ctx.store.deselect(id);\n};\n\n/**\n * Delete a feature from draw\n * @name this.deleteFeature\n * @param {String} id - a feature id\n */\nModeInterface.prototype.deleteFeature = function(id, opts = {}) {\n  return this._ctx.store.delete(id, opts);\n};\n\n/**\n * Add a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js) to draw.\n * See `this.newFeature` for converting geojson into a DrawFeature\n * @name this.addFeature\n * @param {DrawFeature} feature - the feature to add\n */\nModeInterface.prototype.addFeature = function(feature) {\n  return this._ctx.store.add(feature);\n};\n\n/**\n * Clear all selected features\n */\nModeInterface.prototype.clearSelectedFeatures = function() {\n  return this._ctx.store.clearSelected();\n};\n\n/**\n * Clear all selected coordinates\n */\nModeInterface.prototype.clearSelectedCoordinates = function() {\n  return this._ctx.store.clearSelectedCoordinates();\n};\n\n/**\n * Indicate if the different action are currently possible with your mode\n * See [draw.actionalbe](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#drawactionable) for a list of possible actions. All undefined actions are set to **false** by default\n * @name this.setActionableState\n * @param {Object} actions\n */\nModeInterface.prototype.setActionableState = function(actions = {}) {\n  const newSet = {\n    trash: actions.trash || false,\n    combineFeatures: actions.combineFeatures || false,\n    uncombineFeatures: actions.uncombineFeatures || false\n  };\n  return this._ctx.events.actionable(newSet);\n};\n\n/**\n * Trigger a mode change\n * @name this.changeMode\n * @param {String} mode - the mode to transition into\n * @param {Object} opts - the options object to pass to the new mode\n * @param {Object} eventOpts - used to control what kind of events are emitted.\n */\nModeInterface.prototype.changeMode = function(mode, opts = {}, eventOpts = {}) {\n  return this._ctx.events.changeMode(mode, opts, eventOpts);\n};\n\n/**\n * Update the state of draw map classes\n * @name this.updateUIClasses\n * @param {Object} opts\n */\nModeInterface.prototype.updateUIClasses = function(opts) {\n  return this._ctx.ui.queueMapClasses(opts);\n};\n\n/**\n * If a name is provided it makes that button active, else if makes all buttons inactive\n * @name this.activateUIButton\n * @param {String?} name - name of the button to make active, leave as undefined to set buttons to be inactive\n */\nModeInterface.prototype.activateUIButton = function(name) {\n  return this._ctx.ui.setActiveButton(name);\n};\n\n/**\n * Get the features at the location of an event object or in a bbox\n * @name this.featuresAt\n * @param {Event||NULL} event - a mapbox-gl event object\n * @param {BBOX||NULL} bbox - the area to get features from\n * @param {String} bufferType - is this `click` or `tap` event, defaults to click\n */\nModeInterface.prototype.featuresAt = function(event, bbox, bufferType = 'click') {\n  if (bufferType !== 'click' && bufferType !== 'touch') throw new Error('invalid buffer type');\n  return featuresAt[bufferType](event, bbox, this._ctx);\n};\n\n/**\n * Create a new [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js) from geojson\n * @name this.newFeature\n * @param {GeoJSONFeature} geojson\n * @returns {DrawFeature}\n */\nModeInterface.prototype.newFeature = function(geojson) {\n  const type = geojson.geometry.type;\n  if (type === Constants.geojsonTypes.POINT) return new Point(this._ctx, geojson);\n  if (type === Constants.geojsonTypes.LINE_STRING) return new LineString(this._ctx, geojson);\n  if (type === Constants.geojsonTypes.POLYGON) return new Polygon(this._ctx, geojson);\n  return new MultiFeature(this._ctx, geojson);\n};\n\n/**\n * Check is an object is an instance of a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js)\n * @name this.isInstanceOf\n * @param {String} type - `Point`, `LineString`, `Polygon`, `MultiFeature`\n * @param {Object} feature - the object that needs to be checked\n * @returns {Boolean}\n */\nModeInterface.prototype.isInstanceOf = function(type, feature) {\n  if (type === Constants.geojsonTypes.POINT) return feature instanceof Point;\n  if (type === Constants.geojsonTypes.LINE_STRING) return feature instanceof LineString;\n  if (type === Constants.geojsonTypes.POLYGON) return feature instanceof Polygon;\n  if (type === 'MultiFeature') return feature instanceof MultiFeature;\n  throw new Error(`Unknown feature class: ${type}`);\n};\n\n/**\n * Force draw to rerender the feature of the provided id\n * @name this.doRender\n * @param {String} id - a feature id\n */\nModeInterface.prototype.doRender = function(id) {\n  return this._ctx.store.featureChanged(id);\n};\n\n", "import ModeInterface from './mode_interface_accessors';\nexport default ModeInterface;\n\n/**\n * Triggered while a mode is being transitioned into.\n * @param opts {Object} - this is the object passed via `draw.changeMode('mode', opts)`;\n * @name MODE.onSetup\n * @returns {Object} - this object will be passed to all other life cycle functions\n */\nModeInterface.prototype.onSetup = function() {};\n\n/**\n * Triggered when a drag event is detected on the map\n * @name MODE.onDrag\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onDrag = function() {};\n\n/**\n * Triggered when the mouse is clicked\n * @name MODE.onClick\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onClick = function() {};\n\n/**\n * Triggered with the mouse is moved\n * @name MODE.onMouseMove\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onMouseMove = function() {};\n\n/**\n * Triggered when the mouse button is pressed down\n * @name MODE.onMouseDown\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onMouseDown = function() {};\n\n/**\n * Triggered when the mouse button is released\n * @name MODE.onMouseUp\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onMouseUp = function() {};\n\n/**\n * Triggered when the mouse leaves the map's container\n * @name MODE.onMouseOut\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onMouseOut = function() {};\n\n/**\n * Triggered when a key up event is detected\n * @name MODE.onKeyUp\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onKeyUp = function() {};\n\n/**\n * Triggered when a key down event is detected\n * @name MODE.onKeyDown\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onKeyDown = function() {};\n\n/**\n * Triggered when a touch event is started\n * @name MODE.onTouchStart\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onTouchStart = function() {};\n\n/**\n * Triggered when one drags thier finger on a mobile device\n * @name MODE.onTouchMove\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onTouchMove = function() {};\n\n/**\n * Triggered when one removes their finger from the map\n * @name MODE.onTouchEnd\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onTouchEnd = function() {};\n\n/**\n * Triggered when one quicly taps the map\n * @name MODE.onTap\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onTap = function() {};\n\n/**\n * Triggered when the mode is being exited, to be used for cleaning up artifacts such as invalid features\n * @name MODE.onStop\n * @param state {Object} - a mutible state object created by onSetup\n */\nModeInterface.prototype.onStop = function() {};\n\n/**\n * Triggered when [draw.trash()](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#trash-draw) is called.\n * @name MODE.onTrash\n * @param state {Object} - a mutible state object created by onSetup\n */\nModeInterface.prototype.onTrash = function() {};\n\n/**\n * Triggered when [draw.combineFeatures()](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#combinefeatures-draw) is called.\n * @name MODE.onCombineFeature\n * @param state {Object} - a mutible state object created by onSetup\n */\nModeInterface.prototype.onCombineFeature = function() {};\n\n/**\n * Triggered when [draw.uncombineFeatures()](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#uncombinefeatures-draw) is called.\n * @name MODE.onUncombineFeature\n * @param state {Object} - a mutible state object created by onSetup\n */\nModeInterface.prototype.onUncombineFeature = function() {};\n\n/**\n * Triggered per feature on render to convert raw features into set of features for display on the map\n * See [styling draw](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#styling-draw) for information about what geojson properties Draw uses as part of rendering.\n * @name MODE.toDisplayFeatures\n * @param state {Object} - a mutible state object created by onSetup\n * @param geojson {Object} - a geojson being evaulated. To render, pass to `display`.\n * @param display {Function} - all geojson objects passed to this be rendered onto the map\n */\nModeInterface.prototype.toDisplayFeatures = function() {\n  throw new Error('You must overwrite toDisplayFeatures');\n};\n\n", "import ModeInterface from './mode_interface';\n\nconst eventMapper = {\n  drag: 'onDrag',\n  click: 'onClick',\n  mousemove: 'onMouseMove',\n  mousedown: 'onMouseDown',\n  mouseup: 'onMouseUp',\n  mouseout: 'onMouseOut',\n  keyup: 'onKeyUp',\n  keydown: 'onKeyDown',\n  touchstart: 'onTouchStart',\n  touchmove: 'onTouchMove',\n  touchend: 'onTouchEnd',\n  tap: 'onTap'\n};\n\nconst eventKeys = Object.keys(eventMapper);\n\nexport default function(modeObject) {\n  const modeObjectKeys = Object.keys(modeObject);\n\n  return function(ctx, startOpts = {}) {\n    let state = {};\n\n    const mode = modeObjectKeys.reduce((m, k) => {\n      m[k] = modeObject[k];\n      return m;\n    }, new ModeInterface(ctx));\n\n    function wrapper(eh) {\n      return e => mode[eh](state, e);\n    }\n\n    return {\n      start() {\n        state = mode.onSetup(startOpts); // this should set ui buttons\n\n        // Adds event handlers for all event options\n        // add sets the selector to false for all\n        // handlers that are not present in the mode\n        // to reduce on render calls for functions that\n        // have no logic\n        eventKeys.forEach((key) => {\n          const modeHandler = eventMapper[key];\n          let selector = () => false;\n          if (modeObject[modeHandler]) {\n            selector = () => true;\n          }\n          this.on(key, selector, wrapper(modeHandler));\n        });\n\n      },\n      stop() {\n        mode.onStop(state);\n      },\n      trash() {\n        mode.onTrash(state);\n      },\n      combineFeatures() {\n        mode.onCombineFeatures(state);\n      },\n      uncombineFeatures() {\n        mode.onUncombineFeatures(state);\n      },\n      render(geojson, push) {\n        mode.toDisplayFeatures(state, geojson, push);\n      }\n    };\n  };\n}\n", "/**\n * Derive a dense array (no `undefined`s) from a single value or array.\n *\n * @param {any} x\n * @return {Array<any>}\n */\nfunction toDenseArray(x) {\n  return [].concat(x).filter(y => y !== undefined);\n}\n\nexport default toDenseArray;\n", "import * as Constants from './constants';\n\nexport default function render() {\n  // eslint-disable-next-line no-invalid-this\n  const store = this;\n  const mapExists = store.ctx.map && store.ctx.map.getSource(Constants.sources.HOT) !== undefined;\n  if (!mapExists) return cleanup();\n\n  const mode = store.ctx.events.currentModeName();\n\n  store.ctx.ui.queueMapClasses({ mode });\n\n  let newHotIds = [];\n  let newColdIds = [];\n\n  if (store.isDirty) {\n    newColdIds = store.getAllIds();\n  } else {\n    newHotIds = store.getChangedIds().filter(id => store.get(id) !== undefined);\n    newColdIds = store.sources.hot.filter(geojson => geojson.properties.id && newHotIds.indexOf(geojson.properties.id) === -1 && store.get(geojson.properties.id) !== undefined).map(geojson => geojson.properties.id);\n  }\n\n  store.sources.hot = [];\n  const lastColdCount = store.sources.cold.length;\n  store.sources.cold = store.isDirty ? [] : store.sources.cold.filter((geojson) => {\n    const id = geojson.properties.id || geojson.properties.parent;\n    return newHotIds.indexOf(id) === -1;\n  });\n\n  const coldChanged = lastColdCount !== store.sources.cold.length || newColdIds.length > 0;\n  newHotIds.forEach(id => renderFeature(id, 'hot'));\n  newColdIds.forEach(id => renderFeature(id, 'cold'));\n\n  function renderFeature(id, source) {\n    const feature = store.get(id);\n    const featureInternal = feature.internal(mode);\n    store.ctx.events.currentModeRender(featureInternal, (geojson) => {\n      store.sources[source].push(geojson);\n    });\n  }\n\n  if (coldChanged) {\n    store.ctx.map.getSource(Constants.sources.COLD).setData({\n      type: Constants.geojsonTypes.FEATURE_COLLECTION,\n      features: store.sources.cold\n    });\n  }\n\n  store.ctx.map.getSource(Constants.sources.HOT).setData({\n    type: Constants.geojsonTypes.FEATURE_COLLECTION,\n    features: store.sources.hot\n  });\n\n  if (store._emitSelectionChange) {\n    store.ctx.map.fire(Constants.events.SELECTION_CHANGE, {\n      features: store.getSelected().map(feature => feature.toGeoJSON()),\n      points: store.getSelectedCoordinates().map(coordinate => ({\n        type: Constants.geojsonTypes.FEATURE,\n        properties: {},\n        geometry: {\n          type: Constants.geojsonTypes.POINT,\n          coordinates: coordinate.coordinates\n        }\n      }))\n    });\n    store._emitSelectionChange = false;\n  }\n\n  if (store._deletedFeaturesToEmit.length) {\n    const geojsonToEmit = store._deletedFeaturesToEmit.map(feature => feature.toGeoJSON());\n\n    store._deletedFeaturesToEmit = [];\n\n    store.ctx.map.fire(Constants.events.DELETE, {\n      features: geojsonToEmit\n    });\n  }\n\n  cleanup();\n  store.ctx.map.fire(Constants.events.RENDER, {});\n\n  function cleanup() {\n    store.isDirty = false;\n    store.clearChangedIds();\n  }\n}\n", "import toDenseArray from './lib/to_dense_array';\nimport StringSet from './lib/string_set';\nimport render from './render';\nimport {interactions} from './constants';\n\nexport default function Store(ctx) {\n  this._features = {};\n  this._featureIds = new StringSet();\n  this._selectedFeatureIds = new StringSet();\n  this._selectedCoordinates = [];\n  this._changedFeatureIds = new StringSet();\n  this._deletedFeaturesToEmit = [];\n  this._emitSelectionChange = false;\n  this._mapInitialConfig = {};\n  this.ctx = ctx;\n  this.sources = {\n    hot: [],\n    cold: []\n  };\n\n  // Deduplicate requests to render and tie them to animation frames.\n  let renderRequest;\n  this.render = () => {\n    if (!renderRequest) {\n      renderRequest = requestAnimationFrame(() => {\n        renderRequest = null;\n        render.call(this);\n      });\n    }\n  };\n  this.isDirty = false;\n}\n\n\n/**\n * Delays all rendering until the returned function is invoked\n * @return {Function} renderBatch\n */\nStore.prototype.createRenderBatch = function() {\n  const holdRender = this.render;\n  let numRenders = 0;\n  this.render = function() {\n    numRenders++;\n  };\n\n  return () => {\n    this.render = holdRender;\n    if (numRenders > 0) {\n      this.render();\n    }\n  };\n};\n\n/**\n * Sets the store's state to dirty.\n * @return {Store} this\n */\nStore.prototype.setDirty = function() {\n  this.isDirty = true;\n  return this;\n};\n\n/**\n * Sets a feature's state to changed.\n * @param {string} featureId\n * @return {Store} this\n */\nStore.prototype.featureChanged = function(featureId) {\n  this._changedFeatureIds.add(featureId);\n  return this;\n};\n\n/**\n * Gets the ids of all features currently in changed state.\n * @return {Store} this\n */\nStore.prototype.getChangedIds = function() {\n  return this._changedFeatureIds.values();\n};\n\n/**\n * Sets all features to unchanged state.\n * @return {Store} this\n */\nStore.prototype.clearChangedIds = function() {\n  this._changedFeatureIds.clear();\n  return this;\n};\n\n/**\n * Gets the ids of all features in the store.\n * @return {Store} this\n */\nStore.prototype.getAllIds = function() {\n  return this._featureIds.values();\n};\n\n/**\n * Adds a feature to the store.\n * @param {Object} feature\n *\n * @return {Store} this\n */\nStore.prototype.add = function(feature) {\n  this.featureChanged(feature.id);\n  this._features[feature.id] = feature;\n  this._featureIds.add(feature.id);\n  return this;\n};\n\n/**\n * Deletes a feature or array of features from the store.\n * Cleans up after the deletion by deselecting the features.\n * If changes were made, sets the state to the dirty\n * and fires an event.\n * @param {string | Array<string>} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.delete = function(featureIds, options = {}) {\n  toDenseArray(featureIds).forEach((id) => {\n    if (!this._featureIds.has(id)) return;\n    this._featureIds.delete(id);\n    this._selectedFeatureIds.delete(id);\n    if (!options.silent) {\n      if (this._deletedFeaturesToEmit.indexOf(this._features[id]) === -1) {\n        this._deletedFeaturesToEmit.push(this._features[id]);\n      }\n    }\n    delete this._features[id];\n    this.isDirty = true;\n  });\n  refreshSelectedCoordinates(this, options);\n  return this;\n};\n\n/**\n * Returns a feature in the store matching the specified value.\n * @return {Object | undefined} feature\n */\nStore.prototype.get = function(id) {\n  return this._features[id];\n};\n\n/**\n * Returns all features in the store.\n * @return {Array<Object>}\n */\nStore.prototype.getAll = function() {\n  return Object.keys(this._features).map(id => this._features[id]);\n};\n\n/**\n * Adds features to the current selection.\n * @param {string | Array<string>} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.select = function(featureIds, options = {}) {\n  toDenseArray(featureIds).forEach((id) => {\n    if (this._selectedFeatureIds.has(id)) return;\n    this._selectedFeatureIds.add(id);\n    this._changedFeatureIds.add(id);\n    if (!options.silent) {\n      this._emitSelectionChange = true;\n    }\n  });\n  return this;\n};\n\n/**\n * Deletes features from the current selection.\n * @param {string | Array<string>} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.deselect = function(featureIds, options = {}) {\n  toDenseArray(featureIds).forEach((id) => {\n    if (!this._selectedFeatureIds.has(id)) return;\n    this._selectedFeatureIds.delete(id);\n    this._changedFeatureIds.add(id);\n    if (!options.silent) {\n      this._emitSelectionChange = true;\n    }\n  });\n  refreshSelectedCoordinates(this, options);\n  return this;\n};\n\n/**\n * Clears the current selection.\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.clearSelected = function(options = {}) {\n  this.deselect(this._selectedFeatureIds.values(), { silent: options.silent });\n  return this;\n};\n\n/**\n * Sets the store's selection, clearing any prior values.\n * If no feature ids are passed, the store is just cleared.\n * @param {string | Array<string> | undefined} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.setSelected = function(featureIds, options = {}) {\n  featureIds = toDenseArray(featureIds);\n\n  // Deselect any features not in the new selection\n  this.deselect(this._selectedFeatureIds.values().filter(id => featureIds.indexOf(id) === -1), { silent: options.silent });\n\n  // Select any features in the new selection that were not already selected\n  this.select(featureIds.filter(id => !this._selectedFeatureIds.has(id)), { silent: options.silent });\n\n  return this;\n};\n\n/**\n * Sets the store's coordinates selection, clearing any prior values.\n * @param {Array<Array<string>>} coordinates\n * @return {Store} this\n */\nStore.prototype.setSelectedCoordinates = function(coordinates) {\n  this._selectedCoordinates = coordinates;\n  this._emitSelectionChange = true;\n  return this;\n};\n\n/**\n * Clears the current coordinates selection.\n * @param {Object} [options]\n * @return {Store} this\n */\nStore.prototype.clearSelectedCoordinates = function() {\n  this._selectedCoordinates = [];\n  this._emitSelectionChange = true;\n  return this;\n};\n\n/**\n * Returns the ids of features in the current selection.\n * @return {Array<string>} Selected feature ids.\n */\nStore.prototype.getSelectedIds = function() {\n  return this._selectedFeatureIds.values();\n};\n\n/**\n * Returns features in the current selection.\n * @return {Array<Object>} Selected features.\n */\nStore.prototype.getSelected = function() {\n  return this._selectedFeatureIds.values().map(id => this.get(id));\n};\n\n/**\n * Returns selected coordinates in the currently selected feature.\n * @return {Array<Object>} Selected coordinates.\n */\nStore.prototype.getSelectedCoordinates = function() {\n  const selected = this._selectedCoordinates.map((coordinate) => {\n    const feature = this.get(coordinate.feature_id);\n    return {\n      coordinates: feature.getCoordinate(coordinate.coord_path)\n    };\n  });\n  return selected;\n};\n\n/**\n * Indicates whether a feature is selected.\n * @param {string} featureId\n * @return {boolean} `true` if the feature is selected, `false` if not.\n */\nStore.prototype.isSelected = function(featureId) {\n  return this._selectedFeatureIds.has(featureId);\n};\n\n/**\n * Sets a property on the given feature\n * @param {string} featureId\n * @param {string} property property\n * @param {string} property value\n*/\nStore.prototype.setFeatureProperty = function(featureId, property, value) {\n  this.get(featureId).setProperty(property, value);\n  this.featureChanged(featureId);\n};\n\nfunction refreshSelectedCoordinates(store, options) {\n  const newSelectedCoordinates = store._selectedCoordinates.filter(point => store._selectedFeatureIds.has(point.feature_id));\n  if (store._selectedCoordinates.length !== newSelectedCoordinates.length && !options.silent) {\n    store._emitSelectionChange = true;\n  }\n  store._selectedCoordinates = newSelectedCoordinates;\n}\n\n/**\n * Stores the initial config for a map, so that we can set it again after we're done.\n*/\nStore.prototype.storeMapConfig = function() {\n  interactions.forEach((interaction) => {\n    const interactionSet = this.ctx.map[interaction];\n    if (interactionSet) {\n      this._mapInitialConfig[interaction] = this.ctx.map[interaction].isEnabled();\n    }\n  });\n};\n\n/**\n * Restores the initial config for a map, ensuring all is well.\n*/\nStore.prototype.restoreMapConfig = function() {\n  Object.keys(this._mapInitialConfig).forEach((key) => {\n    const value = this._mapInitialConfig[key];\n    if (value) {\n      this.ctx.map[key].enable();\n    } else {\n      this.ctx.map[key].disable();\n    }\n  });\n};\n\n/**\n * Returns the initial state of an interaction setting.\n * @param {string} interaction\n * @return {boolean} `true` if the interaction is enabled, `false` if not.\n * Defaults to `true`. (Todo: include defaults.)\n*/\nStore.prototype.getInitialConfigValue = function(interaction) {\n  if (this._mapInitialConfig[interaction] !== undefined) {\n    return this._mapInitialConfig[interaction];\n  } else {\n    // This needs to be set to whatever the default is for that interaction\n    // It seems to be true for all cases currently, so let's send back `true`.\n    return true;\n  }\n};\n", "module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n", "import xtend from 'xtend';\nimport * as Constants from './constants';\n\nconst classTypes = ['mode', 'feature', 'mouse'];\n\nexport default function(ctx) {\n\n\n  const buttonElements = {};\n  let activeButton = null;\n\n  let currentMapClasses = {\n    mode: null, // e.g. mode-direct_select\n    feature: null, // e.g. feature-vertex\n    mouse: null // e.g. mouse-move\n  };\n\n  let nextMapClasses = {\n    mode: null,\n    feature: null,\n    mouse: null\n  };\n\n  function clearMapClasses() {\n    queueMapClasses({mode:null, feature:null, mouse:null});\n    updateMapClasses();\n  }\n\n  function queueMapClasses(options) {\n    nextMapClasses = xtend(nextMapClasses, options);\n  }\n\n  function updateMapClasses() {\n    if (!ctx.container) return;\n\n    const classesToRemove = [];\n    const classesToAdd = [];\n\n    classTypes.forEach((type) => {\n      if (nextMapClasses[type] === currentMapClasses[type]) return;\n\n      classesToRemove.push(`${type}-${currentMapClasses[type]}`);\n      if (nextMapClasses[type] !== null) {\n        classesToAdd.push(`${type}-${nextMapClasses[type]}`);\n      }\n    });\n\n    if (classesToRemove.length > 0) {\n      ctx.container.classList.remove(...classesToRemove);\n    }\n\n    if (classesToAdd.length > 0) {\n      ctx.container.classList.add(...classesToAdd);\n    }\n\n    currentMapClasses = xtend(currentMapClasses, nextMapClasses);\n  }\n\n  function createControlButton(id, options = {}) {\n    const button = document.createElement('button');\n    button.className = `${Constants.classes.CONTROL_BUTTON} ${options.className}`;\n    button.setAttribute('title', options.title);\n    options.container.appendChild(button);\n\n    button.addEventListener('click', (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const clickedButton = e.target;\n      if (clickedButton === activeButton) {\n        deactivateButtons();\n        options.onDeactivate();\n        return;\n      }\n\n      setActiveButton(id);\n      options.onActivate();\n    }, true);\n\n    return button;\n  }\n\n  function deactivateButtons() {\n    if (!activeButton) return;\n    activeButton.classList.remove(Constants.classes.ACTIVE_BUTTON);\n    activeButton = null;\n  }\n\n  function setActiveButton(id) {\n    deactivateButtons();\n\n    const button = buttonElements[id];\n    if (!button) return;\n\n    if (button && id !== 'trash') {\n      button.classList.add(Constants.classes.ACTIVE_BUTTON);\n      activeButton = button;\n    }\n  }\n\n  function addButtons() {\n    const controls = ctx.options.controls;\n    const controlGroup = document.createElement('div');\n    controlGroup.className = `${Constants.classes.CONTROL_GROUP} ${Constants.classes.CONTROL_BASE}`;\n\n    if (!controls) return controlGroup;\n\n    if (controls[Constants.types.LINE]) {\n      buttonElements[Constants.types.LINE] = createControlButton(Constants.types.LINE, {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_LINE,\n        title: `LineString tool ${ctx.options.keybindings ? '(l)' : ''}`,\n        onActivate: () => ctx.events.changeMode(Constants.modes.DRAW_LINE_STRING),\n        onDeactivate: () => ctx.events.trash()\n      });\n    }\n\n    if (controls[Constants.types.POLYGON]) {\n      buttonElements[Constants.types.POLYGON] = createControlButton(Constants.types.POLYGON, {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_POLYGON,\n        title: `Polygon tool ${ctx.options.keybindings ? '(p)' : ''}`,\n        onActivate: () => ctx.events.changeMode(Constants.modes.DRAW_POLYGON),\n        onDeactivate: () => ctx.events.trash()\n      });\n    }\n\n    if (controls[Constants.types.POINT]) {\n      buttonElements[Constants.types.POINT] = createControlButton(Constants.types.POINT, {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_POINT,\n        title: `Marker tool ${ctx.options.keybindings ? '(m)' : ''}`,\n        onActivate: () => ctx.events.changeMode(Constants.modes.DRAW_POINT),\n        onDeactivate: () => ctx.events.trash()\n      });\n    }\n\n    if (controls.trash) {\n      buttonElements.trash = createControlButton('trash', {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_TRASH,\n        title: 'Delete',\n        onActivate: () => {\n          ctx.events.trash();\n        }\n      });\n    }\n\n    if (controls.combine_features) {\n      buttonElements.combine_features = createControlButton('combineFeatures', {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_COMBINE_FEATURES,\n        title: 'Combine',\n        onActivate: () => {\n          ctx.events.combineFeatures();\n        }\n      });\n    }\n\n    if (controls.uncombine_features) {\n      buttonElements.uncombine_features = createControlButton('uncombineFeatures', {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_UNCOMBINE_FEATURES,\n        title: 'Uncombine',\n        onActivate: () => {\n          ctx.events.uncombineFeatures();\n        }\n      });\n    }\n\n    return controlGroup;\n  }\n\n  function removeButtons() {\n    Object.keys(buttonElements).forEach((buttonId) => {\n      const button = buttonElements[buttonId];\n      if (button.parentNode) {\n        button.parentNode.removeChild(button);\n      }\n      delete buttonElements[buttonId];\n    });\n  }\n\n  return {\n    setActiveButton,\n    queueMapClasses,\n    updateMapClasses,\n    clearMapClasses,\n    addButtons,\n    removeButtons\n  };\n}\n", "import events from './events';\nimport Store from './store';\nimport ui from './ui';\nimport * as Constants from './constants';\nimport xtend from 'xtend';\n\nexport default function(ctx) {\n\n  let controlContainer = null;\n  let mapLoadedInterval = null;\n\n  const setup = {\n    onRemove() {\n      // Stop connect attempt in the event that control is removed before map is loaded\n      ctx.map.off('load', setup.connect);\n      clearInterval(mapLoadedInterval);\n\n      setup.removeLayers();\n      ctx.store.restoreMapConfig();\n      ctx.ui.removeButtons();\n      ctx.events.removeEventListeners();\n      ctx.ui.clearMapClasses();\n      ctx.map = null;\n      ctx.container = null;\n      ctx.store = null;\n\n      if (controlContainer && controlContainer.parentNode) controlContainer.parentNode.removeChild(controlContainer);\n      controlContainer = null;\n\n      return this;\n    },\n    connect() {\n      ctx.map.off('load', setup.connect);\n      clearInterval(mapLoadedInterval);\n      setup.addLayers();\n      ctx.store.storeMapConfig();\n      ctx.events.addEventListeners();\n    },\n    onAdd(map) {\n      if (process.env.NODE_ENV !== 'test') {\n        // Monkey patch to resolve breaking change to `fire` introduced by\n        // mapbox-gl-js. See mapbox/mapbox-gl-draw/issues/766.\n        const _fire = map.fire;\n        map.fire = function(type, event) {\n          // eslint-disable-next-line\n          let args = arguments;\n\n          if (_fire.length === 1 && arguments.length !== 1) {\n            args = [xtend({}, { type }, event)];\n          }\n\n          return _fire.apply(map, args);\n        };\n      }\n\n      ctx.map = map;\n      ctx.events = events(ctx);\n      ctx.ui = ui(ctx);\n      ctx.container = map.getContainer();\n      ctx.store = new Store(ctx);\n\n\n      controlContainer = ctx.ui.addButtons();\n\n      if (ctx.options.boxSelect) {\n        map.boxZoom.disable();\n        // Need to toggle dragPan on and off or else first\n        // dragPan disable attempt in simple_select doesn't work\n        map.dragPan.disable();\n        map.dragPan.enable();\n      }\n\n      if (map.loaded()) {\n        setup.connect();\n      } else {\n        map.on('load', setup.connect);\n        mapLoadedInterval = setInterval(() => { if (map.loaded()) setup.connect(); }, 16);\n      }\n\n      ctx.events.start();\n      return controlContainer;\n    },\n    addLayers() {\n      // drawn features style\n      ctx.map.addSource(Constants.sources.COLD, {\n        data: {\n          type: Constants.geojsonTypes.FEATURE_COLLECTION,\n          features: []\n        },\n        type: 'geojson'\n      });\n\n      // hot features style\n      ctx.map.addSource(Constants.sources.HOT, {\n        data: {\n          type: Constants.geojsonTypes.FEATURE_COLLECTION,\n          features: []\n        },\n        type: 'geojson'\n      });\n\n      ctx.options.styles.forEach((style) => {\n        ctx.map.addLayer(style);\n      });\n\n      ctx.store.setDirty(true);\n      ctx.store.render();\n    },\n    // Check for layers and sources before attempting to remove\n    // If user adds draw control and removes it before the map is loaded, layers and sources will be missing\n    removeLayers() {\n      ctx.options.styles.forEach((style) => {\n        if (ctx.map.getLayer(style.id)) {\n          ctx.map.removeLayer(style.id);\n        }\n      });\n\n      if (ctx.map.getSource(Constants.sources.COLD)) {\n        ctx.map.removeSource(Constants.sources.COLD);\n      }\n\n      if (ctx.map.getSource(Constants.sources.HOT)) {\n        ctx.map.removeSource(Constants.sources.HOT);\n      }\n    }\n  };\n\n  ctx.setup = setup;\n\n  return setup;\n}\n", "import setupModeHandler from './lib/mode_handler';\nimport getFeaturesAndSetCursor from './lib/get_features_and_set_cursor';\nimport featuresAt from './lib/features_at';\nimport isClick from './lib/is_click';\nimport isTap from './lib/is_tap';\nimport * as Constants from './constants';\nimport objectToMode from './modes/object_to_mode';\n\nexport default function(ctx) {\n\n  const modes = Object.keys(ctx.options.modes).reduce((m, k) => {\n    m[k] = objectToMode(ctx.options.modes[k]);\n    return m;\n  }, {});\n\n  let mouseDownInfo = {};\n  let touchStartInfo = {};\n  const events = {};\n  let currentModeName = null;\n  let currentMode = null;\n\n  events.drag = function(event, isDrag) {\n    if (isDrag({\n      point: event.point,\n      time: new Date().getTime()\n    })) {\n      ctx.ui.queueMapClasses({ mouse: Constants.cursors.DRAG });\n      currentMode.drag(event);\n    } else {\n      event.originalEvent.stopPropagation();\n    }\n  };\n\n  events.mousedrag = function(event) {\n    events.drag(event, endInfo => !isClick(mouseDownInfo, endInfo));\n  };\n\n  events.touchdrag = function(event) {\n    events.drag(event, endInfo => !isTap(touchStartInfo, endInfo));\n  };\n\n  events.mousemove = function(event) {\n    const button = event.originalEvent.buttons !== undefined ? event.originalEvent.buttons : event.originalEvent.which;\n    if (button === 1) {\n      return events.mousedrag(event);\n    }\n    const target = getFeaturesAndSetCursor(event, ctx);\n    event.featureTarget = target;\n    currentMode.mousemove(event);\n  };\n\n  events.mousedown = function(event) {\n    mouseDownInfo = {\n      time: new Date().getTime(),\n      point: event.point\n    };\n    const target = getFeaturesAndSetCursor(event, ctx);\n    event.featureTarget = target;\n    currentMode.mousedown(event);\n  };\n\n  events.mouseup = function(event) {\n    const target = getFeaturesAndSetCursor(event, ctx);\n    event.featureTarget = target;\n\n    if (isClick(mouseDownInfo, {\n      point: event.point,\n      time: new Date().getTime()\n    })) {\n      currentMode.click(event);\n    } else {\n      currentMode.mouseup(event);\n    }\n  };\n\n  events.mouseout = function(event) {\n    currentMode.mouseout(event);\n  };\n\n  events.touchstart = function(event) {\n    // Prevent emulated mouse events because we will fully handle the touch here.\n    // This does not stop the touch events from propogating to mapbox though.\n    event.originalEvent.preventDefault();\n    if (!ctx.options.touchEnabled) {\n      return;\n    }\n\n    touchStartInfo = {\n      time: new Date().getTime(),\n      point: event.point\n    };\n    const target = featuresAt.touch(event, null, ctx)[0];\n    event.featureTarget = target;\n    currentMode.touchstart(event);\n  };\n\n  events.touchmove = function(event) {\n    event.originalEvent.preventDefault();\n    if (!ctx.options.touchEnabled) {\n      return;\n    }\n\n    currentMode.touchmove(event);\n    return events.touchdrag(event);\n  };\n\n  events.touchend = function(event) {\n    event.originalEvent.preventDefault();\n    if (!ctx.options.touchEnabled) {\n      return;\n    }\n\n    const target = featuresAt.touch(event, null, ctx)[0];\n    event.featureTarget = target;\n    if (isTap(touchStartInfo, {\n      time: new Date().getTime(),\n      point: event.point\n    })) {\n      currentMode.tap(event);\n    } else {\n      currentMode.touchend(event);\n    }\n  };\n\n  // 8 - Backspace\n  // 46 - Delete\n  const isKeyModeValid = code => !(code === 8 || code === 46 || (code >= 48 && code <= 57));\n\n  events.keydown = function(event) {\n    if ((event.srcElement || event.target).classList[0] !== 'mapboxgl-canvas') return; // we only handle events on the map\n\n    if ((event.keyCode === 8 || event.keyCode === 46) && ctx.options.controls.trash) {\n      event.preventDefault();\n      currentMode.trash();\n    } else if (isKeyModeValid(event.keyCode)) {\n      currentMode.keydown(event);\n    } else if (event.keyCode === 49 && ctx.options.controls.point) {\n      changeMode(Constants.modes.DRAW_POINT);\n    } else if (event.keyCode === 50 && ctx.options.controls.line_string) {\n      changeMode(Constants.modes.DRAW_LINE_STRING);\n    } else if (event.keyCode === 51 && ctx.options.controls.polygon) {\n      changeMode(Constants.modes.DRAW_POLYGON);\n    }\n  };\n\n  events.keyup = function(event) {\n    if (isKeyModeValid(event.keyCode)) {\n      currentMode.keyup(event);\n    }\n  };\n\n  events.zoomend = function() {\n    ctx.store.changeZoom();\n  };\n\n  events.data = function(event) {\n    if (event.dataType === 'style') {\n      const { setup, map, options, store } = ctx;\n      const hasLayers = options.styles.some(style => map.getLayer(style.id));\n      if (!hasLayers) {\n        setup.addLayers();\n        store.setDirty();\n        store.render();\n      }\n    }\n  };\n\n  function changeMode(modename, nextModeOptions, eventOptions = {}) {\n    currentMode.stop();\n\n    const modebuilder = modes[modename];\n    if (modebuilder === undefined) {\n      throw new Error(`${modename} is not valid`);\n    }\n    currentModeName = modename;\n    const mode = modebuilder(ctx, nextModeOptions);\n    currentMode = setupModeHandler(mode, ctx);\n\n    if (!eventOptions.silent) {\n      ctx.map.fire(Constants.events.MODE_CHANGE, { mode: modename});\n    }\n\n    ctx.store.setDirty();\n    ctx.store.render();\n  }\n\n  const actionState = {\n    trash: false,\n    combineFeatures: false,\n    uncombineFeatures: false\n  };\n\n  function actionable(actions) {\n    let changed = false;\n    Object.keys(actions).forEach((action) => {\n      if (actionState[action] === undefined) throw new Error('Invalid action type');\n      if (actionState[action] !== actions[action]) changed = true;\n      actionState[action] = actions[action];\n    });\n    if (changed) ctx.map.fire(Constants.events.ACTIONABLE, { actions: actionState });\n  }\n\n  const api = {\n    start() {\n      currentModeName = ctx.options.defaultMode;\n      currentMode = setupModeHandler(modes[currentModeName](ctx), ctx);\n    },\n    changeMode,\n    actionable,\n    currentModeName() {\n      return currentModeName;\n    },\n    currentModeRender(geojson, push) {\n      return currentMode.render(geojson, push);\n    },\n    fire(name, event) {\n      if (events[name]) {\n        events[name](event);\n      }\n    },\n    addEventListeners() {\n      ctx.map.on('mousemove', events.mousemove);\n      ctx.map.on('mousedown', events.mousedown);\n      ctx.map.on('mouseup', events.mouseup);\n      ctx.map.on('data', events.data);\n\n      ctx.map.on('touchmove', events.touchmove);\n      ctx.map.on('touchstart', events.touchstart);\n      ctx.map.on('touchend', events.touchend);\n\n      ctx.container.addEventListener('mouseout', events.mouseout);\n\n      if (ctx.options.keybindings) {\n        ctx.container.addEventListener('keydown', events.keydown);\n        ctx.container.addEventListener('keyup', events.keyup);\n      }\n    },\n    removeEventListeners() {\n      ctx.map.off('mousemove', events.mousemove);\n      ctx.map.off('mousedown', events.mousedown);\n      ctx.map.off('mouseup', events.mouseup);\n      ctx.map.off('data', events.data);\n\n      ctx.map.off('touchmove', events.touchmove);\n      ctx.map.off('touchstart', events.touchstart);\n      ctx.map.off('touchend', events.touchend);\n\n      ctx.container.removeEventListener('mouseout', events.mouseout);\n\n      if (ctx.options.keybindings) {\n        ctx.container.removeEventListener('keydown', events.keydown);\n        ctx.container.removeEventListener('keyup', events.keyup);\n      }\n    },\n    trash(options) {\n      currentMode.trash(options);\n    },\n    combineFeatures() {\n      currentMode.combineFeatures();\n    },\n    uncombineFeatures() {\n      currentMode.uncombineFeatures();\n    },\n    getMode() {\n      return currentModeName;\n    }\n  };\n\n  return api;\n}\n", "import * as Constants from '../constants';\n\nexport function isOfMetaType(type) {\n  return function(e) {\n    const featureTarget = e.featureTarget;\n    if (!featureTarget) return false;\n    if (!featureTarget.properties) return false;\n    return featureTarget.properties.meta === type;\n  };\n}\n\nexport function isShiftMousedown(e) {\n  if (!e.originalEvent) return false;\n  if (!e.originalEvent.shiftKey) return false;\n  return e.originalEvent.button === 0;\n}\n\nexport function isActiveFeature(e) {\n  if (!e.featureTarget) return false;\n  if (!e.featureTarget.properties) return false;\n  return e.featureTarget.properties.active === Constants.activeStates.ACTIVE &&\n    e.featureTarget.properties.meta === Constants.meta.FEATURE;\n}\n\nexport function isInactiveFeature(e) {\n  if (!e.featureTarget) return false;\n  if (!e.featureTarget.properties) return false;\n  return e.featureTarget.properties.active === Constants.activeStates.INACTIVE &&\n    e.featureTarget.properties.meta === Constants.meta.FEATURE;\n}\n\nexport function noTarget(e) {\n  return e.featureTarget === undefined;\n}\n\nexport function isFeature(e) {\n  if (!e.featureTarget) return false;\n  if (!e.featureTarget.properties) return false;\n  return e.featureTarget.properties.meta === Constants.meta.FEATURE;\n}\n\nexport function isVertex(e) {\n  const featureTarget = e.featureTarget;\n  if (!featureTarget) return false;\n  if (!featureTarget.properties) return false;\n  return featureTarget.properties.meta === Constants.meta.VERTEX;\n}\n\nexport function isShiftDown(e) {\n  if (!e.originalEvent) return false;\n  return e.originalEvent.shiftKey === true;\n}\n\nexport function isEscapeKey(e) {\n  return e.keyCode === 27;\n}\n\nexport function isEnterKey(e) {\n  return e.keyCode === 13;\n}\n\nexport function isTrue() {\n  return true;\n}\n", "'use strict';\n\nmodule.exports = Point;\n\n/**\n * A standalone point geometry with useful accessor, comparison, and\n * modification methods.\n *\n * @class Point\n * @param {Number} x the x-coordinate. this could be longitude or screen\n * pixels, or any other sort of unit.\n * @param {Number} y the y-coordinate. this could be latitude or screen\n * pixels, or any other sort of unit.\n * @example\n * var point = new Point(-77, 38);\n */\nfunction Point(x, y) {\n    this.x = x;\n    this.y = y;\n}\n\nPoint.prototype = {\n\n    /**\n     * Clone this point, returning a new point that can be modified\n     * without affecting the old one.\n     * @return {Point} the clone\n     */\n    clone: function() { return new Point(this.x, this.y); },\n\n    /**\n     * Add this point's x & y coordinates to another point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    add:     function(p) { return this.clone()._add(p); },\n\n    /**\n     * Subtract this point's x & y coordinates to from point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    sub:     function(p) { return this.clone()._sub(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    multByPoint:    function(p) { return this.clone()._multByPoint(p); },\n\n    /**\n     * Divide this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    divByPoint:     function(p) { return this.clone()._divByPoint(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {Point} k factor\n     * @return {Point} output point\n     */\n    mult:    function(k) { return this.clone()._mult(k); },\n\n    /**\n     * Divide this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {Point} k factor\n     * @return {Point} output point\n     */\n    div:     function(k) { return this.clone()._div(k); },\n\n    /**\n     * Rotate this point around the 0, 0 origin by an angle a,\n     * given in radians\n     * @param {Number} a angle to rotate around, in radians\n     * @return {Point} output point\n     */\n    rotate:  function(a) { return this.clone()._rotate(a); },\n\n    /**\n     * Rotate this point around p point by an angle a,\n     * given in radians\n     * @param {Number} a angle to rotate around, in radians\n     * @param {Point} p Point to rotate around\n     * @return {Point} output point\n     */\n    rotateAround:  function(a,p) { return this.clone()._rotateAround(a,p); },\n\n    /**\n     * Multiply this point by a 4x1 transformation matrix\n     * @param {Array<Number>} m transformation matrix\n     * @return {Point} output point\n     */\n    matMult: function(m) { return this.clone()._matMult(m); },\n\n    /**\n     * Calculate this point but as a unit vector from 0, 0, meaning\n     * that the distance from the resulting point to the 0, 0\n     * coordinate will be equal to 1 and the angle from the resulting\n     * point to the 0, 0 coordinate will be the same as before.\n     * @return {Point} unit vector point\n     */\n    unit:    function() { return this.clone()._unit(); },\n\n    /**\n     * Compute a perpendicular point, where the new y coordinate\n     * is the old x coordinate and the new x coordinate is the old y\n     * coordinate multiplied by -1\n     * @return {Point} perpendicular point\n     */\n    perp:    function() { return this.clone()._perp(); },\n\n    /**\n     * Return a version of this point with the x & y coordinates\n     * rounded to integers.\n     * @return {Point} rounded point\n     */\n    round:   function() { return this.clone()._round(); },\n\n    /**\n     * Return the magitude of this point: this is the Euclidean\n     * distance from the 0, 0 coordinate to this point's x and y\n     * coordinates.\n     * @return {Number} magnitude\n     */\n    mag: function() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    },\n\n    /**\n     * Judge whether this point is equal to another point, returning\n     * true or false.\n     * @param {Point} other the other point\n     * @return {boolean} whether the points are equal\n     */\n    equals: function(other) {\n        return this.x === other.x &&\n               this.y === other.y;\n    },\n\n    /**\n     * Calculate the distance from this point to another point\n     * @param {Point} p the other point\n     * @return {Number} distance\n     */\n    dist: function(p) {\n        return Math.sqrt(this.distSqr(p));\n    },\n\n    /**\n     * Calculate the distance from this point to another point,\n     * without the square root step. Useful if you're comparing\n     * relative distances.\n     * @param {Point} p the other point\n     * @return {Number} distance\n     */\n    distSqr: function(p) {\n        var dx = p.x - this.x,\n            dy = p.y - this.y;\n        return dx * dx + dy * dy;\n    },\n\n    /**\n     * Get the angle from the 0, 0 coordinate to this point, in radians\n     * coordinates.\n     * @return {Number} angle\n     */\n    angle: function() {\n        return Math.atan2(this.y, this.x);\n    },\n\n    /**\n     * Get the angle from this point to another point, in radians\n     * @param {Point} b the other point\n     * @return {Number} angle\n     */\n    angleTo: function(b) {\n        return Math.atan2(this.y - b.y, this.x - b.x);\n    },\n\n    /**\n     * Get the angle between this point and another point, in radians\n     * @param {Point} b the other point\n     * @return {Number} angle\n     */\n    angleWith: function(b) {\n        return this.angleWithSep(b.x, b.y);\n    },\n\n    /*\n     * Find the angle of the two vectors, solving the formula for\n     * the cross product a x b = |a||b|sin(\u03B8) for \u03B8.\n     * @param {Number} x the x-coordinate\n     * @param {Number} y the y-coordinate\n     * @return {Number} the angle in radians\n     */\n    angleWithSep: function(x, y) {\n        return Math.atan2(\n            this.x * y - this.y * x,\n            this.x * x + this.y * y);\n    },\n\n    _matMult: function(m) {\n        var x = m[0] * this.x + m[1] * this.y,\n            y = m[2] * this.x + m[3] * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _add: function(p) {\n        this.x += p.x;\n        this.y += p.y;\n        return this;\n    },\n\n    _sub: function(p) {\n        this.x -= p.x;\n        this.y -= p.y;\n        return this;\n    },\n\n    _mult: function(k) {\n        this.x *= k;\n        this.y *= k;\n        return this;\n    },\n\n    _div: function(k) {\n        this.x /= k;\n        this.y /= k;\n        return this;\n    },\n\n    _multByPoint: function(p) {\n        this.x *= p.x;\n        this.y *= p.y;\n        return this;\n    },\n\n    _divByPoint: function(p) {\n        this.x /= p.x;\n        this.y /= p.y;\n        return this;\n    },\n\n    _unit: function() {\n        this._div(this.mag());\n        return this;\n    },\n\n    _perp: function() {\n        var y = this.y;\n        this.y = this.x;\n        this.x = -y;\n        return this;\n    },\n\n    _rotate: function(angle) {\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = cos * this.x - sin * this.y,\n            y = sin * this.x + cos * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _rotateAround: function(angle, p) {\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = p.x + cos * (this.x - p.x) - sin * (this.y - p.y),\n            y = p.y + sin * (this.x - p.x) + cos * (this.y - p.y);\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _round: function() {\n        this.x = Math.round(this.x);\n        this.y = Math.round(this.y);\n        return this;\n    }\n};\n\n/**\n * Construct a point from an array if necessary, otherwise if the input\n * is already a Point, or an unknown type, return it unchanged\n * @param {Array<Number>|Point|*} a any kind of input value\n * @return {Point} constructed point, or passed-through value.\n * @example\n * // this\n * var point = Point.convert([0, 1]);\n * // is equivalent to\n * var point = new Point(0, 1);\n */\nPoint.convert = function (a) {\n    if (a instanceof Point) {\n        return a;\n    }\n    if (Array.isArray(a)) {\n        return new Point(a[0], a[1]);\n    }\n    return a;\n};\n", "import Point from '@mapbox/point-geometry';\n\n/**\n * Returns a Point representing a mouse event's position\n * relative to a containing element.\n *\n * @param {MouseEvent} mouseEvent\n * @param {Node} container\n * @returns {Point}\n */\nfunction mouseEventPoint(mouseEvent, container) {\n  const rect = container.getBoundingClientRect();\n  return new Point(\n    mouseEvent.clientX - rect.left - (container.clientLeft || 0),\n    mouseEvent.clientY - rect.top - (container.clientTop || 0)\n  );\n}\n\nexport default mouseEventPoint;\n", "import * as Constants from '../constants';\n\n/**\n * Returns GeoJSON for a Point representing the\n * vertex of another feature.\n *\n * @param {string} parentId\n * @param {Array<number>} coordinates\n * @param {string} path - Dot-separated numbers indicating exactly\n *   where the point exists within its parent feature's coordinates.\n * @param {boolean} selected\n * @return {GeoJSON} Point\n */\nexport default function(parentId, coordinates, path, selected) {\n  return {\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {\n      meta: Constants.meta.VERTEX,\n      parent: parentId,\n      coord_path: path,\n      active: (selected) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE\n    },\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates\n    }\n  };\n}\n", "import createVertex from './create_vertex';\nimport createMidpoint from './create_midpoint';\nimport * as Constants from '../constants';\n\nfunction createSupplementaryPoints(geojson, options = {}, basePath = null) {\n  const { type, coordinates } = geojson.geometry;\n  const featureId = geojson.properties && geojson.properties.id;\n\n  let supplementaryPoints = [];\n\n  if (type === Constants.geojsonTypes.POINT) {\n    // For points, just create a vertex\n    supplementaryPoints.push(createVertex(featureId, coordinates, basePath, isSelectedPath(basePath)));\n  } else if (type === Constants.geojsonTypes.POLYGON) {\n    // Cycle through a Polygon's rings and\n    // process each line\n    coordinates.forEach((line, lineIndex) => {\n      processLine(line, (basePath !== null) ? `${basePath}.${lineIndex}` : String(lineIndex));\n    });\n  } else if (type === Constants.geojsonTypes.LINE_STRING) {\n    processLine(coordinates, basePath);\n  } else if (type.indexOf(Constants.geojsonTypes.MULTI_PREFIX) === 0) {\n    processMultiGeometry();\n  }\n\n  function processLine(line, lineBasePath) {\n    let firstPointString = '';\n    let lastVertex = null;\n    line.forEach((point, pointIndex) => {\n      const pointPath = (lineBasePath !== undefined && lineBasePath !== null) ? `${lineBasePath}.${pointIndex}` : String(pointIndex);\n      const vertex = createVertex(featureId, point, pointPath, isSelectedPath(pointPath));\n\n      // If we're creating midpoints, check if there was a\n      // vertex before this one. If so, add a midpoint\n      // between that vertex and this one.\n      if (options.midpoints && lastVertex) {\n        const midpoint = createMidpoint(featureId, lastVertex, vertex);\n        if (midpoint) {\n          supplementaryPoints.push(midpoint);\n        }\n      }\n      lastVertex = vertex;\n\n      // A Polygon line's last point is the same as the first point. If we're on the last\n      // point, we want to draw a midpoint before it but not another vertex on it\n      // (since we already a vertex there, from the first point).\n      const stringifiedPoint = JSON.stringify(point);\n      if (firstPointString !== stringifiedPoint) {\n        supplementaryPoints.push(vertex);\n      }\n      if (pointIndex === 0) {\n        firstPointString = stringifiedPoint;\n      }\n    });\n  }\n\n  function isSelectedPath(path) {\n    if (!options.selectedPaths) return false;\n    return options.selectedPaths.indexOf(path) !== -1;\n  }\n\n  // Split a multi-geometry into constituent\n  // geometries, and accumulate the supplementary points\n  // for each of those constituents\n  function processMultiGeometry() {\n    const subType = type.replace(Constants.geojsonTypes.MULTI_PREFIX, '');\n    coordinates.forEach((subCoordinates, index) => {\n      const subFeature = {\n        type: Constants.geojsonTypes.FEATURE,\n        properties: geojson.properties,\n        geometry: {\n          type: subType,\n          coordinates: subCoordinates\n        }\n      };\n      supplementaryPoints = supplementaryPoints.concat(createSupplementaryPoints(subFeature, options, index));\n    });\n  }\n\n  return supplementaryPoints;\n}\n\nexport default createSupplementaryPoints;\n", "import * as Constants from '../constants';\n\nexport default function(parent, startVertex, endVertex) {\n  const startCoord = startVertex.geometry.coordinates;\n  const endCoord = endVertex.geometry.coordinates;\n\n  // If a coordinate exceeds the projection, we can't calculate a midpoint,\n  // so run away\n  if (startCoord[1] > Constants.LAT_RENDERED_MAX ||\n    startCoord[1] < Constants.LAT_RENDERED_MIN ||\n    endCoord[1] > Constants.LAT_RENDERED_MAX ||\n    endCoord[1] < Constants.LAT_RENDERED_MIN) {\n    return null;\n  }\n\n  const mid = {\n    lng: (startCoord[0] + endCoord[0]) / 2,\n    lat: (startCoord[1] + endCoord[1]) / 2\n  };\n\n  return {\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {\n      meta: Constants.meta.MIDPOINT,\n      parent,\n      lng: mid.lng,\n      lat: mid.lat,\n      coord_path: endVertex.properties.coord_path\n    },\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates: [mid.lng, mid.lat]\n    }\n  };\n}\n", "export default {\n  enable(ctx) {\n    setTimeout(() => {\n      // First check we've got a map and some context.\n      if (!ctx.map || !ctx.map.doubleClickZoom || !ctx._ctx || !ctx._ctx.store || !ctx._ctx.store.getInitialConfigValue) return;\n      // Now check initial state wasn't false (we leave it disabled if so)\n      if (!ctx._ctx.store.getInitialConfigValue('doubleClickZoom')) return;\n      ctx.map.doubleClickZoom.enable();\n    }, 0);\n  },\n  disable(ctx) {\n    setTimeout(() => {\n      if (!ctx.map || !ctx.map.doubleClickZoom) return;\n      // Always disable here, as it's necessary in some cases.\n      ctx.map.doubleClickZoom.disable();\n    }, 0);\n  }\n};\n", "module.exports = normalize;\n\nvar types = {\n    Point: 'geometry',\n    MultiPoint: 'geometry',\n    LineString: 'geometry',\n    MultiLineString: 'geometry',\n    Polygon: 'geometry',\n    MultiPolygon: 'geometry',\n    GeometryCollection: 'geometry',\n    Feature: 'feature',\n    FeatureCollection: 'featurecollection'\n};\n\n/**\n * Normalize a GeoJSON feature into a FeatureCollection.\n *\n * @param {object} gj geojson data\n * @returns {object} normalized geojson data\n */\nfunction normalize(gj) {\n    if (!gj || !gj.type) return null;\n    var type = types[gj.type];\n    if (!type) return null;\n\n    if (type === 'geometry') {\n        return {\n            type: 'FeatureCollection',\n            features: [{\n                type: 'Feature',\n                properties: {},\n                geometry: gj\n            }]\n        };\n    } else if (type === 'feature') {\n        return {\n            type: 'FeatureCollection',\n            features: [gj]\n        };\n    } else if (type === 'featurecollection') {\n        return gj;\n    }\n}\n", "export default function e(t){switch(t&&t.type||null){case\"FeatureCollection\":return t.features=t.features.reduce(function(t,r){return t.concat(e(r))},[]),t;case\"Feature\":return t.geometry?e(t.geometry).map(function(e){var r={type:\"Feature\",properties:JSON.parse(JSON.stringify(t.properties)),geometry:e};return void 0!==t.id&&(r.id=t.id),r}):[t];case\"MultiPoint\":return t.coordinates.map(function(e){return{type:\"Point\",coordinates:e}});case\"MultiPolygon\":return t.coordinates.map(function(e){return{type:\"Polygon\",coordinates:e}});case\"MultiLineString\":return t.coordinates.map(function(e){return{type:\"LineString\",coordinates:e}});case\"GeometryCollection\":return t.geometries.map(e).reduce(function(e,t){return e.concat(t)},[]);case\"Point\":case\"Polygon\":case\"LineString\":return[t]}}\n//# sourceMappingURL=index.es.js.map\n", "module.exports = function flatten(list) {\n    return _flatten(list);\n\n    function _flatten(list) {\n        if (Array.isArray(list) && list.length &&\n            typeof list[0] === 'number') {\n            return [list];\n        }\n        return list.reduce(function (acc, item) {\n            if (Array.isArray(item) && Array.isArray(item[0])) {\n                return acc.concat(_flatten(item));\n            } else {\n                acc.push(item);\n                return acc;\n            }\n        }, []);\n    }\n};\n", "var geojsonNormalize = require('@mapbox/geojson-normalize'),\n    geojsonFlatten = require('geojson-flatten'),\n    flatten = require('./flatten');\n\nmodule.exports = function(_) {\n    if (!_) return [];\n    var normalized = geojsonFlatten(geojsonNormalize(_)),\n        coordinates = [];\n    normalized.features.forEach(function(feature) {\n        if (!feature.geometry) return;\n        coordinates = coordinates.concat(flatten(feature.geometry.coordinates));\n    });\n    return coordinates;\n};\n", "var traverse = module.exports = function (obj) {\n    return new Traverse(obj);\n};\n\nfunction Traverse (obj) {\n    this.value = obj;\n}\n\nTraverse.prototype.get = function (ps) {\n    var node = this.value;\n    for (var i = 0; i < ps.length; i ++) {\n        var key = ps[i];\n        if (!node || !hasOwnProperty.call(node, key)) {\n            node = undefined;\n            break;\n        }\n        node = node[key];\n    }\n    return node;\n};\n\nTraverse.prototype.has = function (ps) {\n    var node = this.value;\n    for (var i = 0; i < ps.length; i ++) {\n        var key = ps[i];\n        if (!node || !hasOwnProperty.call(node, key)) {\n            return false;\n        }\n        node = node[key];\n    }\n    return true;\n};\n\nTraverse.prototype.set = function (ps, value) {\n    var node = this.value;\n    for (var i = 0; i < ps.length - 1; i ++) {\n        var key = ps[i];\n        if (!hasOwnProperty.call(node, key)) node[key] = {};\n        node = node[key];\n    }\n    node[ps[i]] = value;\n    return value;\n};\n\nTraverse.prototype.map = function (cb) {\n    return walk(this.value, cb, true);\n};\n\nTraverse.prototype.forEach = function (cb) {\n    this.value = walk(this.value, cb, false);\n    return this.value;\n};\n\nTraverse.prototype.reduce = function (cb, init) {\n    var skip = arguments.length === 1;\n    var acc = skip ? this.value : init;\n    this.forEach(function (x) {\n        if (!this.isRoot || !skip) {\n            acc = cb.call(this, acc, x);\n        }\n    });\n    return acc;\n};\n\nTraverse.prototype.paths = function () {\n    var acc = [];\n    this.forEach(function (x) {\n        acc.push(this.path); \n    });\n    return acc;\n};\n\nTraverse.prototype.nodes = function () {\n    var acc = [];\n    this.forEach(function (x) {\n        acc.push(this.node);\n    });\n    return acc;\n};\n\nTraverse.prototype.clone = function () {\n    var parents = [], nodes = [];\n    \n    return (function clone (src) {\n        for (var i = 0; i < parents.length; i++) {\n            if (parents[i] === src) {\n                return nodes[i];\n            }\n        }\n        \n        if (typeof src === 'object' && src !== null) {\n            var dst = copy(src);\n            \n            parents.push(src);\n            nodes.push(dst);\n            \n            forEach(objectKeys(src), function (key) {\n                dst[key] = clone(src[key]);\n            });\n            \n            parents.pop();\n            nodes.pop();\n            return dst;\n        }\n        else {\n            return src;\n        }\n    })(this.value);\n};\n\nfunction walk (root, cb, immutable) {\n    var path = [];\n    var parents = [];\n    var alive = true;\n    \n    return (function walker (node_) {\n        var node = immutable ? copy(node_) : node_;\n        var modifiers = {};\n        \n        var keepGoing = true;\n        \n        var state = {\n            node : node,\n            node_ : node_,\n            path : [].concat(path),\n            parent : parents[parents.length - 1],\n            parents : parents,\n            key : path.slice(-1)[0],\n            isRoot : path.length === 0,\n            level : path.length,\n            circular : null,\n            update : function (x, stopHere) {\n                if (!state.isRoot) {\n                    state.parent.node[state.key] = x;\n                }\n                state.node = x;\n                if (stopHere) keepGoing = false;\n            },\n            'delete' : function (stopHere) {\n                delete state.parent.node[state.key];\n                if (stopHere) keepGoing = false;\n            },\n            remove : function (stopHere) {\n                if (isArray(state.parent.node)) {\n                    state.parent.node.splice(state.key, 1);\n                }\n                else {\n                    delete state.parent.node[state.key];\n                }\n                if (stopHere) keepGoing = false;\n            },\n            keys : null,\n            before : function (f) { modifiers.before = f },\n            after : function (f) { modifiers.after = f },\n            pre : function (f) { modifiers.pre = f },\n            post : function (f) { modifiers.post = f },\n            stop : function () { alive = false },\n            block : function () { keepGoing = false }\n        };\n        \n        if (!alive) return state;\n        \n        function updateState() {\n            if (typeof state.node === 'object' && state.node !== null) {\n                if (!state.keys || state.node_ !== state.node) {\n                    state.keys = objectKeys(state.node)\n                }\n                \n                state.isLeaf = state.keys.length == 0;\n                \n                for (var i = 0; i < parents.length; i++) {\n                    if (parents[i].node_ === node_) {\n                        state.circular = parents[i];\n                        break;\n                    }\n                }\n            }\n            else {\n                state.isLeaf = true;\n                state.keys = null;\n            }\n            \n            state.notLeaf = !state.isLeaf;\n            state.notRoot = !state.isRoot;\n        }\n        \n        updateState();\n        \n        // use return values to update if defined\n        var ret = cb.call(state, state.node);\n        if (ret !== undefined && state.update) state.update(ret);\n        \n        if (modifiers.before) modifiers.before.call(state, state.node);\n        \n        if (!keepGoing) return state;\n        \n        if (typeof state.node == 'object'\n        && state.node !== null && !state.circular) {\n            parents.push(state);\n            \n            updateState();\n            \n            forEach(state.keys, function (key, i) {\n                path.push(key);\n                \n                if (modifiers.pre) modifiers.pre.call(state, state.node[key], key);\n                \n                var child = walker(state.node[key]);\n                if (immutable && hasOwnProperty.call(state.node, key)) {\n                    state.node[key] = child.node;\n                }\n                \n                child.isLast = i == state.keys.length - 1;\n                child.isFirst = i == 0;\n                \n                if (modifiers.post) modifiers.post.call(state, child);\n                \n                path.pop();\n            });\n            parents.pop();\n        }\n        \n        if (modifiers.after) modifiers.after.call(state, state.node);\n        \n        return state;\n    })(root).node;\n}\n\nfunction copy (src) {\n    if (typeof src === 'object' && src !== null) {\n        var dst;\n        \n        if (isArray(src)) {\n            dst = [];\n        }\n        else if (isDate(src)) {\n            dst = new Date(src.getTime ? src.getTime() : src);\n        }\n        else if (isRegExp(src)) {\n            dst = new RegExp(src);\n        }\n        else if (isError(src)) {\n            dst = { message: src.message };\n        }\n        else if (isBoolean(src)) {\n            dst = new Boolean(src);\n        }\n        else if (isNumber(src)) {\n            dst = new Number(src);\n        }\n        else if (isString(src)) {\n            dst = new String(src);\n        }\n        else if (Object.create && Object.getPrototypeOf) {\n            dst = Object.create(Object.getPrototypeOf(src));\n        }\n        else if (src.constructor === Object) {\n            dst = {};\n        }\n        else {\n            var proto =\n                (src.constructor && src.constructor.prototype)\n                || src.__proto__\n                || {}\n            ;\n            var T = function () {};\n            T.prototype = proto;\n            dst = new T;\n        }\n        \n        forEach(objectKeys(src), function (key) {\n            dst[key] = src[key];\n        });\n        return dst;\n    }\n    else return src;\n}\n\nvar objectKeys = Object.keys || function keys (obj) {\n    var res = [];\n    for (var key in obj) res.push(key)\n    return res;\n};\n\nfunction toS (obj) { return Object.prototype.toString.call(obj) }\nfunction isDate (obj) { return toS(obj) === '[object Date]' }\nfunction isRegExp (obj) { return toS(obj) === '[object RegExp]' }\nfunction isError (obj) { return toS(obj) === '[object Error]' }\nfunction isBoolean (obj) { return toS(obj) === '[object Boolean]' }\nfunction isNumber (obj) { return toS(obj) === '[object Number]' }\nfunction isString (obj) { return toS(obj) === '[object String]' }\n\nvar isArray = Array.isArray || function isArray (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nvar forEach = function (xs, fn) {\n    if (xs.forEach) return xs.forEach(fn)\n    else for (var i = 0; i < xs.length; i++) {\n        fn(xs[i], i, xs);\n    }\n};\n\nforEach(objectKeys(Traverse.prototype), function (key) {\n    traverse[key] = function (obj) {\n        var args = [].slice.call(arguments, 1);\n        var t = new Traverse(obj);\n        return t[key].apply(t, args);\n    };\n});\n\nvar hasOwnProperty = Object.hasOwnProperty || function (obj, key) {\n    return key in obj;\n};\n", "module.exports = Extent;\n\nfunction Extent(bbox) {\n    if (!(this instanceof Extent)) {\n        return new Extent(bbox);\n    }\n    this._bbox = bbox || [Infinity, Infinity, -Infinity, -Infinity];\n    this._valid = !!bbox;\n}\n\nExtent.prototype.include = function(ll) {\n    this._valid = true;\n    this._bbox[0] = Math.min(this._bbox[0], ll[0]);\n    this._bbox[1] = Math.min(this._bbox[1], ll[1]);\n    this._bbox[2] = Math.max(this._bbox[2], ll[0]);\n    this._bbox[3] = Math.max(this._bbox[3], ll[1]);\n    return this;\n};\n\nExtent.prototype.equals = function(_) {\n    var other;\n    if (_ instanceof Extent) { other = _.bbox(); } else { other = _; }\n    return this._bbox[0] == other[0] &&\n        this._bbox[1] == other[1] &&\n        this._bbox[2] == other[2] &&\n        this._bbox[3] == other[3];\n};\n\nExtent.prototype.center = function(_) {\n    if (!this._valid) return null;\n    return [\n        (this._bbox[0] + this._bbox[2]) / 2,\n        (this._bbox[1] + this._bbox[3]) / 2]\n};\n\nExtent.prototype.union = function(_) {\n    this._valid = true;\n    var other;\n    if (_ instanceof Extent) { other = _.bbox(); } else { other = _; }\n    this._bbox[0] = Math.min(this._bbox[0], other[0]);\n    this._bbox[1] = Math.min(this._bbox[1], other[1]);\n    this._bbox[2] = Math.max(this._bbox[2], other[2]);\n    this._bbox[3] = Math.max(this._bbox[3], other[3]);\n    return this;\n};\n\nExtent.prototype.bbox = function() {\n    if (!this._valid) return null;\n    return this._bbox;\n};\n\nExtent.prototype.contains = function(ll) {\n    if (!ll) return this._fastContains();\n    if (!this._valid) return null;\n    var lon = ll[0], lat = ll[1];\n    return this._bbox[0] <= lon &&\n        this._bbox[1] <= lat &&\n        this._bbox[2] >= lon &&\n        this._bbox[3] >= lat;\n};\n\nExtent.prototype.intersect = function(_) {\n    if (!this._valid) return null;\n\n    var other;\n    if (_ instanceof Extent) { other = _.bbox(); } else { other = _; }\n\n    return !(\n      this._bbox[0] > other[2] ||\n      this._bbox[2] < other[0] ||\n      this._bbox[3] < other[1] ||\n      this._bbox[1] > other[3]\n    );\n};\n\nExtent.prototype._fastContains = function() {\n    if (!this._valid) return new Function('return null;');\n    var body = 'return ' +\n        this._bbox[0] + '<= ll[0] &&' +\n        this._bbox[1] + '<= ll[1] &&' +\n        this._bbox[2] + '>= ll[0] &&' +\n        this._bbox[3] + '>= ll[1]';\n    return new Function('ll', body);\n};\n\nExtent.prototype.polygon = function() {\n    if (!this._valid) return null;\n    return {\n        type: 'Polygon',\n        coordinates: [\n            [\n                // W, S\n                [this._bbox[0], this._bbox[1]],\n                // E, S\n                [this._bbox[2], this._bbox[1]],\n                // E, N\n                [this._bbox[2], this._bbox[3]],\n                // W, N\n                [this._bbox[0], this._bbox[3]],\n                // W, S\n                [this._bbox[0], this._bbox[1]]\n            ]\n        ]\n    };\n};\n", "var geojsonCoords = require('@mapbox/geojson-coords'),\n    traverse = require('traverse'),\n    extent = require('@mapbox/extent');\n\nvar geojsonTypesByDataAttributes = {\n    features: ['FeatureCollection'],\n    coordinates: ['Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon'],\n    geometry: ['Feature'],\n    geometries: ['GeometryCollection']\n}\n\nvar dataAttributes = Object.keys(geojsonTypesByDataAttributes);\n\nmodule.exports = function(_) {\n    return getExtent(_).bbox();\n};\n\nmodule.exports.polygon = function(_) {\n    return getExtent(_).polygon();\n};\n\nmodule.exports.bboxify = function(_) {\n    return traverse(_).map(function(value) {\n        if (!value) return ;\n\n        var isValid = dataAttributes.some(function(attribute){\n            if(value[attribute]) {\n                return geojsonTypesByDataAttributes[attribute].indexOf(value.type) !== -1;\n            }\n            return false;\n        });\n\n        if(isValid){\n            value.bbox = getExtent(value).bbox();\n            this.update(value);\n        }\n\n    });\n};\n\nfunction getExtent(_) {\n    var ext = extent(),\n        coords = geojsonCoords(_);\n    for (var i = 0; i < coords.length; i++) ext.include(coords[i]);\n    return ext;\n}\n", "import extent from '@mapbox/geojson-extent';\nimport * as Constants from '../constants';\n\nconst {\n  LAT_MIN,\n  LAT_MAX,\n  LAT_RENDERED_MIN,\n  LAT_RENDERED_MAX,\n  LNG_MIN,\n  LNG_MAX\n} = Constants;\n\n// Ensure that we do not drag north-south far enough for\n// - any part of any feature to exceed the poles\n// - any feature to be completely lost in the space between the projection's\n//   edge and the poles, such that it couldn't be re-selected and moved back\nexport default function(geojsonFeatures, delta) {\n  // \"inner edge\" = a feature's latitude closest to the equator\n  let northInnerEdge = LAT_MIN;\n  let southInnerEdge = LAT_MAX;\n  // \"outer edge\" = a feature's latitude furthest from the equator\n  let northOuterEdge = LAT_MIN;\n  let southOuterEdge = LAT_MAX;\n\n  let westEdge = LNG_MAX;\n  let eastEdge = LNG_MIN;\n\n  geojsonFeatures.forEach((feature) => {\n    const bounds = extent(feature);\n    const featureSouthEdge = bounds[1];\n    const featureNorthEdge = bounds[3];\n    const featureWestEdge = bounds[0];\n    const featureEastEdge = bounds[2];\n    if (featureSouthEdge > northInnerEdge) northInnerEdge = featureSouthEdge;\n    if (featureNorthEdge < southInnerEdge) southInnerEdge = featureNorthEdge;\n    if (featureNorthEdge > northOuterEdge) northOuterEdge = featureNorthEdge;\n    if (featureSouthEdge < southOuterEdge) southOuterEdge = featureSouthEdge;\n    if (featureWestEdge < westEdge) westEdge = featureWestEdge;\n    if (featureEastEdge > eastEdge) eastEdge = featureEastEdge;\n  });\n\n\n  // These changes are not mutually exclusive: we might hit the inner\n  // edge but also have hit the outer edge and therefore need\n  // another readjustment\n  const constrainedDelta = delta;\n  if (northInnerEdge + constrainedDelta.lat > LAT_RENDERED_MAX) {\n    constrainedDelta.lat = LAT_RENDERED_MAX - northInnerEdge;\n  }\n  if (northOuterEdge + constrainedDelta.lat > LAT_MAX) {\n    constrainedDelta.lat = LAT_MAX - northOuterEdge;\n  }\n  if (southInnerEdge + constrainedDelta.lat < LAT_RENDERED_MIN) {\n    constrainedDelta.lat = LAT_RENDERED_MIN - southInnerEdge;\n  }\n  if (southOuterEdge + constrainedDelta.lat < LAT_MIN) {\n    constrainedDelta.lat = LAT_MIN - southOuterEdge;\n  }\n  if (westEdge + constrainedDelta.lng <= LNG_MIN) {\n    constrainedDelta.lng += Math.ceil(Math.abs(constrainedDelta.lng) / 360) * 360;\n  }\n  if (eastEdge + constrainedDelta.lng >= LNG_MAX) {\n    constrainedDelta.lng -= Math.ceil(Math.abs(constrainedDelta.lng) / 360) * 360;\n  }\n\n  return constrainedDelta;\n}\n", "import constrainFeatureMovement from './constrain_feature_movement';\nimport * as Constants from '../constants';\n\nexport default function(features, delta) {\n  const constrainedDelta = constrainFeatureMovement(features.map(feature => feature.toGeoJSON()), delta);\n\n  features.forEach((feature) => {\n    const currentCoordinates = feature.getCoordinates();\n\n    const moveCoordinate = (coord) => {\n      const point = {\n        lng: coord[0] + constrainedDelta.lng,\n        lat: coord[1] + constrainedDelta.lat\n      };\n      return [point.lng, point.lat];\n    };\n    const moveRing = ring => ring.map(coord => moveCoordinate(coord));\n    const moveMultiPolygon = multi => multi.map(ring => moveRing(ring));\n\n    let nextCoordinates;\n    if (feature.type === Constants.geojsonTypes.POINT) {\n      nextCoordinates = moveCoordinate(currentCoordinates);\n    } else if (feature.type === Constants.geojsonTypes.LINE_STRING || feature.type === Constants.geojsonTypes.MULTI_POINT) {\n      nextCoordinates = currentCoordinates.map(moveCoordinate);\n    } else if (feature.type === Constants.geojsonTypes.POLYGON || feature.type === Constants.geojsonTypes.MULTI_LINE_STRING) {\n      nextCoordinates = currentCoordinates.map(moveRing);\n    } else if (feature.type === Constants.geojsonTypes.MULTI_POLYGON) {\n      nextCoordinates = currentCoordinates.map(moveMultiPolygon);\n    }\n\n    feature.incomingCoords(nextCoordinates);\n  });\n}\n", "import * as CommonSelectors from '../lib/common_selectors';\nimport mouseEventPoint from '../lib/mouse_event_point';\nimport createSupplementaryPoints from '../lib/create_supplementary_points';\nimport StringSet from '../lib/string_set';\nimport doubleClickZoom from '../lib/double_click_zoom';\nimport moveFeatures from '../lib/move_features';\nimport * as Constants from '../constants';\n\nconst SimpleSelect = {};\n\nSimpleSelect.onSetup = function(opts) {\n  // turn the opts into state.\n  const state = {\n    dragMoveLocation: null,\n    boxSelectStartLocation: null,\n    boxSelectElement: undefined,\n    boxSelecting: false,\n    canBoxSelect: false,\n    dragMoving: false,\n    canDragMove: false,\n    initiallySelectedFeatureIds: opts.featureIds || []\n  };\n\n  this.setSelected(state.initiallySelectedFeatureIds.filter(id => this.getFeature(id) !== undefined));\n  this.fireActionable();\n\n  this.setActionableState({\n    combineFeatures: true,\n    uncombineFeatures: true,\n    trash: true\n  });\n\n  return state;\n};\n\nSimpleSelect.fireUpdate = function() {\n  this.map.fire(Constants.events.UPDATE, {\n    action: Constants.updateActions.MOVE,\n    features: this.getSelected().map(f => f.toGeoJSON())\n  });\n};\n\nSimpleSelect.fireActionable = function() {\n  const selectedFeatures = this.getSelected();\n\n  const multiFeatures = selectedFeatures.filter(\n    feature => this.isInstanceOf('MultiFeature', feature)\n  );\n\n  let combineFeatures = false;\n\n  if (selectedFeatures.length > 1) {\n    combineFeatures = true;\n    const featureType = selectedFeatures[0].type.replace('Multi', '');\n    selectedFeatures.forEach((feature) => {\n      if (feature.type.replace('Multi', '') !== featureType) {\n        combineFeatures = false;\n      }\n    });\n  }\n\n  const uncombineFeatures = multiFeatures.length > 0;\n  const trash = selectedFeatures.length > 0;\n\n  this.setActionableState({\n    combineFeatures, uncombineFeatures, trash\n  });\n};\n\nSimpleSelect.getUniqueIds = function(allFeatures) {\n  if (!allFeatures.length) return [];\n  const ids = allFeatures.map(s => s.properties.id)\n    .filter(id => id !== undefined)\n    .reduce((memo, id) => {\n      memo.add(id);\n      return memo;\n    }, new StringSet());\n\n  return ids.values();\n};\n\nSimpleSelect.stopExtendedInteractions = function(state) {\n  if (state.boxSelectElement) {\n    if (state.boxSelectElement.parentNode) state.boxSelectElement.parentNode.removeChild(state.boxSelectElement);\n    state.boxSelectElement = null;\n  }\n\n  this.map.dragPan.enable();\n\n  state.boxSelecting = false;\n  state.canBoxSelect = false;\n  state.dragMoving = false;\n  state.canDragMove = false;\n};\n\nSimpleSelect.onStop = function() {\n  doubleClickZoom.enable(this);\n};\n\nSimpleSelect.onMouseMove = function(state) {\n  // On mousemove that is not a drag, stop extended interactions.\n  // This is useful if you drag off the canvas, release the button,\n  // then move the mouse back over the canvas --- we don't allow the\n  // interaction to continue then, but we do let it continue if you held\n  // the mouse button that whole time\n  this.stopExtendedInteractions(state);\n\n  // Skip render\n  return true;\n};\n\nSimpleSelect.onMouseOut = function(state) {\n  // As soon as you mouse leaves the canvas, update the feature\n  if (state.dragMoving) return this.fireUpdate();\n\n  // Skip render\n  return true;\n};\n\nSimpleSelect.onTap = SimpleSelect.onClick = function(state, e) {\n  // Click (with or without shift) on no feature\n  if (CommonSelectors.noTarget(e)) return this.clickAnywhere(state, e); // also tap\n  if (CommonSelectors.isOfMetaType(Constants.meta.VERTEX)(e)) return this.clickOnVertex(state, e); //tap\n  if (CommonSelectors.isFeature(e)) return this.clickOnFeature(state, e);\n};\n\nSimpleSelect.clickAnywhere = function (state) {\n  // Clear the re-render selection\n  const wasSelected = this.getSelectedIds();\n  if (wasSelected.length) {\n    this.clearSelectedFeatures();\n    wasSelected.forEach(id => this.doRender(id));\n  }\n  doubleClickZoom.enable(this);\n  this.stopExtendedInteractions(state);\n};\n\nSimpleSelect.clickOnVertex = function(state, e) {\n  // Enter direct select mode\n  this.changeMode(Constants.modes.DIRECT_SELECT, {\n    featureId: e.featureTarget.properties.parent,\n    coordPath: e.featureTarget.properties.coord_path,\n    startPos: e.lngLat\n  });\n  this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n};\n\nSimpleSelect.startOnActiveFeature = function(state, e) {\n  // Stop any already-underway extended interactions\n  this.stopExtendedInteractions(state);\n\n  // Disable map.dragPan immediately so it can't start\n  this.map.dragPan.disable();\n\n  // Re-render it and enable drag move\n  this.doRender(e.featureTarget.properties.id);\n\n  // Set up the state for drag moving\n  state.canDragMove = true;\n  state.dragMoveLocation = e.lngLat;\n};\n\nSimpleSelect.clickOnFeature = function(state, e) {\n  // Stop everything\n  doubleClickZoom.disable(this);\n  this.stopExtendedInteractions(state);\n\n  const isShiftClick = CommonSelectors.isShiftDown(e);\n  const selectedFeatureIds = this.getSelectedIds();\n  const featureId = e.featureTarget.properties.id;\n  const isFeatureSelected = this.isSelected(featureId);\n\n  // Click (without shift) on any selected feature but a point\n  if (!isShiftClick && isFeatureSelected && this.getFeature(featureId).type !== Constants.geojsonTypes.POINT) {\n    // Enter direct select mode\n    return this.changeMode(Constants.modes.DIRECT_SELECT, {\n      featureId\n    });\n  }\n\n  // Shift-click on a selected feature\n  if (isFeatureSelected && isShiftClick) {\n    // Deselect it\n    this.deselect(featureId);\n    this.updateUIClasses({ mouse: Constants.cursors.POINTER });\n    if (selectedFeatureIds.length === 1) {\n      doubleClickZoom.enable(this);\n    }\n  // Shift-click on an unselected feature\n  } else if (!isFeatureSelected && isShiftClick) {\n    // Add it to the selection\n    this.select(featureId);\n    this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n  // Click (without shift) on an unselected feature\n  } else if (!isFeatureSelected && !isShiftClick) {\n    // Make it the only selected feature\n    selectedFeatureIds.forEach(id => this.doRender(id));\n    this.setSelected(featureId);\n    this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n  }\n\n  // No matter what, re-render the clicked feature\n  this.doRender(featureId);\n};\n\nSimpleSelect.onMouseDown = function(state, e) {\n  if (CommonSelectors.isActiveFeature(e)) return this.startOnActiveFeature(state, e);\n  if (this.drawConfig.boxSelect && CommonSelectors.isShiftMousedown(e)) return this.startBoxSelect(state, e);\n};\n\nSimpleSelect.startBoxSelect = function(state, e) {\n  this.stopExtendedInteractions(state);\n  this.map.dragPan.disable();\n  // Enable box select\n  state.boxSelectStartLocation = mouseEventPoint(e.originalEvent, this.map.getContainer());\n  state.canBoxSelect = true;\n};\n\nSimpleSelect.onTouchStart = function(state, e) {\n  if (CommonSelectors.isActiveFeature(e)) return this.startOnActiveFeature(state, e);\n};\n\nSimpleSelect.onDrag = function(state, e) {\n  if (state.canDragMove) return this.dragMove(state, e);\n  if (this.drawConfig.boxSelect && state.canBoxSelect) return this.whileBoxSelect(state, e);\n};\n\nSimpleSelect.whileBoxSelect = function(state, e) {\n  state.boxSelecting = true;\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n\n  // Create the box node if it doesn't exist\n  if (!state.boxSelectElement) {\n    state.boxSelectElement = document.createElement('div');\n    state.boxSelectElement.classList.add(Constants.classes.BOX_SELECT);\n    this.map.getContainer().appendChild(state.boxSelectElement);\n  }\n\n  // Adjust the box node's width and xy position\n  const current = mouseEventPoint(e.originalEvent, this.map.getContainer());\n  const minX = Math.min(state.boxSelectStartLocation.x, current.x);\n  const maxX = Math.max(state.boxSelectStartLocation.x, current.x);\n  const minY = Math.min(state.boxSelectStartLocation.y, current.y);\n  const maxY = Math.max(state.boxSelectStartLocation.y, current.y);\n  const translateValue = `translate(${minX}px, ${minY}px)`;\n  state.boxSelectElement.style.transform = translateValue;\n  state.boxSelectElement.style.WebkitTransform = translateValue;\n  state.boxSelectElement.style.width = `${maxX - minX}px`;\n  state.boxSelectElement.style.height = `${maxY - minY}px`;\n};\n\nSimpleSelect.dragMove = function(state, e) {\n  // Dragging when drag move is enabled\n  state.dragMoving = true;\n  e.originalEvent.stopPropagation();\n\n  const delta = {\n    lng: e.lngLat.lng - state.dragMoveLocation.lng,\n    lat: e.lngLat.lat - state.dragMoveLocation.lat\n  };\n\n  moveFeatures(this.getSelected(), delta);\n\n  state.dragMoveLocation = e.lngLat;\n};\n\nSimpleSelect.onMouseUp = function(state, e) {\n  // End any extended interactions\n  if (state.dragMoving) {\n    this.fireUpdate();\n  } else if (state.boxSelecting) {\n    const bbox = [\n      state.boxSelectStartLocation,\n      mouseEventPoint(e.originalEvent, this.map.getContainer())\n    ];\n    const featuresInBox = this.featuresAt(null, bbox, 'click');\n    const idsToSelect = this.getUniqueIds(featuresInBox)\n      .filter(id => !this.isSelected(id));\n\n    if (idsToSelect.length) {\n      this.select(idsToSelect);\n      idsToSelect.forEach(id => this.doRender(id));\n      this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n    }\n  }\n  this.stopExtendedInteractions(state);\n};\n\nSimpleSelect.toDisplayFeatures = function(state, geojson, display) {\n  geojson.properties.active = (this.isSelected(geojson.properties.id)) ?\n    Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n  display(geojson);\n  this.fireActionable();\n  if (geojson.properties.active !== Constants.activeStates.ACTIVE ||\n    geojson.geometry.type === Constants.geojsonTypes.POINT) return;\n  createSupplementaryPoints(geojson).forEach(display);\n};\n\nSimpleSelect.onTrash = function() {\n  this.deleteFeature(this.getSelectedIds());\n  this.fireActionable();\n};\n\nSimpleSelect.onCombineFeatures = function() {\n  const selectedFeatures = this.getSelected();\n\n  if (selectedFeatures.length === 0 || selectedFeatures.length < 2) return;\n\n  const coordinates = [], featuresCombined = [];\n  const featureType = selectedFeatures[0].type.replace('Multi', '');\n\n  for (let i = 0; i < selectedFeatures.length; i++) {\n    const feature = selectedFeatures[i];\n\n    if (feature.type.replace('Multi', '') !== featureType) {\n      return;\n    }\n    if (feature.type.includes('Multi')) {\n      feature.getCoordinates().forEach((subcoords) => {\n        coordinates.push(subcoords);\n      });\n    } else {\n      coordinates.push(feature.getCoordinates());\n    }\n\n    featuresCombined.push(feature.toGeoJSON());\n  }\n\n  if (featuresCombined.length > 1) {\n    const multiFeature = this.newFeature({\n      type: Constants.geojsonTypes.FEATURE,\n      properties: featuresCombined[0].properties,\n      geometry: {\n        type: `Multi${featureType}`,\n        coordinates\n      }\n    });\n\n    this.addFeature(multiFeature);\n    this.deleteFeature(this.getSelectedIds(), { silent: true });\n    this.setSelected([multiFeature.id]);\n\n    this.map.fire(Constants.events.COMBINE_FEATURES, {\n      createdFeatures: [multiFeature.toGeoJSON()],\n      deletedFeatures: featuresCombined\n    });\n  }\n  this.fireActionable();\n};\n\nSimpleSelect.onUncombineFeatures = function() {\n  const selectedFeatures = this.getSelected();\n  if (selectedFeatures.length === 0) return;\n\n  const createdFeatures = [];\n  const featuresUncombined = [];\n\n  for (let i = 0; i < selectedFeatures.length; i++) {\n    const feature = selectedFeatures[i];\n\n    if (this.isInstanceOf('MultiFeature', feature)) {\n      feature.getFeatures().forEach((subFeature) => {\n        this.addFeature(subFeature);\n        subFeature.properties = feature.properties;\n        createdFeatures.push(subFeature.toGeoJSON());\n        this.select([subFeature.id]);\n      });\n      this.deleteFeature(feature.id, { silent: true });\n      featuresUncombined.push(feature.toGeoJSON());\n    }\n  }\n\n  if (createdFeatures.length > 1) {\n    this.map.fire(Constants.events.UNCOMBINE_FEATURES, {\n      createdFeatures,\n      deletedFeatures: featuresUncombined\n    });\n  }\n  this.fireActionable();\n};\n\nexport default SimpleSelect;\n", "import {noTarget, isOfMetaType, isActiveFeature, isInactiveFeature, isShiftDown} from '../lib/common_selectors';\nimport createSupplementaryPoints from '../lib/create_supplementary_points';\nimport constrainFeatureMovement from '../lib/constrain_feature_movement';\nimport doubleClickZoom from '../lib/double_click_zoom';\nimport * as Constants from '../constants';\nimport moveFeatures from '../lib/move_features';\n\nconst isVertex = isOfMetaType(Constants.meta.VERTEX);\nconst isMidpoint = isOfMetaType(Constants.meta.MIDPOINT);\n\nconst DirectSelect = {};\n\n// INTERNAL FUCNTIONS\n\nDirectSelect.fireUpdate = function() {\n  this.map.fire(Constants.events.UPDATE, {\n    action: Constants.updateActions.CHANGE_COORDINATES,\n    features: this.getSelected().map(f => f.toGeoJSON())\n  });\n};\n\nDirectSelect.fireActionable = function(state) {\n  this.setActionableState({\n    combineFeatures: false,\n    uncombineFeatures: false,\n    trash: state.selectedCoordPaths.length > 0\n  });\n};\n\nDirectSelect.startDragging = function(state, e) {\n  this.map.dragPan.disable();\n  state.canDragMove = true;\n  state.dragMoveLocation = e.lngLat;\n};\n\nDirectSelect.stopDragging = function(state) {\n  this.map.dragPan.enable();\n  state.dragMoving = false;\n  state.canDragMove = false;\n  state.dragMoveLocation = null;\n};\n\nDirectSelect.onVertex = function (state, e) {\n  this.startDragging(state, e);\n  const about = e.featureTarget.properties;\n  const selectedIndex = state.selectedCoordPaths.indexOf(about.coord_path);\n  if (!isShiftDown(e) && selectedIndex === -1) {\n    state.selectedCoordPaths = [about.coord_path];\n  } else if (isShiftDown(e) && selectedIndex === -1) {\n    state.selectedCoordPaths.push(about.coord_path);\n  }\n\n  const selectedCoordinates = this.pathsToCoordinates(state.featureId, state.selectedCoordPaths);\n  this.setSelectedCoordinates(selectedCoordinates);\n};\n\nDirectSelect.onMidpoint = function(state, e) {\n  this.startDragging(state, e);\n  const about = e.featureTarget.properties;\n  state.feature.addCoordinate(about.coord_path, about.lng, about.lat);\n  this.fireUpdate();\n  state.selectedCoordPaths = [about.coord_path];\n};\n\nDirectSelect.pathsToCoordinates = function(featureId, paths) {\n  return paths.map(coord_path => ({ feature_id: featureId, coord_path }));\n};\n\nDirectSelect.onFeature = function(state, e) {\n  if (state.selectedCoordPaths.length === 0) this.startDragging(state, e);\n  else this.stopDragging(state);\n};\n\nDirectSelect.dragFeature = function(state, e, delta) {\n  moveFeatures(this.getSelected(), delta);\n  state.dragMoveLocation = e.lngLat;\n};\n\nDirectSelect.dragVertex = function(state, e, delta) {\n  const selectedCoords = state.selectedCoordPaths.map(coord_path => state.feature.getCoordinate(coord_path));\n  const selectedCoordPoints = selectedCoords.map(coords => ({\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates: coords\n    }\n  }));\n\n  const constrainedDelta = constrainFeatureMovement(selectedCoordPoints, delta);\n  for (let i = 0; i < selectedCoords.length; i++) {\n    const coord = selectedCoords[i];\n    state.feature.updateCoordinate(state.selectedCoordPaths[i], coord[0] + constrainedDelta.lng, coord[1] + constrainedDelta.lat);\n  }\n};\n\nDirectSelect.clickNoTarget = function () {\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\n\nDirectSelect.clickInactive = function () {\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\n\nDirectSelect.clickActiveFeature = function (state) {\n  state.selectedCoordPaths = [];\n  this.clearSelectedCoordinates();\n  state.feature.changed();\n};\n\n// EXTERNAL FUNCTIONS\n\nDirectSelect.onSetup = function(opts) {\n  const featureId = opts.featureId;\n  const feature = this.getFeature(featureId);\n\n  if (!feature) {\n    throw new Error('You must provide a featureId to enter direct_select mode');\n  }\n\n  if (feature.type === Constants.geojsonTypes.POINT) {\n    throw new TypeError('direct_select mode doesn\\'t handle point features');\n  }\n\n  const state = {\n    featureId,\n    feature,\n    dragMoveLocation: opts.startPos || null,\n    dragMoving: false,\n    canDragMove: false,\n    selectedCoordPaths: opts.coordPath ? [opts.coordPath] : []\n  };\n\n  this.setSelectedCoordinates(this.pathsToCoordinates(featureId, state.selectedCoordPaths));\n  this.setSelected(featureId);\n  doubleClickZoom.disable(this);\n\n  this.setActionableState({\n    trash: true\n  });\n\n  return state;\n};\n\nDirectSelect.onStop = function() {\n  doubleClickZoom.enable(this);\n  this.clearSelectedCoordinates();\n};\n\nDirectSelect.toDisplayFeatures = function(state, geojson, push) {\n  if (state.featureId === geojson.properties.id) {\n    geojson.properties.active = Constants.activeStates.ACTIVE;\n    push(geojson);\n    createSupplementaryPoints(geojson, {\n      map: this.map,\n      midpoints: true,\n      selectedPaths: state.selectedCoordPaths\n    }).forEach(push);\n  } else {\n    geojson.properties.active = Constants.activeStates.INACTIVE;\n    push(geojson);\n  }\n  this.fireActionable(state);\n};\n\nDirectSelect.onTrash = function(state) {\n  // Uses number-aware sorting to make sure '9' < '10'. Comparison is reversed because we want them\n  // in reverse order so that we can remove by index safely.\n  state.selectedCoordPaths\n    .sort((a, b) => b.localeCompare(a, 'en', { numeric: true }))\n    .forEach(id => state.feature.removeCoordinate(id));\n  this.fireUpdate();\n  state.selectedCoordPaths = [];\n  this.clearSelectedCoordinates();\n  this.fireActionable(state);\n  if (state.feature.isValid() === false) {\n    this.deleteFeature([state.featureId]);\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {});\n  }\n};\n\nDirectSelect.onMouseMove = function(state, e) {\n  // On mousemove that is not a drag, stop vertex movement.\n  const isFeature = isActiveFeature(e);\n  const onVertex = isVertex(e);\n  const noCoords = state.selectedCoordPaths.length === 0;\n  if (isFeature && noCoords) this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n  else if (onVertex && !noCoords) this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n  else this.updateUIClasses({ mouse: Constants.cursors.NONE });\n  this.stopDragging(state);\n\n  // Skip render\n  return true;\n};\n\nDirectSelect.onMouseOut = function(state) {\n  // As soon as you mouse leaves the canvas, update the feature\n  if (state.dragMoving) this.fireUpdate();\n\n  // Skip render\n  return true;\n};\n\nDirectSelect.onTouchStart = DirectSelect.onMouseDown = function(state, e) {\n  if (isVertex(e)) return this.onVertex(state, e);\n  if (isActiveFeature(e)) return this.onFeature(state, e);\n  if (isMidpoint(e)) return this.onMidpoint(state, e);\n};\n\nDirectSelect.onDrag = function(state, e) {\n  if (state.canDragMove !== true) return;\n  state.dragMoving = true;\n  e.originalEvent.stopPropagation();\n\n  const delta = {\n    lng: e.lngLat.lng - state.dragMoveLocation.lng,\n    lat: e.lngLat.lat - state.dragMoveLocation.lat\n  };\n  if (state.selectedCoordPaths.length > 0) this.dragVertex(state, e, delta);\n  else this.dragFeature(state, e, delta);\n\n  state.dragMoveLocation = e.lngLat;\n};\n\nDirectSelect.onClick = function(state, e) {\n  if (noTarget(e)) return this.clickNoTarget(state, e);\n  if (isActiveFeature(e)) return this.clickActiveFeature(state, e);\n  if (isInactiveFeature(e)) return this.clickInactive(state, e);\n  this.stopDragging(state);\n};\n\nDirectSelect.onTap = function(state, e) {\n  if (noTarget(e)) return this.clickNoTarget(state, e);\n  if (isActiveFeature(e)) return this.clickActiveFeature(state, e);\n  if (isInactiveFeature(e)) return this.clickInactive(state, e);\n};\n\nDirectSelect.onTouchEnd = DirectSelect.onMouseUp = function(state) {\n  if (state.dragMoving) {\n    this.fireUpdate();\n  }\n  this.stopDragging(state);\n};\n\nexport default DirectSelect;\n\n", "import * as CommonSelectors from '../lib/common_selectors';\nimport * as Constants from '../constants';\n\nconst DrawPoint = {};\n\nDrawPoint.onSetup = function() {\n  const point = this.newFeature({\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates: []\n    }\n  });\n\n  this.addFeature(point);\n\n  this.clearSelectedFeatures();\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  this.activateUIButton(Constants.types.POINT);\n\n  this.setActionableState({\n    trash: true\n  });\n\n  return { point };\n};\n\nDrawPoint.stopDrawingAndRemove = function(state) {\n  this.deleteFeature([state.point.id], { silent: true });\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\n\nDrawPoint.onTap = DrawPoint.onClick = function(state, e) {\n  this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n  state.point.updateCoordinate('', e.lngLat.lng, e.lngLat.lat);\n  this.map.fire(Constants.events.CREATE, {\n    features: [state.point.toGeoJSON()]\n  });\n  this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.point.id] });\n};\n\nDrawPoint.onStop = function(state) {\n  this.activateUIButton();\n  if (!state.point.getCoordinate().length) {\n    this.deleteFeature([state.point.id], { silent: true });\n  }\n};\n\nDrawPoint.toDisplayFeatures = function(state, geojson, display) {\n  // Never render the point we're drawing\n  const isActivePoint = geojson.properties.id === state.point.id;\n  geojson.properties.active = (isActivePoint) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n  if (!isActivePoint) return display(geojson);\n};\n\nDrawPoint.onTrash = DrawPoint.stopDrawingAndRemove;\n\nDrawPoint.onKeyUp = function(state, e) {\n  if (CommonSelectors.isEscapeKey(e) || CommonSelectors.isEnterKey(e)) {\n    return this.stopDrawingAndRemove(state, e);\n  }\n};\n\nexport default DrawPoint;\n", "function isEventAtCoordinates(event, coordinates) {\n  if (!event.lngLat) return false;\n  return event.lngLat.lng === coordinates[0] && event.lngLat.lat === coordinates[1];\n}\n\nexport default isEventAtCoordinates;\n", "import * as CommonSelectors from '../lib/common_selectors';\nimport doubleClickZoom from '../lib/double_click_zoom';\nimport * as Constants from '../constants';\nimport isEventAtCoordinates from '../lib/is_event_at_coordinates';\nimport createVertex from '../lib/create_vertex';\n\nconst DrawPolygon = {};\n\nDrawPolygon.onSetup = function() {\n  const polygon = this.newFeature({\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      type: Constants.geojsonTypes.POLYGON,\n      coordinates: [[]]\n    }\n  });\n\n  this.addFeature(polygon);\n\n  this.clearSelectedFeatures();\n  doubleClickZoom.disable(this);\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  this.activateUIButton(Constants.types.POLYGON);\n  this.setActionableState({\n    trash: true\n  });\n\n  return {\n    polygon,\n    currentVertexPosition: 0\n  };\n};\n\nDrawPolygon.clickAnywhere = function(state, e) {\n  if (state.currentVertexPosition > 0 && isEventAtCoordinates(e, state.polygon.coordinates[0][state.currentVertexPosition - 1])) {\n    return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.polygon.id] });\n  }\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  state.polygon.updateCoordinate(`0.${state.currentVertexPosition}`, e.lngLat.lng, e.lngLat.lat);\n  state.currentVertexPosition++;\n  state.polygon.updateCoordinate(`0.${state.currentVertexPosition}`, e.lngLat.lng, e.lngLat.lat);\n};\n\nDrawPolygon.clickOnVertex = function(state) {\n  return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.polygon.id] });\n};\n\nDrawPolygon.onMouseMove = function(state, e) {\n  state.polygon.updateCoordinate(`0.${state.currentVertexPosition}`, e.lngLat.lng, e.lngLat.lat);\n  if (CommonSelectors.isVertex(e)) {\n    this.updateUIClasses({ mouse: Constants.cursors.POINTER });\n  }\n};\n\nDrawPolygon.onTap = DrawPolygon.onClick = function(state, e) {\n  if (CommonSelectors.isVertex(e)) return this.clickOnVertex(state, e);\n  return this.clickAnywhere(state, e);\n};\n\nDrawPolygon.onKeyUp = function(state, e) {\n  if (CommonSelectors.isEscapeKey(e)) {\n    this.deleteFeature([state.polygon.id], { silent: true });\n    this.changeMode(Constants.modes.SIMPLE_SELECT);\n  } else if (CommonSelectors.isEnterKey(e)) {\n    this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.polygon.id] });\n  }\n};\n\nDrawPolygon.onStop = function(state) {\n  this.updateUIClasses({ mouse: Constants.cursors.NONE });\n  doubleClickZoom.enable(this);\n  this.activateUIButton();\n\n  // check to see if we've deleted this feature\n  if (this.getFeature(state.polygon.id) === undefined) return;\n\n  //remove last added coordinate\n  state.polygon.removeCoordinate(`0.${state.currentVertexPosition}`);\n  if (state.polygon.isValid()) {\n    this.map.fire(Constants.events.CREATE, {\n      features: [state.polygon.toGeoJSON()]\n    });\n  } else {\n    this.deleteFeature([state.polygon.id], { silent: true });\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {}, { silent: true });\n  }\n};\n\nDrawPolygon.toDisplayFeatures = function(state, geojson, display) {\n  const isActivePolygon = geojson.properties.id === state.polygon.id;\n  geojson.properties.active = (isActivePolygon) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n  if (!isActivePolygon) return display(geojson);\n\n  // Don't render a polygon until it has two positions\n  // (and a 3rd which is just the first repeated)\n  if (geojson.geometry.coordinates.length === 0) return;\n\n  const coordinateCount = geojson.geometry.coordinates[0].length;\n  // 2 coordinates after selecting a draw type\n  // 3 after creating the first point\n  if (coordinateCount < 3) {\n    return;\n  }\n  geojson.properties.meta = Constants.meta.FEATURE;\n  display(createVertex(state.polygon.id, geojson.geometry.coordinates[0][0], '0.0', false));\n  if (coordinateCount > 3) {\n    // Add a start position marker to the map, clicking on this will finish the feature\n    // This should only be shown when we're in a valid spot\n    const endPos = geojson.geometry.coordinates[0].length - 3;\n    display(createVertex(state.polygon.id, geojson.geometry.coordinates[0][endPos], `0.${endPos}`, false));\n  }\n  if (coordinateCount <= 4) {\n    // If we've only drawn two positions (plus the closer),\n    // make a LineString instead of a Polygon\n    const lineCoordinates = [\n      [geojson.geometry.coordinates[0][0][0], geojson.geometry.coordinates[0][0][1]], [geojson.geometry.coordinates[0][1][0], geojson.geometry.coordinates[0][1][1]]\n    ];\n    // create an initial vertex so that we can track the first point on mobile devices\n    display({\n      type: Constants.geojsonTypes.FEATURE,\n      properties: geojson.properties,\n      geometry: {\n        coordinates: lineCoordinates,\n        type: Constants.geojsonTypes.LINE_STRING\n      }\n    });\n    if (coordinateCount === 3) {\n      return;\n    }\n  }\n  // render the Polygon\n  return display(geojson);\n};\n\nDrawPolygon.onTrash = function(state) {\n  this.deleteFeature([state.polygon.id], { silent: true });\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\n\nexport default DrawPolygon;\n", "import * as CommonSelectors from '../lib/common_selectors';\nimport isEventAtCoordinates from '../lib/is_event_at_coordinates';\nimport doubleClickZoom from '../lib/double_click_zoom';\nimport * as Constants from '../constants';\nimport createVertex from '../lib/create_vertex';\n\nconst DrawLineString = {};\n\nDrawLineString.onSetup = function(opts) {\n  opts = opts || {};\n  const featureId = opts.featureId;\n\n  let line, currentVertexPosition;\n  let direction = 'forward';\n  if (featureId) {\n    line = this.getFeature(featureId);\n    if (!line) {\n      throw new Error('Could not find a feature with the provided featureId');\n    }\n    let from = opts.from;\n    if (from && from.type === 'Feature' && from.geometry && from.geometry.type === 'Point') {\n      from = from.geometry;\n    }\n    if (from && from.type === 'Point' && from.coordinates && from.coordinates.length === 2) {\n      from = from.coordinates;\n    }\n    if (!from || !Array.isArray(from)) {\n      throw new Error('Please use the `from` property to indicate which point to continue the line from');\n    }\n    const lastCoord = line.coordinates.length - 1;\n    if (line.coordinates[lastCoord][0] === from[0] && line.coordinates[lastCoord][1] === from[1]) {\n      currentVertexPosition = lastCoord + 1;\n      // add one new coordinate to continue from\n      line.addCoordinate(currentVertexPosition, ...line.coordinates[lastCoord]);\n    } else if (line.coordinates[0][0] === from[0] && line.coordinates[0][1] === from[1]) {\n      direction = 'backwards';\n      currentVertexPosition = 0;\n      // add one new coordinate to continue from\n      line.addCoordinate(currentVertexPosition, ...line.coordinates[0]);\n    } else {\n      throw new Error('`from` should match the point at either the start or the end of the provided LineString');\n    }\n  } else {\n    line = this.newFeature({\n      type: Constants.geojsonTypes.FEATURE,\n      properties: {},\n      geometry: {\n        type: Constants.geojsonTypes.LINE_STRING,\n        coordinates: []\n      }\n    });\n    currentVertexPosition = 0;\n    this.addFeature(line);\n  }\n\n  this.clearSelectedFeatures();\n  doubleClickZoom.disable(this);\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  this.activateUIButton(Constants.types.LINE);\n  this.setActionableState({\n    trash: true\n  });\n\n  return {\n    line,\n    currentVertexPosition,\n    direction\n  };\n};\n\nDrawLineString.clickAnywhere = function(state, e) {\n  if (state.currentVertexPosition > 0 && isEventAtCoordinates(e, state.line.coordinates[state.currentVertexPosition - 1]) ||\n      state.direction === 'backwards' && isEventAtCoordinates(e, state.line.coordinates[state.currentVertexPosition + 1])) {\n    return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.line.id] });\n  }\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  state.line.updateCoordinate(state.currentVertexPosition, e.lngLat.lng, e.lngLat.lat);\n  if (state.direction === 'forward') {\n    state.currentVertexPosition++;\n    state.line.updateCoordinate(state.currentVertexPosition, e.lngLat.lng, e.lngLat.lat);\n  } else {\n    state.line.addCoordinate(0, e.lngLat.lng, e.lngLat.lat);\n  }\n};\n\nDrawLineString.clickOnVertex = function(state) {\n  return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.line.id] });\n};\n\nDrawLineString.onMouseMove = function(state, e) {\n  state.line.updateCoordinate(state.currentVertexPosition, e.lngLat.lng, e.lngLat.lat);\n  if (CommonSelectors.isVertex(e)) {\n    this.updateUIClasses({ mouse: Constants.cursors.POINTER });\n  }\n};\n\nDrawLineString.onTap = DrawLineString.onClick = function(state, e) {\n  if (CommonSelectors.isVertex(e)) return this.clickOnVertex(state, e);\n  this.clickAnywhere(state, e);\n};\n\nDrawLineString.onKeyUp = function(state, e) {\n  if (CommonSelectors.isEnterKey(e)) {\n    this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.line.id] });\n  } else if (CommonSelectors.isEscapeKey(e)) {\n    this.deleteFeature([state.line.id], { silent: true });\n    this.changeMode(Constants.modes.SIMPLE_SELECT);\n  }\n};\n\nDrawLineString.onStop = function(state) {\n  doubleClickZoom.enable(this);\n  this.activateUIButton();\n\n  // check to see if we've deleted this feature\n  if (this.getFeature(state.line.id) === undefined) return;\n\n  //remove last added coordinate\n  state.line.removeCoordinate(`${state.currentVertexPosition}`);\n  if (state.line.isValid()) {\n    this.map.fire(Constants.events.CREATE, {\n      features: [state.line.toGeoJSON()]\n    });\n  } else {\n    this.deleteFeature([state.line.id], { silent: true });\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {}, { silent: true });\n  }\n};\n\nDrawLineString.onTrash = function(state) {\n  this.deleteFeature([state.line.id], { silent: true });\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\n\nDrawLineString.toDisplayFeatures = function(state, geojson, display) {\n  const isActiveLine = geojson.properties.id === state.line.id;\n  geojson.properties.active = (isActiveLine) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n  if (!isActiveLine) return display(geojson);\n  // Only render the line if it has at least one real coordinate\n  if (geojson.geometry.coordinates.length < 2) return;\n  geojson.properties.meta = Constants.meta.FEATURE;\n  display(createVertex(\n    state.line.id,\n    geojson.geometry.coordinates[state.direction === 'forward' ? geojson.geometry.coordinates.length - 2 : 1],\n    `${state.direction === 'forward' ? geojson.geometry.coordinates.length - 2 : 1}`,\n    false\n  ));\n\n  display(geojson);\n};\n\nexport default DrawLineString;\n", "\nimport simple_select from './simple_select';\nimport direct_select from './direct_select';\nimport draw_point from './draw_point';\nimport draw_polygon from './draw_polygon';\nimport draw_line_string from './draw_line_string';\n\nexport default {\n  simple_select,\n  direct_select,\n  draw_point,\n  draw_polygon,\n  draw_line_string,\n};\n", "import xtend from 'xtend';\nimport * as Constants from './constants';\n\nimport styles from './lib/theme';\nimport modes from './modes/index';\n\nconst defaultOptions = {\n  defaultMode: Constants.modes.SIMPLE_SELECT,\n  keybindings: true,\n  touchEnabled: true,\n  clickBuffer: 2,\n  touchBuffer: 25,\n  boxSelect: true,\n  displayControlsDefault: true,\n  styles,\n  modes,\n  controls: {},\n  userProperties: false\n};\n\nconst showControls = {\n  point: true,\n  line_string: true,\n  polygon: true,\n  trash: true,\n  combine_features: true,\n  uncombine_features: true\n};\n\nconst hideControls = {\n  point: false,\n  line_string: false,\n  polygon: false,\n  trash: false,\n  combine_features: false,\n  uncombine_features: false\n};\n\nfunction addSources(styles, sourceBucket) {\n  return styles.map((style) => {\n    if (style.source) return style;\n    return xtend(style, {\n      id: `${style.id}.${sourceBucket}`,\n      source: (sourceBucket === 'hot') ? Constants.sources.HOT : Constants.sources.COLD\n    });\n  });\n}\n\nexport default function(options = {}) {\n  let withDefaults = xtend(options);\n\n  if (!options.controls) {\n    withDefaults.controls = {};\n  }\n\n  if (options.displayControlsDefault === false) {\n    withDefaults.controls = xtend(hideControls, options.controls);\n  } else {\n    withDefaults.controls = xtend(showControls, options.controls);\n  }\n\n  withDefaults = xtend(defaultOptions, withDefaults);\n\n  // Layers with a shared source should be adjacent for performance reasons\n  withDefaults.styles = addSources(withDefaults.styles, 'cold').concat(addSources(withDefaults.styles, 'hot'));\n\n  return withDefaults;\n}\n", "export default [\n  {\n    'id': 'gl-draw-polygon-fill-inactive',\n    'type': 'fill',\n    'filter': ['all',\n      ['==', 'active', 'false'],\n      ['==', '$type', 'Polygon'],\n      ['!=', 'mode', 'static']\n    ],\n    'paint': {\n      'fill-color': '#3bb2d0',\n      'fill-outline-color': '#3bb2d0',\n      'fill-opacity': 0.1\n    }\n  },\n  {\n    'id': 'gl-draw-polygon-fill-active',\n    'type': 'fill',\n    'filter': ['all', ['==', 'active', 'true'], ['==', '$type', 'Polygon']],\n    'paint': {\n      'fill-color': '#fbb03b',\n      'fill-outline-color': '#fbb03b',\n      'fill-opacity': 0.1\n    }\n  },\n  {\n    'id': 'gl-draw-polygon-midpoint',\n    'type': 'circle',\n    'filter': ['all',\n      ['==', '$type', 'Point'],\n      ['==', 'meta', 'midpoint']],\n    'paint': {\n      'circle-radius': 3,\n      'circle-color': '#fbb03b'\n    }\n  },\n  {\n    'id': 'gl-draw-polygon-stroke-inactive',\n    'type': 'line',\n    'filter': ['all',\n      ['==', 'active', 'false'],\n      ['==', '$type', 'Polygon'],\n      ['!=', 'mode', 'static']\n    ],\n    'layout': {\n      'line-cap': 'round',\n      'line-join': 'round'\n    },\n    'paint': {\n      'line-color': '#3bb2d0',\n      'line-width': 2\n    }\n  },\n  {\n    'id': 'gl-draw-polygon-stroke-active',\n    'type': 'line',\n    'filter': ['all', ['==', 'active', 'true'], ['==', '$type', 'Polygon']],\n    'layout': {\n      'line-cap': 'round',\n      'line-join': 'round'\n    },\n    'paint': {\n      'line-color': '#fbb03b',\n      'line-dasharray': [0.2, 2],\n      'line-width': 2\n    }\n  },\n  {\n    'id': 'gl-draw-line-inactive',\n    'type': 'line',\n    'filter': ['all',\n      ['==', 'active', 'false'],\n      ['==', '$type', 'LineString'],\n      ['!=', 'mode', 'static']\n    ],\n    'layout': {\n      'line-cap': 'round',\n      'line-join': 'round'\n    },\n    'paint': {\n      'line-color': '#3bb2d0',\n      'line-width': 2\n    }\n  },\n  {\n    'id': 'gl-draw-line-active',\n    'type': 'line',\n    'filter': ['all',\n      ['==', '$type', 'LineString'],\n      ['==', 'active', 'true']\n    ],\n    'layout': {\n      'line-cap': 'round',\n      'line-join': 'round'\n    },\n    'paint': {\n      'line-color': '#fbb03b',\n      'line-dasharray': [0.2, 2],\n      'line-width': 2\n    }\n  },\n  {\n    'id': 'gl-draw-polygon-and-line-vertex-stroke-inactive',\n    'type': 'circle',\n    'filter': ['all',\n      ['==', 'meta', 'vertex'],\n      ['==', '$type', 'Point'],\n      ['!=', 'mode', 'static']\n    ],\n    'paint': {\n      'circle-radius': 5,\n      'circle-color': '#fff'\n    }\n  },\n  {\n    'id': 'gl-draw-polygon-and-line-vertex-inactive',\n    'type': 'circle',\n    'filter': ['all',\n      ['==', 'meta', 'vertex'],\n      ['==', '$type', 'Point'],\n      ['!=', 'mode', 'static']\n    ],\n    'paint': {\n      'circle-radius': 3,\n      'circle-color': '#fbb03b'\n    }\n  },\n  {\n    'id': 'gl-draw-point-point-stroke-inactive',\n    'type': 'circle',\n    'filter': ['all',\n      ['==', 'active', 'false'],\n      ['==', '$type', 'Point'],\n      ['==', 'meta', 'feature'],\n      ['!=', 'mode', 'static']\n    ],\n    'paint': {\n      'circle-radius': 5,\n      'circle-opacity': 1,\n      'circle-color': '#fff'\n    }\n  },\n  {\n    'id': 'gl-draw-point-inactive',\n    'type': 'circle',\n    'filter': ['all',\n      ['==', 'active', 'false'],\n      ['==', '$type', 'Point'],\n      ['==', 'meta', 'feature'],\n      ['!=', 'mode', 'static']\n    ],\n    'paint': {\n      'circle-radius': 3,\n      'circle-color': '#3bb2d0'\n    }\n  },\n  {\n    'id': 'gl-draw-point-stroke-active',\n    'type': 'circle',\n    'filter': ['all',\n      ['==', '$type', 'Point'],\n      ['==', 'active', 'true'],\n      ['!=', 'meta', 'midpoint']\n    ],\n    'paint': {\n      'circle-radius': 7,\n      'circle-color': '#fff'\n    }\n  },\n  {\n    'id': 'gl-draw-point-active',\n    'type': 'circle',\n    'filter': ['all',\n      ['==', '$type', 'Point'],\n      ['!=', 'meta', 'midpoint'],\n      ['==', 'active', 'true']],\n    'paint': {\n      'circle-radius': 5,\n      'circle-color': '#fbb03b'\n    }\n  },\n  {\n    'id': 'gl-draw-polygon-fill-static',\n    'type': 'fill',\n    'filter': ['all', ['==', 'mode', 'static'], ['==', '$type', 'Polygon']],\n    'paint': {\n      'fill-color': '#404040',\n      'fill-outline-color': '#404040',\n      'fill-opacity': 0.1\n    }\n  },\n  {\n    'id': 'gl-draw-polygon-stroke-static',\n    'type': 'line',\n    'filter': ['all', ['==', 'mode', 'static'], ['==', '$type', 'Polygon']],\n    'layout': {\n      'line-cap': 'round',\n      'line-join': 'round'\n    },\n    'paint': {\n      'line-color': '#404040',\n      'line-width': 2\n    }\n  },\n  {\n    'id': 'gl-draw-line-static',\n    'type': 'line',\n    'filter': ['all', ['==', 'mode', 'static'], ['==', '$type', 'LineString']],\n    'layout': {\n      'line-cap': 'round',\n      'line-join': 'round'\n    },\n    'paint': {\n      'line-color': '#404040',\n      'line-width': 2\n    }\n  },\n  {\n    'id': 'gl-draw-point-static',\n    'type': 'circle',\n    'filter': ['all', ['==', 'mode', 'static'], ['==', '$type', 'Point']],\n    'paint': {\n      'circle-radius': 5,\n      'circle-color': '#404040'\n    }\n  }\n];\n", "/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n", "import isEqual from 'lodash.isequal';\nimport normalize from '@mapbox/geojson-normalize';\nimport hat from 'hat';\nimport featuresAt from './lib/features_at';\nimport stringSetsAreEqual from './lib/string_sets_are_equal';\nimport * as Constants from './constants';\nimport StringSet from './lib/string_set';\n\nimport Polygon from './feature_types/polygon';\nimport LineString from './feature_types/line_string';\nimport Point from './feature_types/point';\nimport MultiFeature from './feature_types/multi_feature';\n\nconst featureTypes = {\n  Polygon,\n  LineString,\n  Point,\n  MultiPolygon: MultiFeature,\n  MultiLineString: MultiFeature,\n  MultiPoint: MultiFeature\n};\n\nexport default function(ctx, api) {\n\n  api.modes = Constants.modes;\n\n  api.getFeatureIdsAt = function(point) {\n    const features = featuresAt.click({ point }, null, ctx);\n    return features.map(feature => feature.properties.id);\n  };\n\n  api.getSelectedIds = function () {\n    return ctx.store.getSelectedIds();\n  };\n\n  api.getSelected = function () {\n    return {\n      type: Constants.geojsonTypes.FEATURE_COLLECTION,\n      features: ctx.store.getSelectedIds().map(id => ctx.store.get(id)).map(feature => feature.toGeoJSON())\n    };\n  };\n\n  api.getSelectedPoints = function () {\n    return {\n      type: Constants.geojsonTypes.FEATURE_COLLECTION,\n      features: ctx.store.getSelectedCoordinates().map(coordinate => ({\n        type: Constants.geojsonTypes.FEATURE,\n        properties: {},\n        geometry: {\n          type: Constants.geojsonTypes.POINT,\n          coordinates: coordinate.coordinates\n        }\n      }))\n    };\n  };\n\n  api.set = function(featureCollection) {\n    if (featureCollection.type === undefined || featureCollection.type !== Constants.geojsonTypes.FEATURE_COLLECTION || !Array.isArray(featureCollection.features)) {\n      throw new Error('Invalid FeatureCollection');\n    }\n    const renderBatch = ctx.store.createRenderBatch();\n    let toDelete = ctx.store.getAllIds().slice();\n    const newIds = api.add(featureCollection);\n    const newIdsLookup = new StringSet(newIds);\n\n    toDelete = toDelete.filter(id => !newIdsLookup.has(id));\n    if (toDelete.length) {\n      api.delete(toDelete);\n    }\n\n    renderBatch();\n    return newIds;\n  };\n\n  api.add = function (geojson) {\n    const featureCollection = JSON.parse(JSON.stringify(normalize(geojson)));\n\n    const ids = featureCollection.features.map((feature) => {\n      feature.id = feature.id || hat();\n\n      if (feature.geometry === null) {\n        throw new Error('Invalid geometry: null');\n      }\n\n      if (ctx.store.get(feature.id) === undefined || ctx.store.get(feature.id).type !== feature.geometry.type) {\n        // If the feature has not yet been created ...\n        const Model = featureTypes[feature.geometry.type];\n        if (Model === undefined) {\n          throw new Error(`Invalid geometry type: ${feature.geometry.type}.`);\n        }\n        const internalFeature = new Model(ctx, feature);\n        ctx.store.add(internalFeature);\n      } else {\n        // If a feature of that id has already been created, and we are swapping it out ...\n        const internalFeature = ctx.store.get(feature.id);\n        internalFeature.properties = feature.properties;\n        if (!isEqual(internalFeature.getCoordinates(), feature.geometry.coordinates)) {\n          internalFeature.incomingCoords(feature.geometry.coordinates);\n        }\n      }\n      return feature.id;\n    });\n\n    ctx.store.render();\n    return ids;\n  };\n\n\n  api.get = function (id) {\n    const feature = ctx.store.get(id);\n    if (feature) {\n      return feature.toGeoJSON();\n    }\n  };\n\n  api.getAll = function() {\n    return {\n      type: Constants.geojsonTypes.FEATURE_COLLECTION,\n      features: ctx.store.getAll().map(feature => feature.toGeoJSON())\n    };\n  };\n\n  api.delete = function(featureIds) {\n    ctx.store.delete(featureIds, { silent: true });\n    // If we were in direct select mode and our selected feature no longer exists\n    // (because it was deleted), we need to get out of that mode.\n    if (api.getMode() === Constants.modes.DIRECT_SELECT && !ctx.store.getSelectedIds().length) {\n      ctx.events.changeMode(Constants.modes.SIMPLE_SELECT, undefined, { silent: true });\n    } else {\n      ctx.store.render();\n    }\n\n    return api;\n  };\n\n  api.deleteAll = function() {\n    ctx.store.delete(ctx.store.getAllIds(), { silent: true });\n    // If we were in direct select mode, now our selected feature no longer exists,\n    // so escape that mode.\n    if (api.getMode() === Constants.modes.DIRECT_SELECT) {\n      ctx.events.changeMode(Constants.modes.SIMPLE_SELECT, undefined, { silent: true });\n    } else {\n      ctx.store.render();\n    }\n\n    return api;\n  };\n\n  api.changeMode = function(mode, modeOptions = {}) {\n    // Avoid changing modes just to re-select what's already selected\n    if (mode === Constants.modes.SIMPLE_SELECT && api.getMode() === Constants.modes.SIMPLE_SELECT) {\n      if (stringSetsAreEqual((modeOptions.featureIds || []), ctx.store.getSelectedIds())) return api;\n      // And if we are changing the selection within simple_select mode, just change the selection,\n      // instead of stopping and re-starting the mode\n      ctx.store.setSelected(modeOptions.featureIds, { silent: true });\n      ctx.store.render();\n      return api;\n    }\n\n    if (mode === Constants.modes.DIRECT_SELECT && api.getMode() === Constants.modes.DIRECT_SELECT &&\n      modeOptions.featureId === ctx.store.getSelectedIds()[0]) {\n      return api;\n    }\n\n    ctx.events.changeMode(mode, modeOptions, { silent: true });\n    return api;\n  };\n\n  api.getMode = function() {\n    return ctx.events.getMode();\n  };\n\n  api.trash = function() {\n    ctx.events.trash({ silent: true });\n    return api;\n  };\n\n  api.combineFeatures = function() {\n    ctx.events.combineFeatures({ silent: true });\n    return api;\n  };\n\n  api.uncombineFeatures = function() {\n    ctx.events.uncombineFeatures({ silent: true });\n    return api;\n  };\n\n  api.setFeatureProperty = function(featureId, property, value) {\n    ctx.store.setFeatureProperty(featureId, property, value);\n    return api;\n  };\n\n  return api;\n}\n", "export default function(a, b) {\n  if (a.length !== b.length) return false;\n  return JSON.stringify(a.map(id => id).sort()) === JSON.stringify(b.map(id => id).sort());\n}\n", "import runSetup from './src/setup';\nimport setupOptions from './src/options';\nimport setupAPI from './src/api';\nimport * as Constants from './src/constants';\n\nconst setupDraw = function(options, api) {\n  options = setupOptions(options);\n\n  const ctx = {\n    options\n  };\n\n  api = setupAPI(ctx, api);\n  ctx.api = api;\n\n  const setup = runSetup(ctx);\n\n  api.onAdd = setup.onAdd;\n  api.onRemove = setup.onRemove;\n  api.types = Constants.types;\n  api.options = options;\n\n  return api;\n};\n\nfunction MapboxDraw(options) {\n  setupDraw(options, this);\n}\n\nimport modes from './src/modes/index';\nMapboxDraw.modes = modes;\n\nexport default MapboxDraw;\n", "export default require(\"./node_modules/@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.js\");"],
  "mappings": "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",
  "names": []
}
