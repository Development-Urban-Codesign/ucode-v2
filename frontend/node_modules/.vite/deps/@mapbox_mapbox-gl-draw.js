import {
  __commonJS
} from "./chunk-KTZKXPFA.js";

// node_modules/@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.js
var require_mapbox_gl_draw = __commonJS({
  "node_modules/@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.js"(exports, module) {
    !function(t, e) {
      typeof exports == "object" && typeof module != "undefined" ? module.exports = e() : typeof define == "function" && define.amd ? define(e) : (t = t || self).MapboxDraw = e();
    }(exports, function() {
      "use strict";
      var t = function(t2, e2) {
        var n2 = { drag: [], click: [], mousemove: [], mousedown: [], mouseup: [], mouseout: [], keydown: [], keyup: [], touchstart: [], touchmove: [], touchend: [], tap: [] }, o2 = { on: function(t3, e3, o3) {
          if (n2[t3] === void 0)
            throw new Error("Invalid event type: " + t3);
          n2[t3].push({ selector: e3, fn: o3 });
        }, render: function(t3) {
          e2.store.featureChanged(t3);
        } }, r2 = function(t3, r3) {
          for (var i2 = n2[t3], a2 = i2.length; a2--; ) {
            var s2 = i2[a2];
            if (s2.selector(r3)) {
              s2.fn.call(o2, r3) || e2.store.render(), e2.ui.updateMapClasses();
              break;
            }
          }
        };
        return t2.start.call(o2), { render: t2.render, stop: function() {
          t2.stop && t2.stop();
        }, trash: function() {
          t2.trash && (t2.trash(), e2.store.render());
        }, combineFeatures: function() {
          t2.combineFeatures && t2.combineFeatures();
        }, uncombineFeatures: function() {
          t2.uncombineFeatures && t2.uncombineFeatures();
        }, drag: function(t3) {
          r2("drag", t3);
        }, click: function(t3) {
          r2("click", t3);
        }, mousemove: function(t3) {
          r2("mousemove", t3);
        }, mousedown: function(t3) {
          r2("mousedown", t3);
        }, mouseup: function(t3) {
          r2("mouseup", t3);
        }, mouseout: function(t3) {
          r2("mouseout", t3);
        }, keydown: function(t3) {
          r2("keydown", t3);
        }, keyup: function(t3) {
          r2("keyup", t3);
        }, touchstart: function(t3) {
          r2("touchstart", t3);
        }, touchmove: function(t3) {
          r2("touchmove", t3);
        }, touchend: function(t3) {
          r2("touchend", t3);
        }, tap: function(t3) {
          r2("tap", t3);
        } };
      }, e = 6378137;
      function n(t2) {
        var e2 = 0;
        if (t2 && t2.length > 0) {
          e2 += Math.abs(o(t2[0]));
          for (var n2 = 1; n2 < t2.length; n2++)
            e2 -= Math.abs(o(t2[n2]));
        }
        return e2;
      }
      function o(t2) {
        var n2, o2, i2, a2, s2, u2, c2 = 0, l2 = t2.length;
        if (l2 > 2) {
          for (u2 = 0; u2 < l2; u2++)
            u2 === l2 - 2 ? (i2 = l2 - 2, a2 = l2 - 1, s2 = 0) : u2 === l2 - 1 ? (i2 = l2 - 1, a2 = 0, s2 = 1) : (i2 = u2, a2 = u2 + 1, s2 = u2 + 2), n2 = t2[i2], o2 = t2[a2], c2 += (r(t2[s2][0]) - r(n2[0])) * Math.sin(r(o2[1]));
          c2 = c2 * e * e / 2;
        }
        return c2;
      }
      function r(t2) {
        return t2 * Math.PI / 180;
      }
      var i = { geometry: function t2(e2) {
        var o2, r2 = 0;
        switch (e2.type) {
          case "Polygon":
            return n(e2.coordinates);
          case "MultiPolygon":
            for (o2 = 0; o2 < e2.coordinates.length; o2++)
              r2 += n(e2.coordinates[o2]);
            return r2;
          case "Point":
          case "MultiPoint":
          case "LineString":
          case "MultiLineString":
            return 0;
          case "GeometryCollection":
            for (o2 = 0; o2 < e2.geometries.length; o2++)
              r2 += t2(e2.geometries[o2]);
            return r2;
        }
      }, ring: o }, a = "mapboxgl-ctrl", s = "mapbox-gl-draw_ctrl-draw-btn", u = "mapbox-gl-draw_line", c = "mapbox-gl-draw_polygon", l = "mapbox-gl-draw_point", d = "mapbox-gl-draw_trash", p = "mapbox-gl-draw_combine", f = "mapbox-gl-draw_uncombine", h = "mapboxgl-ctrl-group", g = "active", y = "mapbox-gl-draw_boxselect", v = "mapbox-gl-draw-hot", m = "mapbox-gl-draw-cold", b = "add", _ = "move", S = "drag", x = "pointer", C = "none", E = { POLYGON: "polygon", LINE: "line_string", POINT: "point" }, M = "Feature", w = "Polygon", I = "LineString", L = "Point", P = "FeatureCollection", F = "Multi", O = "MultiPoint", k = "MultiLineString", T = "MultiPolygon", j = { DRAW_LINE_STRING: "draw_line_string", DRAW_POLYGON: "draw_polygon", DRAW_POINT: "draw_point", SIMPLE_SELECT: "simple_select", DIRECT_SELECT: "direct_select", STATIC: "static" }, A = "draw.create", D = "draw.delete", N = "draw.update", U = "draw.selectionchange", R = "draw.modechange", B = "draw.actionable", V = "draw.render", J = "draw.combine", G = "draw.uncombine", z = "move", $ = "change_coordinates", W = "feature", q = "midpoint", Y = "vertex", Z = "true", K = "false", X = ["scrollZoom", "boxZoom", "dragRotate", "dragPan", "keyboard", "doubleClickZoom", "touchZoomRotate"], H = { Point: 0, LineString: 1, Polygon: 2 };
      function Q(t2, e2) {
        var n2 = H[t2.geometry.type] - H[e2.geometry.type];
        return n2 === 0 && t2.geometry.type === w ? t2.area - e2.area : n2;
      }
      function tt(t2) {
        if (this._items = {}, this._nums = {}, this._length = t2 ? t2.length : 0, t2)
          for (var e2 = 0, n2 = t2.length; e2 < n2; e2++)
            this.add(t2[e2]), t2[e2] !== void 0 && (typeof t2[e2] == "string" ? this._items[t2[e2]] = e2 : this._nums[t2[e2]] = e2);
      }
      tt.prototype.add = function(t2) {
        return this.has(t2) || (this._length++, typeof t2 == "string" ? this._items[t2] = this._length : this._nums[t2] = this._length), this;
      }, tt.prototype.delete = function(t2) {
        return this.has(t2) === false || (this._length--, delete this._items[t2], delete this._nums[t2]), this;
      }, tt.prototype.has = function(t2) {
        return (typeof t2 == "string" || typeof t2 == "number") && (this._items[t2] !== void 0 || this._nums[t2] !== void 0);
      }, tt.prototype.values = function() {
        var t2 = this, e2 = [];
        return Object.keys(this._items).forEach(function(n2) {
          e2.push({ k: n2, v: t2._items[n2] });
        }), Object.keys(this._nums).forEach(function(n2) {
          e2.push({ k: JSON.parse(n2), v: t2._nums[n2] });
        }), e2.sort(function(t3, e3) {
          return t3.v - e3.v;
        }).map(function(t3) {
          return t3.k;
        });
      }, tt.prototype.clear = function() {
        return this._length = 0, this._items = {}, this._nums = {}, this;
      };
      var et = [W, q, Y], nt = { click: function(t2, e2, n2) {
        return ot(t2, e2, n2, n2.options.clickBuffer);
      }, touch: function(t2, e2, n2) {
        return ot(t2, e2, n2, n2.options.touchBuffer);
      } };
      function ot(t2, e2, n2, o2) {
        if (n2.map === null)
          return [];
        var r2 = t2 ? function(t3, e3) {
          return e3 === void 0 && (e3 = 0), [[t3.point.x - e3, t3.point.y - e3], [t3.point.x + e3, t3.point.y + e3]];
        }(t2, o2) : e2, a2 = {};
        n2.options.styles && (a2.layers = n2.options.styles.map(function(t3) {
          return t3.id;
        }));
        var s2 = n2.map.queryRenderedFeatures(r2, a2).filter(function(t3) {
          return et.indexOf(t3.properties.meta) !== -1;
        }), u2 = new tt(), c2 = [];
        return s2.forEach(function(t3) {
          var e3 = t3.properties.id;
          u2.has(e3) || (u2.add(e3), c2.push(t3));
        }), function(t3) {
          return t3.map(function(t4) {
            return t4.geometry.type === w && (t4.area = i.geometry({ type: M, property: {}, geometry: t4.geometry })), t4;
          }).sort(Q).map(function(t4) {
            return delete t4.area, t4;
          });
        }(c2);
      }
      function rt(t2, e2) {
        var n2 = nt.click(t2, null, e2), o2 = { mouse: C };
        return n2[0] && (o2.mouse = n2[0].properties.active === Z ? _ : x, o2.feature = n2[0].properties.meta), e2.events.currentModeName().indexOf("draw") !== -1 && (o2.mouse = b), e2.ui.queueMapClasses(o2), e2.ui.updateMapClasses(), n2[0];
      }
      function it(t2, e2) {
        var n2 = t2.x - e2.x, o2 = t2.y - e2.y;
        return Math.sqrt(n2 * n2 + o2 * o2);
      }
      function at(t2, e2, n2) {
        n2 === void 0 && (n2 = {});
        var o2 = n2.fineTolerance != null ? n2.fineTolerance : 4, r2 = n2.grossTolerance != null ? n2.grossTolerance : 12, i2 = n2.interval != null ? n2.interval : 500;
        t2.point = t2.point || e2.point, t2.time = t2.time || e2.time;
        var a2 = it(t2.point, e2.point);
        return a2 < o2 || a2 < r2 && e2.time - t2.time < i2;
      }
      function st(t2, e2, n2) {
        n2 === void 0 && (n2 = {});
        var o2 = n2.tolerance != null ? n2.tolerance : 25, r2 = n2.interval != null ? n2.interval : 250;
        return t2.point = t2.point || e2.point, t2.time = t2.time || e2.time, it(t2.point, e2.point) < o2 && e2.time - t2.time < r2;
      }
      function ut(t2, e2) {
        return t2(e2 = { exports: {} }, e2.exports), e2.exports;
      }
      var ct = ut(function(t2) {
        var e2 = t2.exports = function(t3, n2) {
          if (n2 || (n2 = 16), t3 === void 0 && (t3 = 128), t3 <= 0)
            return "0";
          for (var o2 = Math.log(Math.pow(2, t3)) / Math.log(n2), r2 = 2; o2 === 1 / 0; r2 *= 2)
            o2 = Math.log(Math.pow(2, t3 / r2)) / Math.log(n2) * r2;
          var i2 = o2 - Math.floor(o2), a2 = "";
          for (r2 = 0; r2 < Math.floor(o2); r2++) {
            a2 = Math.floor(Math.random() * n2).toString(n2) + a2;
          }
          if (i2) {
            var s2 = Math.pow(n2, i2);
            a2 = Math.floor(Math.random() * s2).toString(n2) + a2;
          }
          var u2 = parseInt(a2, n2);
          return u2 !== 1 / 0 && u2 >= Math.pow(2, t3) ? e2(t3, n2) : a2;
        };
        e2.rack = function(t3, n2, o2) {
          var r2 = function(r3) {
            var a2 = 0;
            do {
              if (a2++ > 10) {
                if (!o2)
                  throw new Error("too many ID collisions, use more bits");
                t3 += o2;
              }
              var s2 = e2(t3, n2);
            } while (Object.hasOwnProperty.call(i2, s2));
            return i2[s2] = r3, s2;
          }, i2 = r2.hats = {};
          return r2.get = function(t4) {
            return r2.hats[t4];
          }, r2.set = function(t4, e3) {
            return r2.hats[t4] = e3, r2;
          }, r2.bits = t3 || 128, r2.base = n2 || 16, r2;
        };
      }), lt = function(t2, e2) {
        this.ctx = t2, this.properties = e2.properties || {}, this.coordinates = e2.geometry.coordinates, this.id = e2.id || ct(), this.type = e2.geometry.type;
      };
      lt.prototype.changed = function() {
        this.ctx.store.featureChanged(this.id);
      }, lt.prototype.incomingCoords = function(t2) {
        this.setCoordinates(t2);
      }, lt.prototype.setCoordinates = function(t2) {
        this.coordinates = t2, this.changed();
      }, lt.prototype.getCoordinates = function() {
        return JSON.parse(JSON.stringify(this.coordinates));
      }, lt.prototype.setProperty = function(t2, e2) {
        this.properties[t2] = e2;
      }, lt.prototype.toGeoJSON = function() {
        return JSON.parse(JSON.stringify({ id: this.id, type: M, properties: this.properties, geometry: { coordinates: this.getCoordinates(), type: this.type } }));
      }, lt.prototype.internal = function(t2) {
        var e2 = { id: this.id, meta: W, "meta:type": this.type, active: K, mode: t2 };
        if (this.ctx.options.userProperties)
          for (var n2 in this.properties)
            e2["user_" + n2] = this.properties[n2];
        return { type: M, properties: e2, geometry: { coordinates: this.getCoordinates(), type: this.type } };
      };
      var dt = function(t2, e2) {
        lt.call(this, t2, e2);
      };
      (dt.prototype = Object.create(lt.prototype)).isValid = function() {
        return typeof this.coordinates[0] == "number" && typeof this.coordinates[1] == "number";
      }, dt.prototype.updateCoordinate = function(t2, e2, n2) {
        this.coordinates = arguments.length === 3 ? [e2, n2] : [t2, e2], this.changed();
      }, dt.prototype.getCoordinate = function() {
        return this.getCoordinates();
      };
      var pt = function(t2, e2) {
        lt.call(this, t2, e2);
      };
      (pt.prototype = Object.create(lt.prototype)).isValid = function() {
        return this.coordinates.length > 1;
      }, pt.prototype.addCoordinate = function(t2, e2, n2) {
        this.changed();
        var o2 = parseInt(t2, 10);
        this.coordinates.splice(o2, 0, [e2, n2]);
      }, pt.prototype.getCoordinate = function(t2) {
        var e2 = parseInt(t2, 10);
        return JSON.parse(JSON.stringify(this.coordinates[e2]));
      }, pt.prototype.removeCoordinate = function(t2) {
        this.changed(), this.coordinates.splice(parseInt(t2, 10), 1);
      }, pt.prototype.updateCoordinate = function(t2, e2, n2) {
        var o2 = parseInt(t2, 10);
        this.coordinates[o2] = [e2, n2], this.changed();
      };
      var ft = function(t2, e2) {
        lt.call(this, t2, e2), this.coordinates = this.coordinates.map(function(t3) {
          return t3.slice(0, -1);
        });
      };
      (ft.prototype = Object.create(lt.prototype)).isValid = function() {
        return this.coordinates.length !== 0 && this.coordinates.every(function(t2) {
          return t2.length > 2;
        });
      }, ft.prototype.incomingCoords = function(t2) {
        this.coordinates = t2.map(function(t3) {
          return t3.slice(0, -1);
        }), this.changed();
      }, ft.prototype.setCoordinates = function(t2) {
        this.coordinates = t2, this.changed();
      }, ft.prototype.addCoordinate = function(t2, e2, n2) {
        this.changed();
        var o2 = t2.split(".").map(function(t3) {
          return parseInt(t3, 10);
        });
        this.coordinates[o2[0]].splice(o2[1], 0, [e2, n2]);
      }, ft.prototype.removeCoordinate = function(t2) {
        this.changed();
        var e2 = t2.split(".").map(function(t3) {
          return parseInt(t3, 10);
        }), n2 = this.coordinates[e2[0]];
        n2 && (n2.splice(e2[1], 1), n2.length < 3 && this.coordinates.splice(e2[0], 1));
      }, ft.prototype.getCoordinate = function(t2) {
        var e2 = t2.split(".").map(function(t3) {
          return parseInt(t3, 10);
        }), n2 = this.coordinates[e2[0]];
        return JSON.parse(JSON.stringify(n2[e2[1]]));
      }, ft.prototype.getCoordinates = function() {
        return this.coordinates.map(function(t2) {
          return t2.concat([t2[0]]);
        });
      }, ft.prototype.updateCoordinate = function(t2, e2, n2) {
        this.changed();
        var o2 = t2.split("."), r2 = parseInt(o2[0], 10), i2 = parseInt(o2[1], 10);
        this.coordinates[r2] === void 0 && (this.coordinates[r2] = []), this.coordinates[r2][i2] = [e2, n2];
      };
      var ht = { MultiPoint: dt, MultiLineString: pt, MultiPolygon: ft }, gt = function(t2, e2, n2, o2, r2) {
        var i2 = n2.split("."), a2 = parseInt(i2[0], 10), s2 = i2[1] ? i2.slice(1).join(".") : null;
        return t2[a2][e2](s2, o2, r2);
      }, yt = function(t2, e2) {
        if (lt.call(this, t2, e2), delete this.coordinates, this.model = ht[e2.geometry.type], this.model === void 0)
          throw new TypeError(e2.geometry.type + " is not a valid type");
        this.features = this._coordinatesToFeatures(e2.geometry.coordinates);
      };
      function vt(t2) {
        this.map = t2.map, this.drawConfig = JSON.parse(JSON.stringify(t2.options || {})), this._ctx = t2;
      }
      (yt.prototype = Object.create(lt.prototype))._coordinatesToFeatures = function(t2) {
        var e2 = this, n2 = this.model.bind(this);
        return t2.map(function(t3) {
          return new n2(e2.ctx, { id: ct(), type: M, properties: {}, geometry: { coordinates: t3, type: e2.type.replace("Multi", "") } });
        });
      }, yt.prototype.isValid = function() {
        return this.features.every(function(t2) {
          return t2.isValid();
        });
      }, yt.prototype.setCoordinates = function(t2) {
        this.features = this._coordinatesToFeatures(t2), this.changed();
      }, yt.prototype.getCoordinate = function(t2) {
        return gt(this.features, "getCoordinate", t2);
      }, yt.prototype.getCoordinates = function() {
        return JSON.parse(JSON.stringify(this.features.map(function(t2) {
          return t2.type === w ? t2.getCoordinates() : t2.coordinates;
        })));
      }, yt.prototype.updateCoordinate = function(t2, e2, n2) {
        gt(this.features, "updateCoordinate", t2, e2, n2), this.changed();
      }, yt.prototype.addCoordinate = function(t2, e2, n2) {
        gt(this.features, "addCoordinate", t2, e2, n2), this.changed();
      }, yt.prototype.removeCoordinate = function(t2) {
        gt(this.features, "removeCoordinate", t2), this.changed();
      }, yt.prototype.getFeatures = function() {
        return this.features;
      }, vt.prototype.setSelected = function(t2) {
        return this._ctx.store.setSelected(t2);
      }, vt.prototype.setSelectedCoordinates = function(t2) {
        var e2 = this;
        this._ctx.store.setSelectedCoordinates(t2), t2.reduce(function(t3, n2) {
          return t3[n2.feature_id] === void 0 && (t3[n2.feature_id] = true, e2._ctx.store.get(n2.feature_id).changed()), t3;
        }, {});
      }, vt.prototype.getSelected = function() {
        return this._ctx.store.getSelected();
      }, vt.prototype.getSelectedIds = function() {
        return this._ctx.store.getSelectedIds();
      }, vt.prototype.isSelected = function(t2) {
        return this._ctx.store.isSelected(t2);
      }, vt.prototype.getFeature = function(t2) {
        return this._ctx.store.get(t2);
      }, vt.prototype.select = function(t2) {
        return this._ctx.store.select(t2);
      }, vt.prototype.deselect = function(t2) {
        return this._ctx.store.deselect(t2);
      }, vt.prototype.deleteFeature = function(t2, e2) {
        return e2 === void 0 && (e2 = {}), this._ctx.store.delete(t2, e2);
      }, vt.prototype.addFeature = function(t2) {
        return this._ctx.store.add(t2);
      }, vt.prototype.clearSelectedFeatures = function() {
        return this._ctx.store.clearSelected();
      }, vt.prototype.clearSelectedCoordinates = function() {
        return this._ctx.store.clearSelectedCoordinates();
      }, vt.prototype.setActionableState = function(t2) {
        t2 === void 0 && (t2 = {});
        var e2 = { trash: t2.trash || false, combineFeatures: t2.combineFeatures || false, uncombineFeatures: t2.uncombineFeatures || false };
        return this._ctx.events.actionable(e2);
      }, vt.prototype.changeMode = function(t2, e2, n2) {
        return e2 === void 0 && (e2 = {}), n2 === void 0 && (n2 = {}), this._ctx.events.changeMode(t2, e2, n2);
      }, vt.prototype.updateUIClasses = function(t2) {
        return this._ctx.ui.queueMapClasses(t2);
      }, vt.prototype.activateUIButton = function(t2) {
        return this._ctx.ui.setActiveButton(t2);
      }, vt.prototype.featuresAt = function(t2, e2, n2) {
        if (n2 === void 0 && (n2 = "click"), n2 !== "click" && n2 !== "touch")
          throw new Error("invalid buffer type");
        return nt[n2](t2, e2, this._ctx);
      }, vt.prototype.newFeature = function(t2) {
        var e2 = t2.geometry.type;
        return e2 === L ? new dt(this._ctx, t2) : e2 === I ? new pt(this._ctx, t2) : e2 === w ? new ft(this._ctx, t2) : new yt(this._ctx, t2);
      }, vt.prototype.isInstanceOf = function(t2, e2) {
        if (t2 === L)
          return e2 instanceof dt;
        if (t2 === I)
          return e2 instanceof pt;
        if (t2 === w)
          return e2 instanceof ft;
        if (t2 === "MultiFeature")
          return e2 instanceof yt;
        throw new Error("Unknown feature class: " + t2);
      }, vt.prototype.doRender = function(t2) {
        return this._ctx.store.featureChanged(t2);
      }, vt.prototype.onSetup = function() {
      }, vt.prototype.onDrag = function() {
      }, vt.prototype.onClick = function() {
      }, vt.prototype.onMouseMove = function() {
      }, vt.prototype.onMouseDown = function() {
      }, vt.prototype.onMouseUp = function() {
      }, vt.prototype.onMouseOut = function() {
      }, vt.prototype.onKeyUp = function() {
      }, vt.prototype.onKeyDown = function() {
      }, vt.prototype.onTouchStart = function() {
      }, vt.prototype.onTouchMove = function() {
      }, vt.prototype.onTouchEnd = function() {
      }, vt.prototype.onTap = function() {
      }, vt.prototype.onStop = function() {
      }, vt.prototype.onTrash = function() {
      }, vt.prototype.onCombineFeature = function() {
      }, vt.prototype.onUncombineFeature = function() {
      }, vt.prototype.toDisplayFeatures = function() {
        throw new Error("You must overwrite toDisplayFeatures");
      };
      var mt = { drag: "onDrag", click: "onClick", mousemove: "onMouseMove", mousedown: "onMouseDown", mouseup: "onMouseUp", mouseout: "onMouseOut", keyup: "onKeyUp", keydown: "onKeyDown", touchstart: "onTouchStart", touchmove: "onTouchMove", touchend: "onTouchEnd", tap: "onTap" }, bt = Object.keys(mt);
      function _t(t2) {
        var e2 = Object.keys(t2);
        return function(n2, o2) {
          o2 === void 0 && (o2 = {});
          var r2 = {}, i2 = e2.reduce(function(e3, n3) {
            return e3[n3] = t2[n3], e3;
          }, new vt(n2));
          return { start: function() {
            var e3 = this;
            r2 = i2.onSetup(o2), bt.forEach(function(n3) {
              var o3, a2 = mt[n3], s2 = function() {
                return false;
              };
              t2[a2] && (s2 = function() {
                return true;
              }), e3.on(n3, s2, (o3 = a2, function(t3) {
                return i2[o3](r2, t3);
              }));
            });
          }, stop: function() {
            i2.onStop(r2);
          }, trash: function() {
            i2.onTrash(r2);
          }, combineFeatures: function() {
            i2.onCombineFeatures(r2);
          }, uncombineFeatures: function() {
            i2.onUncombineFeatures(r2);
          }, render: function(t3, e3) {
            i2.toDisplayFeatures(r2, t3, e3);
          } };
        };
      }
      function St(t2) {
        return [].concat(t2).filter(function(t3) {
          return t3 !== void 0;
        });
      }
      function xt() {
        var t2 = this;
        if (!(t2.ctx.map && t2.ctx.map.getSource(v) !== void 0))
          return u2();
        var e2 = t2.ctx.events.currentModeName();
        t2.ctx.ui.queueMapClasses({ mode: e2 });
        var n2 = [], o2 = [];
        t2.isDirty ? o2 = t2.getAllIds() : (n2 = t2.getChangedIds().filter(function(e3) {
          return t2.get(e3) !== void 0;
        }), o2 = t2.sources.hot.filter(function(e3) {
          return e3.properties.id && n2.indexOf(e3.properties.id) === -1 && t2.get(e3.properties.id) !== void 0;
        }).map(function(t3) {
          return t3.properties.id;
        })), t2.sources.hot = [];
        var r2 = t2.sources.cold.length;
        t2.sources.cold = t2.isDirty ? [] : t2.sources.cold.filter(function(t3) {
          var e3 = t3.properties.id || t3.properties.parent;
          return n2.indexOf(e3) === -1;
        });
        var i2 = r2 !== t2.sources.cold.length || o2.length > 0;
        function a2(n3, o3) {
          var r3 = t2.get(n3).internal(e2);
          t2.ctx.events.currentModeRender(r3, function(e3) {
            t2.sources[o3].push(e3);
          });
        }
        if (n2.forEach(function(t3) {
          return a2(t3, "hot");
        }), o2.forEach(function(t3) {
          return a2(t3, "cold");
        }), i2 && t2.ctx.map.getSource(m).setData({ type: P, features: t2.sources.cold }), t2.ctx.map.getSource(v).setData({ type: P, features: t2.sources.hot }), t2._emitSelectionChange && (t2.ctx.map.fire(U, { features: t2.getSelected().map(function(t3) {
          return t3.toGeoJSON();
        }), points: t2.getSelectedCoordinates().map(function(t3) {
          return { type: M, properties: {}, geometry: { type: L, coordinates: t3.coordinates } };
        }) }), t2._emitSelectionChange = false), t2._deletedFeaturesToEmit.length) {
          var s2 = t2._deletedFeaturesToEmit.map(function(t3) {
            return t3.toGeoJSON();
          });
          t2._deletedFeaturesToEmit = [], t2.ctx.map.fire(D, { features: s2 });
        }
        function u2() {
          t2.isDirty = false, t2.clearChangedIds();
        }
        u2(), t2.ctx.map.fire(V, {});
      }
      function Ct(t2) {
        var e2, n2 = this;
        this._features = {}, this._featureIds = new tt(), this._selectedFeatureIds = new tt(), this._selectedCoordinates = [], this._changedFeatureIds = new tt(), this._deletedFeaturesToEmit = [], this._emitSelectionChange = false, this._mapInitialConfig = {}, this.ctx = t2, this.sources = { hot: [], cold: [] }, this.render = function() {
          e2 || (e2 = requestAnimationFrame(function() {
            e2 = null, xt.call(n2);
          }));
        }, this.isDirty = false;
      }
      function Et(t2, e2) {
        var n2 = t2._selectedCoordinates.filter(function(e3) {
          return t2._selectedFeatureIds.has(e3.feature_id);
        });
        t2._selectedCoordinates.length === n2.length || e2.silent || (t2._emitSelectionChange = true), t2._selectedCoordinates = n2;
      }
      Ct.prototype.createRenderBatch = function() {
        var t2 = this, e2 = this.render, n2 = 0;
        return this.render = function() {
          n2++;
        }, function() {
          t2.render = e2, n2 > 0 && t2.render();
        };
      }, Ct.prototype.setDirty = function() {
        return this.isDirty = true, this;
      }, Ct.prototype.featureChanged = function(t2) {
        return this._changedFeatureIds.add(t2), this;
      }, Ct.prototype.getChangedIds = function() {
        return this._changedFeatureIds.values();
      }, Ct.prototype.clearChangedIds = function() {
        return this._changedFeatureIds.clear(), this;
      }, Ct.prototype.getAllIds = function() {
        return this._featureIds.values();
      }, Ct.prototype.add = function(t2) {
        return this.featureChanged(t2.id), this._features[t2.id] = t2, this._featureIds.add(t2.id), this;
      }, Ct.prototype.delete = function(t2, e2) {
        var n2 = this;
        return e2 === void 0 && (e2 = {}), St(t2).forEach(function(t3) {
          n2._featureIds.has(t3) && (n2._featureIds.delete(t3), n2._selectedFeatureIds.delete(t3), e2.silent || n2._deletedFeaturesToEmit.indexOf(n2._features[t3]) === -1 && n2._deletedFeaturesToEmit.push(n2._features[t3]), delete n2._features[t3], n2.isDirty = true);
        }), Et(this, e2), this;
      }, Ct.prototype.get = function(t2) {
        return this._features[t2];
      }, Ct.prototype.getAll = function() {
        var t2 = this;
        return Object.keys(this._features).map(function(e2) {
          return t2._features[e2];
        });
      }, Ct.prototype.select = function(t2, e2) {
        var n2 = this;
        return e2 === void 0 && (e2 = {}), St(t2).forEach(function(t3) {
          n2._selectedFeatureIds.has(t3) || (n2._selectedFeatureIds.add(t3), n2._changedFeatureIds.add(t3), e2.silent || (n2._emitSelectionChange = true));
        }), this;
      }, Ct.prototype.deselect = function(t2, e2) {
        var n2 = this;
        return e2 === void 0 && (e2 = {}), St(t2).forEach(function(t3) {
          n2._selectedFeatureIds.has(t3) && (n2._selectedFeatureIds.delete(t3), n2._changedFeatureIds.add(t3), e2.silent || (n2._emitSelectionChange = true));
        }), Et(this, e2), this;
      }, Ct.prototype.clearSelected = function(t2) {
        return t2 === void 0 && (t2 = {}), this.deselect(this._selectedFeatureIds.values(), { silent: t2.silent }), this;
      }, Ct.prototype.setSelected = function(t2, e2) {
        var n2 = this;
        return e2 === void 0 && (e2 = {}), t2 = St(t2), this.deselect(this._selectedFeatureIds.values().filter(function(e3) {
          return t2.indexOf(e3) === -1;
        }), { silent: e2.silent }), this.select(t2.filter(function(t3) {
          return !n2._selectedFeatureIds.has(t3);
        }), { silent: e2.silent }), this;
      }, Ct.prototype.setSelectedCoordinates = function(t2) {
        return this._selectedCoordinates = t2, this._emitSelectionChange = true, this;
      }, Ct.prototype.clearSelectedCoordinates = function() {
        return this._selectedCoordinates = [], this._emitSelectionChange = true, this;
      }, Ct.prototype.getSelectedIds = function() {
        return this._selectedFeatureIds.values();
      }, Ct.prototype.getSelected = function() {
        var t2 = this;
        return this._selectedFeatureIds.values().map(function(e2) {
          return t2.get(e2);
        });
      }, Ct.prototype.getSelectedCoordinates = function() {
        var t2 = this;
        return this._selectedCoordinates.map(function(e2) {
          return { coordinates: t2.get(e2.feature_id).getCoordinate(e2.coord_path) };
        });
      }, Ct.prototype.isSelected = function(t2) {
        return this._selectedFeatureIds.has(t2);
      }, Ct.prototype.setFeatureProperty = function(t2, e2, n2) {
        this.get(t2).setProperty(e2, n2), this.featureChanged(t2);
      }, Ct.prototype.storeMapConfig = function() {
        var t2 = this;
        X.forEach(function(e2) {
          t2.ctx.map[e2] && (t2._mapInitialConfig[e2] = t2.ctx.map[e2].isEnabled());
        });
      }, Ct.prototype.restoreMapConfig = function() {
        var t2 = this;
        Object.keys(this._mapInitialConfig).forEach(function(e2) {
          t2._mapInitialConfig[e2] ? t2.ctx.map[e2].enable() : t2.ctx.map[e2].disable();
        });
      }, Ct.prototype.getInitialConfigValue = function(t2) {
        return this._mapInitialConfig[t2] === void 0 || this._mapInitialConfig[t2];
      };
      var Mt = function() {
        for (var t2 = arguments, e2 = {}, n2 = 0; n2 < arguments.length; n2++) {
          var o2 = t2[n2];
          for (var r2 in o2)
            wt.call(o2, r2) && (e2[r2] = o2[r2]);
        }
        return e2;
      }, wt = Object.prototype.hasOwnProperty;
      var It = ["mode", "feature", "mouse"];
      function Lt(e2) {
        var n2 = null, o2 = null, r2 = { onRemove: function() {
          return e2.map.off("load", r2.connect), clearInterval(o2), r2.removeLayers(), e2.store.restoreMapConfig(), e2.ui.removeButtons(), e2.events.removeEventListeners(), e2.ui.clearMapClasses(), e2.map = null, e2.container = null, e2.store = null, n2 && n2.parentNode && n2.parentNode.removeChild(n2), n2 = null, this;
        }, connect: function() {
          e2.map.off("load", r2.connect), clearInterval(o2), r2.addLayers(), e2.store.storeMapConfig(), e2.events.addEventListeners();
        }, onAdd: function(i2) {
          var y2 = i2.fire;
          return i2.fire = function(t2, e3) {
            var n3 = arguments;
            return y2.length === 1 && arguments.length !== 1 && (n3 = [Mt({}, { type: t2 }, e3)]), y2.apply(i2, n3);
          }, e2.map = i2, e2.events = function(e3) {
            var n3 = Object.keys(e3.options.modes).reduce(function(t2, n4) {
              return t2[n4] = _t(e3.options.modes[n4]), t2;
            }, {}), o3 = {}, r3 = {}, i3 = {}, a2 = null, s2 = null;
            i3.drag = function(t2, n4) {
              n4({ point: t2.point, time: new Date().getTime() }) ? (e3.ui.queueMapClasses({ mouse: S }), s2.drag(t2)) : t2.originalEvent.stopPropagation();
            }, i3.mousedrag = function(t2) {
              i3.drag(t2, function(t3) {
                return !at(o3, t3);
              });
            }, i3.touchdrag = function(t2) {
              i3.drag(t2, function(t3) {
                return !st(r3, t3);
              });
            }, i3.mousemove = function(t2) {
              if ((t2.originalEvent.buttons !== void 0 ? t2.originalEvent.buttons : t2.originalEvent.which) === 1)
                return i3.mousedrag(t2);
              var n4 = rt(t2, e3);
              t2.featureTarget = n4, s2.mousemove(t2);
            }, i3.mousedown = function(t2) {
              o3 = { time: new Date().getTime(), point: t2.point };
              var n4 = rt(t2, e3);
              t2.featureTarget = n4, s2.mousedown(t2);
            }, i3.mouseup = function(t2) {
              var n4 = rt(t2, e3);
              t2.featureTarget = n4, at(o3, { point: t2.point, time: new Date().getTime() }) ? s2.click(t2) : s2.mouseup(t2);
            }, i3.mouseout = function(t2) {
              s2.mouseout(t2);
            }, i3.touchstart = function(t2) {
              if (t2.originalEvent.preventDefault(), e3.options.touchEnabled) {
                r3 = { time: new Date().getTime(), point: t2.point };
                var n4 = nt.touch(t2, null, e3)[0];
                t2.featureTarget = n4, s2.touchstart(t2);
              }
            }, i3.touchmove = function(t2) {
              if (t2.originalEvent.preventDefault(), e3.options.touchEnabled)
                return s2.touchmove(t2), i3.touchdrag(t2);
            }, i3.touchend = function(t2) {
              if (t2.originalEvent.preventDefault(), e3.options.touchEnabled) {
                var n4 = nt.touch(t2, null, e3)[0];
                t2.featureTarget = n4, st(r3, { time: new Date().getTime(), point: t2.point }) ? s2.tap(t2) : s2.touchend(t2);
              }
            };
            var u2 = function(t2) {
              return !(t2 === 8 || t2 === 46 || t2 >= 48 && t2 <= 57);
            };
            function c2(o4, r4, i4) {
              i4 === void 0 && (i4 = {}), s2.stop();
              var u3 = n3[o4];
              if (u3 === void 0)
                throw new Error(o4 + " is not valid");
              a2 = o4;
              var c3 = u3(e3, r4);
              s2 = t(c3, e3), i4.silent || e3.map.fire(R, { mode: o4 }), e3.store.setDirty(), e3.store.render();
            }
            i3.keydown = function(t2) {
              (t2.srcElement || t2.target).classList[0] === "mapboxgl-canvas" && (t2.keyCode !== 8 && t2.keyCode !== 46 || !e3.options.controls.trash ? u2(t2.keyCode) ? s2.keydown(t2) : t2.keyCode === 49 && e3.options.controls.point ? c2(j.DRAW_POINT) : t2.keyCode === 50 && e3.options.controls.line_string ? c2(j.DRAW_LINE_STRING) : t2.keyCode === 51 && e3.options.controls.polygon && c2(j.DRAW_POLYGON) : (t2.preventDefault(), s2.trash()));
            }, i3.keyup = function(t2) {
              u2(t2.keyCode) && s2.keyup(t2);
            }, i3.zoomend = function() {
              e3.store.changeZoom();
            }, i3.data = function(t2) {
              if (t2.dataType === "style") {
                var n4 = e3.setup, o4 = e3.map, r4 = e3.options, i4 = e3.store;
                r4.styles.some(function(t3) {
                  return o4.getLayer(t3.id);
                }) || (n4.addLayers(), i4.setDirty(), i4.render());
              }
            };
            var l2 = { trash: false, combineFeatures: false, uncombineFeatures: false };
            return { start: function() {
              a2 = e3.options.defaultMode, s2 = t(n3[a2](e3), e3);
            }, changeMode: c2, actionable: function(t2) {
              var n4 = false;
              Object.keys(t2).forEach(function(e4) {
                if (l2[e4] === void 0)
                  throw new Error("Invalid action type");
                l2[e4] !== t2[e4] && (n4 = true), l2[e4] = t2[e4];
              }), n4 && e3.map.fire(B, { actions: l2 });
            }, currentModeName: function() {
              return a2;
            }, currentModeRender: function(t2, e4) {
              return s2.render(t2, e4);
            }, fire: function(t2, e4) {
              i3[t2] && i3[t2](e4);
            }, addEventListeners: function() {
              e3.map.on("mousemove", i3.mousemove), e3.map.on("mousedown", i3.mousedown), e3.map.on("mouseup", i3.mouseup), e3.map.on("data", i3.data), e3.map.on("touchmove", i3.touchmove), e3.map.on("touchstart", i3.touchstart), e3.map.on("touchend", i3.touchend), e3.container.addEventListener("mouseout", i3.mouseout), e3.options.keybindings && (e3.container.addEventListener("keydown", i3.keydown), e3.container.addEventListener("keyup", i3.keyup));
            }, removeEventListeners: function() {
              e3.map.off("mousemove", i3.mousemove), e3.map.off("mousedown", i3.mousedown), e3.map.off("mouseup", i3.mouseup), e3.map.off("data", i3.data), e3.map.off("touchmove", i3.touchmove), e3.map.off("touchstart", i3.touchstart), e3.map.off("touchend", i3.touchend), e3.container.removeEventListener("mouseout", i3.mouseout), e3.options.keybindings && (e3.container.removeEventListener("keydown", i3.keydown), e3.container.removeEventListener("keyup", i3.keyup));
            }, trash: function(t2) {
              s2.trash(t2);
            }, combineFeatures: function() {
              s2.combineFeatures();
            }, uncombineFeatures: function() {
              s2.uncombineFeatures();
            }, getMode: function() {
              return a2;
            } };
          }(e2), e2.ui = function(t2) {
            var e3 = {}, n3 = null, o3 = { mode: null, feature: null, mouse: null }, r3 = { mode: null, feature: null, mouse: null };
            function i3(t3) {
              r3 = Mt(r3, t3);
            }
            function y3() {
              var e4, n4;
              if (t2.container) {
                var i4 = [], a2 = [];
                It.forEach(function(t3) {
                  r3[t3] !== o3[t3] && (i4.push(t3 + "-" + o3[t3]), r3[t3] !== null && a2.push(t3 + "-" + r3[t3]));
                }), i4.length > 0 && (e4 = t2.container.classList).remove.apply(e4, i4), a2.length > 0 && (n4 = t2.container.classList).add.apply(n4, a2), o3 = Mt(o3, r3);
              }
            }
            function v2(t3, e4) {
              e4 === void 0 && (e4 = {});
              var o4 = document.createElement("button");
              return o4.className = s + " " + e4.className, o4.setAttribute("title", e4.title), e4.container.appendChild(o4), o4.addEventListener("click", function(o5) {
                if (o5.preventDefault(), o5.stopPropagation(), o5.target === n3)
                  return m2(), void e4.onDeactivate();
                b2(t3), e4.onActivate();
              }, true), o4;
            }
            function m2() {
              n3 && (n3.classList.remove(g), n3 = null);
            }
            function b2(t3) {
              m2();
              var o4 = e3[t3];
              o4 && o4 && t3 !== "trash" && (o4.classList.add(g), n3 = o4);
            }
            return { setActiveButton: b2, queueMapClasses: i3, updateMapClasses: y3, clearMapClasses: function() {
              i3({ mode: null, feature: null, mouse: null }), y3();
            }, addButtons: function() {
              var n4 = t2.options.controls, o4 = document.createElement("div");
              return o4.className = h + " " + a, n4 ? (n4[E.LINE] && (e3[E.LINE] = v2(E.LINE, { container: o4, className: u, title: "LineString tool " + (t2.options.keybindings ? "(l)" : ""), onActivate: function() {
                return t2.events.changeMode(j.DRAW_LINE_STRING);
              }, onDeactivate: function() {
                return t2.events.trash();
              } })), n4[E.POLYGON] && (e3[E.POLYGON] = v2(E.POLYGON, { container: o4, className: c, title: "Polygon tool " + (t2.options.keybindings ? "(p)" : ""), onActivate: function() {
                return t2.events.changeMode(j.DRAW_POLYGON);
              }, onDeactivate: function() {
                return t2.events.trash();
              } })), n4[E.POINT] && (e3[E.POINT] = v2(E.POINT, { container: o4, className: l, title: "Marker tool " + (t2.options.keybindings ? "(m)" : ""), onActivate: function() {
                return t2.events.changeMode(j.DRAW_POINT);
              }, onDeactivate: function() {
                return t2.events.trash();
              } })), n4.trash && (e3.trash = v2("trash", { container: o4, className: d, title: "Delete", onActivate: function() {
                t2.events.trash();
              } })), n4.combine_features && (e3.combine_features = v2("combineFeatures", { container: o4, className: p, title: "Combine", onActivate: function() {
                t2.events.combineFeatures();
              } })), n4.uncombine_features && (e3.uncombine_features = v2("uncombineFeatures", { container: o4, className: f, title: "Uncombine", onActivate: function() {
                t2.events.uncombineFeatures();
              } })), o4) : o4;
            }, removeButtons: function() {
              Object.keys(e3).forEach(function(t3) {
                var n4 = e3[t3];
                n4.parentNode && n4.parentNode.removeChild(n4), delete e3[t3];
              });
            } };
          }(e2), e2.container = i2.getContainer(), e2.store = new Ct(e2), n2 = e2.ui.addButtons(), e2.options.boxSelect && (i2.boxZoom.disable(), i2.dragPan.disable(), i2.dragPan.enable()), i2.loaded() ? r2.connect() : (i2.on("load", r2.connect), o2 = setInterval(function() {
            i2.loaded() && r2.connect();
          }, 16)), e2.events.start(), n2;
        }, addLayers: function() {
          e2.map.addSource(m, { data: { type: P, features: [] }, type: "geojson" }), e2.map.addSource(v, { data: { type: P, features: [] }, type: "geojson" }), e2.options.styles.forEach(function(t2) {
            e2.map.addLayer(t2);
          }), e2.store.setDirty(true), e2.store.render();
        }, removeLayers: function() {
          e2.options.styles.forEach(function(t2) {
            e2.map.getLayer(t2.id) && e2.map.removeLayer(t2.id);
          }), e2.map.getSource(m) && e2.map.removeSource(m), e2.map.getSource(v) && e2.map.removeSource(v);
        } };
        return e2.setup = r2, r2;
      }
      function Pt(t2) {
        return function(e2) {
          var n2 = e2.featureTarget;
          return !!n2 && (!!n2.properties && n2.properties.meta === t2);
        };
      }
      function Ft(t2) {
        return !!t2.featureTarget && (!!t2.featureTarget.properties && (t2.featureTarget.properties.active === Z && t2.featureTarget.properties.meta === W));
      }
      function Ot(t2) {
        return !!t2.featureTarget && (!!t2.featureTarget.properties && (t2.featureTarget.properties.active === K && t2.featureTarget.properties.meta === W));
      }
      function kt(t2) {
        return t2.featureTarget === void 0;
      }
      function Tt(t2) {
        var e2 = t2.featureTarget;
        return !!e2 && (!!e2.properties && e2.properties.meta === Y);
      }
      function jt(t2) {
        return !!t2.originalEvent && t2.originalEvent.shiftKey === true;
      }
      function At(t2) {
        return t2.keyCode === 27;
      }
      function Dt(t2) {
        return t2.keyCode === 13;
      }
      var Nt = Ut;
      function Ut(t2, e2) {
        this.x = t2, this.y = e2;
      }
      function Rt(t2, e2) {
        var n2 = e2.getBoundingClientRect();
        return new Nt(t2.clientX - n2.left - (e2.clientLeft || 0), t2.clientY - n2.top - (e2.clientTop || 0));
      }
      function Bt(t2, e2, n2, o2) {
        return { type: M, properties: { meta: Y, parent: t2, coord_path: n2, active: o2 ? Z : K }, geometry: { type: L, coordinates: e2 } };
      }
      function Vt(t2, e2, n2) {
        e2 === void 0 && (e2 = {}), n2 === void 0 && (n2 = null);
        var o2, r2 = t2.geometry, i2 = r2.type, a2 = r2.coordinates, s2 = t2.properties && t2.properties.id, u2 = [];
        function c2(t3, n3) {
          var o3 = "", r3 = null;
          t3.forEach(function(t4, i3) {
            var a3 = n3 != null ? n3 + "." + i3 : String(i3), c3 = Bt(s2, t4, a3, l2(a3));
            if (e2.midpoints && r3) {
              var d2 = function(t5, e3, n4) {
                var o4 = e3.geometry.coordinates, r4 = n4.geometry.coordinates;
                if (o4[1] > 85 || o4[1] < -85 || r4[1] > 85 || r4[1] < -85)
                  return null;
                var i4 = { lng: (o4[0] + r4[0]) / 2, lat: (o4[1] + r4[1]) / 2 };
                return { type: M, properties: { meta: q, parent: t5, lng: i4.lng, lat: i4.lat, coord_path: n4.properties.coord_path }, geometry: { type: L, coordinates: [i4.lng, i4.lat] } };
              }(s2, r3, c3);
              d2 && u2.push(d2);
            }
            r3 = c3;
            var p2 = JSON.stringify(t4);
            o3 !== p2 && u2.push(c3), i3 === 0 && (o3 = p2);
          });
        }
        function l2(t3) {
          return !!e2.selectedPaths && e2.selectedPaths.indexOf(t3) !== -1;
        }
        return i2 === L ? u2.push(Bt(s2, a2, n2, l2(n2))) : i2 === w ? a2.forEach(function(t3, e3) {
          c2(t3, n2 !== null ? n2 + "." + e3 : String(e3));
        }) : i2 === I ? c2(a2, n2) : i2.indexOf(F) === 0 && (o2 = i2.replace(F, ""), a2.forEach(function(n3, r3) {
          var i3 = { type: M, properties: t2.properties, geometry: { type: o2, coordinates: n3 } };
          u2 = u2.concat(Vt(i3, e2, r3));
        })), u2;
      }
      Ut.prototype = { clone: function() {
        return new Ut(this.x, this.y);
      }, add: function(t2) {
        return this.clone()._add(t2);
      }, sub: function(t2) {
        return this.clone()._sub(t2);
      }, multByPoint: function(t2) {
        return this.clone()._multByPoint(t2);
      }, divByPoint: function(t2) {
        return this.clone()._divByPoint(t2);
      }, mult: function(t2) {
        return this.clone()._mult(t2);
      }, div: function(t2) {
        return this.clone()._div(t2);
      }, rotate: function(t2) {
        return this.clone()._rotate(t2);
      }, rotateAround: function(t2, e2) {
        return this.clone()._rotateAround(t2, e2);
      }, matMult: function(t2) {
        return this.clone()._matMult(t2);
      }, unit: function() {
        return this.clone()._unit();
      }, perp: function() {
        return this.clone()._perp();
      }, round: function() {
        return this.clone()._round();
      }, mag: function() {
        return Math.sqrt(this.x * this.x + this.y * this.y);
      }, equals: function(t2) {
        return this.x === t2.x && this.y === t2.y;
      }, dist: function(t2) {
        return Math.sqrt(this.distSqr(t2));
      }, distSqr: function(t2) {
        var e2 = t2.x - this.x, n2 = t2.y - this.y;
        return e2 * e2 + n2 * n2;
      }, angle: function() {
        return Math.atan2(this.y, this.x);
      }, angleTo: function(t2) {
        return Math.atan2(this.y - t2.y, this.x - t2.x);
      }, angleWith: function(t2) {
        return this.angleWithSep(t2.x, t2.y);
      }, angleWithSep: function(t2, e2) {
        return Math.atan2(this.x * e2 - this.y * t2, this.x * t2 + this.y * e2);
      }, _matMult: function(t2) {
        var e2 = t2[0] * this.x + t2[1] * this.y, n2 = t2[2] * this.x + t2[3] * this.y;
        return this.x = e2, this.y = n2, this;
      }, _add: function(t2) {
        return this.x += t2.x, this.y += t2.y, this;
      }, _sub: function(t2) {
        return this.x -= t2.x, this.y -= t2.y, this;
      }, _mult: function(t2) {
        return this.x *= t2, this.y *= t2, this;
      }, _div: function(t2) {
        return this.x /= t2, this.y /= t2, this;
      }, _multByPoint: function(t2) {
        return this.x *= t2.x, this.y *= t2.y, this;
      }, _divByPoint: function(t2) {
        return this.x /= t2.x, this.y /= t2.y, this;
      }, _unit: function() {
        return this._div(this.mag()), this;
      }, _perp: function() {
        var t2 = this.y;
        return this.y = this.x, this.x = -t2, this;
      }, _rotate: function(t2) {
        var e2 = Math.cos(t2), n2 = Math.sin(t2), o2 = e2 * this.x - n2 * this.y, r2 = n2 * this.x + e2 * this.y;
        return this.x = o2, this.y = r2, this;
      }, _rotateAround: function(t2, e2) {
        var n2 = Math.cos(t2), o2 = Math.sin(t2), r2 = e2.x + n2 * (this.x - e2.x) - o2 * (this.y - e2.y), i2 = e2.y + o2 * (this.x - e2.x) + n2 * (this.y - e2.y);
        return this.x = r2, this.y = i2, this;
      }, _round: function() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this;
      } }, Ut.convert = function(t2) {
        return t2 instanceof Ut ? t2 : Array.isArray(t2) ? new Ut(t2[0], t2[1]) : t2;
      };
      var Jt = function(t2) {
        setTimeout(function() {
          t2.map && t2.map.doubleClickZoom && t2._ctx && t2._ctx.store && t2._ctx.store.getInitialConfigValue && t2._ctx.store.getInitialConfigValue("doubleClickZoom") && t2.map.doubleClickZoom.enable();
        }, 0);
      }, Gt = function(t2) {
        setTimeout(function() {
          t2.map && t2.map.doubleClickZoom && t2.map.doubleClickZoom.disable();
        }, 0);
      }, zt = function(t2) {
        if (!t2 || !t2.type)
          return null;
        var e2 = $t[t2.type];
        if (!e2)
          return null;
        if (e2 === "geometry")
          return { type: "FeatureCollection", features: [{ type: "Feature", properties: {}, geometry: t2 }] };
        if (e2 === "feature")
          return { type: "FeatureCollection", features: [t2] };
        if (e2 === "featurecollection")
          return t2;
      }, $t = { Point: "geometry", MultiPoint: "geometry", LineString: "geometry", MultiLineString: "geometry", Polygon: "geometry", MultiPolygon: "geometry", GeometryCollection: "geometry", Feature: "feature", FeatureCollection: "featurecollection" };
      function Wt(t2) {
        switch (t2 && t2.type || null) {
          case "FeatureCollection":
            return t2.features = t2.features.reduce(function(t3, e2) {
              return t3.concat(Wt(e2));
            }, []), t2;
          case "Feature":
            return t2.geometry ? Wt(t2.geometry).map(function(e2) {
              var n2 = { type: "Feature", properties: JSON.parse(JSON.stringify(t2.properties)), geometry: e2 };
              return t2.id !== void 0 && (n2.id = t2.id), n2;
            }) : [t2];
          case "MultiPoint":
            return t2.coordinates.map(function(t3) {
              return { type: "Point", coordinates: t3 };
            });
          case "MultiPolygon":
            return t2.coordinates.map(function(t3) {
              return { type: "Polygon", coordinates: t3 };
            });
          case "MultiLineString":
            return t2.coordinates.map(function(t3) {
              return { type: "LineString", coordinates: t3 };
            });
          case "GeometryCollection":
            return t2.geometries.map(Wt).reduce(function(t3, e2) {
              return t3.concat(e2);
            }, []);
          case "Point":
          case "Polygon":
          case "LineString":
            return [t2];
        }
      }
      var qt = function(t2) {
        if (!t2)
          return [];
        var e2 = Wt(zt(t2)), n2 = [];
        return e2.features.forEach(function(t3) {
          t3.geometry && (n2 = n2.concat(function t4(e3) {
            return Array.isArray(e3) && e3.length && typeof e3[0] == "number" ? [e3] : e3.reduce(function(e4, n3) {
              return Array.isArray(n3) && Array.isArray(n3[0]) ? e4.concat(t4(n3)) : (e4.push(n3), e4);
            }, []);
          }(t3.geometry.coordinates)));
        }), n2;
      }, Yt = ut(function(t2) {
        var e2 = t2.exports = function(t3) {
          return new n2(t3);
        };
        function n2(t3) {
          this.value = t3;
        }
        function o2(t3, e3, n3) {
          var o3 = [], a3 = [], l2 = true;
          return function t4(d2) {
            var p2 = n3 ? r2(d2) : d2, f2 = {}, h2 = true, g2 = { node: p2, node_: d2, path: [].concat(o3), parent: a3[a3.length - 1], parents: a3, key: o3.slice(-1)[0], isRoot: o3.length === 0, level: o3.length, circular: null, update: function(t5, e4) {
              g2.isRoot || (g2.parent.node[g2.key] = t5), g2.node = t5, e4 && (h2 = false);
            }, delete: function(t5) {
              delete g2.parent.node[g2.key], t5 && (h2 = false);
            }, remove: function(t5) {
              s2(g2.parent.node) ? g2.parent.node.splice(g2.key, 1) : delete g2.parent.node[g2.key], t5 && (h2 = false);
            }, keys: null, before: function(t5) {
              f2.before = t5;
            }, after: function(t5) {
              f2.after = t5;
            }, pre: function(t5) {
              f2.pre = t5;
            }, post: function(t5) {
              f2.post = t5;
            }, stop: function() {
              l2 = false;
            }, block: function() {
              h2 = false;
            } };
            if (!l2)
              return g2;
            function y2() {
              if (typeof g2.node == "object" && g2.node !== null) {
                g2.keys && g2.node_ === g2.node || (g2.keys = i2(g2.node)), g2.isLeaf = g2.keys.length == 0;
                for (var t5 = 0; t5 < a3.length; t5++)
                  if (a3[t5].node_ === d2) {
                    g2.circular = a3[t5];
                    break;
                  }
              } else
                g2.isLeaf = true, g2.keys = null;
              g2.notLeaf = !g2.isLeaf, g2.notRoot = !g2.isRoot;
            }
            y2();
            var v2 = e3.call(g2, g2.node);
            return v2 !== void 0 && g2.update && g2.update(v2), f2.before && f2.before.call(g2, g2.node), h2 ? (typeof g2.node != "object" || g2.node === null || g2.circular || (a3.push(g2), y2(), u2(g2.keys, function(e4, r3) {
              o3.push(e4), f2.pre && f2.pre.call(g2, g2.node[e4], e4);
              var i3 = t4(g2.node[e4]);
              n3 && c2.call(g2.node, e4) && (g2.node[e4] = i3.node), i3.isLast = r3 == g2.keys.length - 1, i3.isFirst = r3 == 0, f2.post && f2.post.call(g2, i3), o3.pop();
            }), a3.pop()), f2.after && f2.after.call(g2, g2.node), g2) : g2;
          }(t3).node;
        }
        function r2(t3) {
          if (typeof t3 == "object" && t3 !== null) {
            var e3;
            if (s2(t3))
              e3 = [];
            else if (a2(t3) === "[object Date]")
              e3 = new Date(t3.getTime ? t3.getTime() : t3);
            else if (function(t4) {
              return a2(t4) === "[object RegExp]";
            }(t3))
              e3 = new RegExp(t3);
            else if (function(t4) {
              return a2(t4) === "[object Error]";
            }(t3))
              e3 = { message: t3.message };
            else if (function(t4) {
              return a2(t4) === "[object Boolean]";
            }(t3))
              e3 = new Boolean(t3);
            else if (function(t4) {
              return a2(t4) === "[object Number]";
            }(t3))
              e3 = new Number(t3);
            else if (function(t4) {
              return a2(t4) === "[object String]";
            }(t3))
              e3 = new String(t3);
            else if (Object.create && Object.getPrototypeOf)
              e3 = Object.create(Object.getPrototypeOf(t3));
            else if (t3.constructor === Object)
              e3 = {};
            else {
              var n3 = t3.constructor && t3.constructor.prototype || t3.__proto__ || {}, o3 = function() {
              };
              o3.prototype = n3, e3 = new o3();
            }
            return u2(i2(t3), function(n4) {
              e3[n4] = t3[n4];
            }), e3;
          }
          return t3;
        }
        n2.prototype.get = function(t3) {
          for (var e3 = this.value, n3 = 0; n3 < t3.length; n3++) {
            var o3 = t3[n3];
            if (!e3 || !c2.call(e3, o3)) {
              e3 = void 0;
              break;
            }
            e3 = e3[o3];
          }
          return e3;
        }, n2.prototype.has = function(t3) {
          for (var e3 = this.value, n3 = 0; n3 < t3.length; n3++) {
            var o3 = t3[n3];
            if (!e3 || !c2.call(e3, o3))
              return false;
            e3 = e3[o3];
          }
          return true;
        }, n2.prototype.set = function(t3, e3) {
          for (var n3 = this.value, o3 = 0; o3 < t3.length - 1; o3++) {
            var r3 = t3[o3];
            c2.call(n3, r3) || (n3[r3] = {}), n3 = n3[r3];
          }
          return n3[t3[o3]] = e3, e3;
        }, n2.prototype.map = function(t3) {
          return o2(this.value, t3, true);
        }, n2.prototype.forEach = function(t3) {
          return this.value = o2(this.value, t3, false), this.value;
        }, n2.prototype.reduce = function(t3, e3) {
          var n3 = arguments.length === 1, o3 = n3 ? this.value : e3;
          return this.forEach(function(e4) {
            this.isRoot && n3 || (o3 = t3.call(this, o3, e4));
          }), o3;
        }, n2.prototype.paths = function() {
          var t3 = [];
          return this.forEach(function(e3) {
            t3.push(this.path);
          }), t3;
        }, n2.prototype.nodes = function() {
          var t3 = [];
          return this.forEach(function(e3) {
            t3.push(this.node);
          }), t3;
        }, n2.prototype.clone = function() {
          var t3 = [], e3 = [];
          return function n3(o3) {
            for (var a3 = 0; a3 < t3.length; a3++)
              if (t3[a3] === o3)
                return e3[a3];
            if (typeof o3 == "object" && o3 !== null) {
              var s3 = r2(o3);
              return t3.push(o3), e3.push(s3), u2(i2(o3), function(t4) {
                s3[t4] = n3(o3[t4]);
              }), t3.pop(), e3.pop(), s3;
            }
            return o3;
          }(this.value);
        };
        var i2 = Object.keys || function(t3) {
          var e3 = [];
          for (var n3 in t3)
            e3.push(n3);
          return e3;
        };
        function a2(t3) {
          return Object.prototype.toString.call(t3);
        }
        var s2 = Array.isArray || function(t3) {
          return Object.prototype.toString.call(t3) === "[object Array]";
        }, u2 = function(t3, e3) {
          if (t3.forEach)
            return t3.forEach(e3);
          for (var n3 = 0; n3 < t3.length; n3++)
            e3(t3[n3], n3, t3);
        };
        u2(i2(n2.prototype), function(t3) {
          e2[t3] = function(e3) {
            var o3 = [].slice.call(arguments, 1), r3 = new n2(e3);
            return r3[t3].apply(r3, o3);
          };
        });
        var c2 = Object.hasOwnProperty || function(t3, e3) {
          return e3 in t3;
        };
      }), Zt = Kt;
      function Kt(t2) {
        if (!(this instanceof Kt))
          return new Kt(t2);
        this._bbox = t2 || [1 / 0, 1 / 0, -1 / 0, -1 / 0], this._valid = !!t2;
      }
      Kt.prototype.include = function(t2) {
        return this._valid = true, this._bbox[0] = Math.min(this._bbox[0], t2[0]), this._bbox[1] = Math.min(this._bbox[1], t2[1]), this._bbox[2] = Math.max(this._bbox[2], t2[0]), this._bbox[3] = Math.max(this._bbox[3], t2[1]), this;
      }, Kt.prototype.equals = function(t2) {
        var e2;
        return e2 = t2 instanceof Kt ? t2.bbox() : t2, this._bbox[0] == e2[0] && this._bbox[1] == e2[1] && this._bbox[2] == e2[2] && this._bbox[3] == e2[3];
      }, Kt.prototype.center = function(t2) {
        return this._valid ? [(this._bbox[0] + this._bbox[2]) / 2, (this._bbox[1] + this._bbox[3]) / 2] : null;
      }, Kt.prototype.union = function(t2) {
        var e2;
        return this._valid = true, e2 = t2 instanceof Kt ? t2.bbox() : t2, this._bbox[0] = Math.min(this._bbox[0], e2[0]), this._bbox[1] = Math.min(this._bbox[1], e2[1]), this._bbox[2] = Math.max(this._bbox[2], e2[2]), this._bbox[3] = Math.max(this._bbox[3], e2[3]), this;
      }, Kt.prototype.bbox = function() {
        return this._valid ? this._bbox : null;
      }, Kt.prototype.contains = function(t2) {
        if (!t2)
          return this._fastContains();
        if (!this._valid)
          return null;
        var e2 = t2[0], n2 = t2[1];
        return this._bbox[0] <= e2 && this._bbox[1] <= n2 && this._bbox[2] >= e2 && this._bbox[3] >= n2;
      }, Kt.prototype.intersect = function(t2) {
        return this._valid ? (e2 = t2 instanceof Kt ? t2.bbox() : t2, !(this._bbox[0] > e2[2] || this._bbox[2] < e2[0] || this._bbox[3] < e2[1] || this._bbox[1] > e2[3])) : null;
        var e2;
      }, Kt.prototype._fastContains = function() {
        if (!this._valid)
          return new Function("return null;");
        var t2 = "return " + this._bbox[0] + "<= ll[0] &&" + this._bbox[1] + "<= ll[1] &&" + this._bbox[2] + ">= ll[0] &&" + this._bbox[3] + ">= ll[1]";
        return new Function("ll", t2);
      }, Kt.prototype.polygon = function() {
        return this._valid ? { type: "Polygon", coordinates: [[[this._bbox[0], this._bbox[1]], [this._bbox[2], this._bbox[1]], [this._bbox[2], this._bbox[3]], [this._bbox[0], this._bbox[3]], [this._bbox[0], this._bbox[1]]]] } : null;
      };
      var Xt = { features: ["FeatureCollection"], coordinates: ["Point", "MultiPoint", "LineString", "MultiLineString", "Polygon", "MultiPolygon"], geometry: ["Feature"], geometries: ["GeometryCollection"] }, Ht = Object.keys(Xt), Qt = function(t2) {
        return te(t2).bbox();
      };
      function te(t2) {
        for (var e2 = Zt(), n2 = qt(t2), o2 = 0; o2 < n2.length; o2++)
          e2.include(n2[o2]);
        return e2;
      }
      Qt.polygon = function(t2) {
        return te(t2).polygon();
      }, Qt.bboxify = function(t2) {
        return Yt(t2).map(function(t3) {
          t3 && (Ht.some(function(e2) {
            return !!t3[e2] && Xt[e2].indexOf(t3.type) !== -1;
          }) && (t3.bbox = te(t3).bbox(), this.update(t3)));
        });
      };
      function ee(t2, e2) {
        var n2 = -90, o2 = 90, r2 = -90, i2 = 90, a2 = 270, s2 = -270;
        t2.forEach(function(t3) {
          var e3 = Qt(t3), u3 = e3[1], c2 = e3[3], l2 = e3[0], d2 = e3[2];
          u3 > n2 && (n2 = u3), c2 < o2 && (o2 = c2), c2 > r2 && (r2 = c2), u3 < i2 && (i2 = u3), l2 < a2 && (a2 = l2), d2 > s2 && (s2 = d2);
        });
        var u2 = e2;
        return n2 + u2.lat > 85 && (u2.lat = 85 - n2), r2 + u2.lat > 90 && (u2.lat = 90 - r2), o2 + u2.lat < -85 && (u2.lat = -85 - o2), i2 + u2.lat < -90 && (u2.lat = -90 - i2), a2 + u2.lng <= -270 && (u2.lng += 360 * Math.ceil(Math.abs(u2.lng) / 360)), s2 + u2.lng >= 270 && (u2.lng -= 360 * Math.ceil(Math.abs(u2.lng) / 360)), u2;
      }
      function ne(t2, e2) {
        var n2 = ee(t2.map(function(t3) {
          return t3.toGeoJSON();
        }), e2);
        t2.forEach(function(t3) {
          var e3, o2 = t3.getCoordinates(), r2 = function(t4) {
            var e4 = { lng: t4[0] + n2.lng, lat: t4[1] + n2.lat };
            return [e4.lng, e4.lat];
          }, i2 = function(t4) {
            return t4.map(function(t5) {
              return r2(t5);
            });
          };
          t3.type === L ? e3 = r2(o2) : t3.type === I || t3.type === O ? e3 = o2.map(r2) : t3.type === w || t3.type === k ? e3 = o2.map(i2) : t3.type === T && (e3 = o2.map(function(t4) {
            return t4.map(function(t5) {
              return i2(t5);
            });
          })), t3.incomingCoords(e3);
        });
      }
      var oe = { onSetup: function(t2) {
        var e2 = this, n2 = { dragMoveLocation: null, boxSelectStartLocation: null, boxSelectElement: void 0, boxSelecting: false, canBoxSelect: false, dragMoving: false, canDragMove: false, initiallySelectedFeatureIds: t2.featureIds || [] };
        return this.setSelected(n2.initiallySelectedFeatureIds.filter(function(t3) {
          return e2.getFeature(t3) !== void 0;
        })), this.fireActionable(), this.setActionableState({ combineFeatures: true, uncombineFeatures: true, trash: true }), n2;
      }, fireUpdate: function() {
        this.map.fire(N, { action: z, features: this.getSelected().map(function(t2) {
          return t2.toGeoJSON();
        }) });
      }, fireActionable: function() {
        var t2 = this, e2 = this.getSelected(), n2 = e2.filter(function(e3) {
          return t2.isInstanceOf("MultiFeature", e3);
        }), o2 = false;
        if (e2.length > 1) {
          o2 = true;
          var r2 = e2[0].type.replace("Multi", "");
          e2.forEach(function(t3) {
            t3.type.replace("Multi", "") !== r2 && (o2 = false);
          });
        }
        var i2 = n2.length > 0, a2 = e2.length > 0;
        this.setActionableState({ combineFeatures: o2, uncombineFeatures: i2, trash: a2 });
      }, getUniqueIds: function(t2) {
        return t2.length ? t2.map(function(t3) {
          return t3.properties.id;
        }).filter(function(t3) {
          return t3 !== void 0;
        }).reduce(function(t3, e2) {
          return t3.add(e2), t3;
        }, new tt()).values() : [];
      }, stopExtendedInteractions: function(t2) {
        t2.boxSelectElement && (t2.boxSelectElement.parentNode && t2.boxSelectElement.parentNode.removeChild(t2.boxSelectElement), t2.boxSelectElement = null), this.map.dragPan.enable(), t2.boxSelecting = false, t2.canBoxSelect = false, t2.dragMoving = false, t2.canDragMove = false;
      }, onStop: function() {
        Jt(this);
      }, onMouseMove: function(t2) {
        return this.stopExtendedInteractions(t2), true;
      }, onMouseOut: function(t2) {
        return !t2.dragMoving || this.fireUpdate();
      } };
      oe.onTap = oe.onClick = function(t2, e2) {
        return kt(e2) ? this.clickAnywhere(t2, e2) : Pt(Y)(e2) ? this.clickOnVertex(t2, e2) : function(t3) {
          return !!t3.featureTarget && (!!t3.featureTarget.properties && t3.featureTarget.properties.meta === W);
        }(e2) ? this.clickOnFeature(t2, e2) : void 0;
      }, oe.clickAnywhere = function(t2) {
        var e2 = this, n2 = this.getSelectedIds();
        n2.length && (this.clearSelectedFeatures(), n2.forEach(function(t3) {
          return e2.doRender(t3);
        })), Jt(this), this.stopExtendedInteractions(t2);
      }, oe.clickOnVertex = function(t2, e2) {
        this.changeMode(j.DIRECT_SELECT, { featureId: e2.featureTarget.properties.parent, coordPath: e2.featureTarget.properties.coord_path, startPos: e2.lngLat }), this.updateUIClasses({ mouse: _ });
      }, oe.startOnActiveFeature = function(t2, e2) {
        this.stopExtendedInteractions(t2), this.map.dragPan.disable(), this.doRender(e2.featureTarget.properties.id), t2.canDragMove = true, t2.dragMoveLocation = e2.lngLat;
      }, oe.clickOnFeature = function(t2, e2) {
        var n2 = this;
        Gt(this), this.stopExtendedInteractions(t2);
        var o2 = jt(e2), r2 = this.getSelectedIds(), i2 = e2.featureTarget.properties.id, a2 = this.isSelected(i2);
        if (!o2 && a2 && this.getFeature(i2).type !== L)
          return this.changeMode(j.DIRECT_SELECT, { featureId: i2 });
        a2 && o2 ? (this.deselect(i2), this.updateUIClasses({ mouse: x }), r2.length === 1 && Jt(this)) : !a2 && o2 ? (this.select(i2), this.updateUIClasses({ mouse: _ })) : a2 || o2 || (r2.forEach(function(t3) {
          return n2.doRender(t3);
        }), this.setSelected(i2), this.updateUIClasses({ mouse: _ })), this.doRender(i2);
      }, oe.onMouseDown = function(t2, e2) {
        return Ft(e2) ? this.startOnActiveFeature(t2, e2) : this.drawConfig.boxSelect && function(t3) {
          return !!t3.originalEvent && (!!t3.originalEvent.shiftKey && t3.originalEvent.button === 0);
        }(e2) ? this.startBoxSelect(t2, e2) : void 0;
      }, oe.startBoxSelect = function(t2, e2) {
        this.stopExtendedInteractions(t2), this.map.dragPan.disable(), t2.boxSelectStartLocation = Rt(e2.originalEvent, this.map.getContainer()), t2.canBoxSelect = true;
      }, oe.onTouchStart = function(t2, e2) {
        if (Ft(e2))
          return this.startOnActiveFeature(t2, e2);
      }, oe.onDrag = function(t2, e2) {
        return t2.canDragMove ? this.dragMove(t2, e2) : this.drawConfig.boxSelect && t2.canBoxSelect ? this.whileBoxSelect(t2, e2) : void 0;
      }, oe.whileBoxSelect = function(t2, e2) {
        t2.boxSelecting = true, this.updateUIClasses({ mouse: b }), t2.boxSelectElement || (t2.boxSelectElement = document.createElement("div"), t2.boxSelectElement.classList.add(y), this.map.getContainer().appendChild(t2.boxSelectElement));
        var n2 = Rt(e2.originalEvent, this.map.getContainer()), o2 = Math.min(t2.boxSelectStartLocation.x, n2.x), r2 = Math.max(t2.boxSelectStartLocation.x, n2.x), i2 = Math.min(t2.boxSelectStartLocation.y, n2.y), a2 = Math.max(t2.boxSelectStartLocation.y, n2.y), s2 = "translate(" + o2 + "px, " + i2 + "px)";
        t2.boxSelectElement.style.transform = s2, t2.boxSelectElement.style.WebkitTransform = s2, t2.boxSelectElement.style.width = r2 - o2 + "px", t2.boxSelectElement.style.height = a2 - i2 + "px";
      }, oe.dragMove = function(t2, e2) {
        t2.dragMoving = true, e2.originalEvent.stopPropagation();
        var n2 = { lng: e2.lngLat.lng - t2.dragMoveLocation.lng, lat: e2.lngLat.lat - t2.dragMoveLocation.lat };
        ne(this.getSelected(), n2), t2.dragMoveLocation = e2.lngLat;
      }, oe.onMouseUp = function(t2, e2) {
        var n2 = this;
        if (t2.dragMoving)
          this.fireUpdate();
        else if (t2.boxSelecting) {
          var o2 = [t2.boxSelectStartLocation, Rt(e2.originalEvent, this.map.getContainer())], r2 = this.featuresAt(null, o2, "click"), i2 = this.getUniqueIds(r2).filter(function(t3) {
            return !n2.isSelected(t3);
          });
          i2.length && (this.select(i2), i2.forEach(function(t3) {
            return n2.doRender(t3);
          }), this.updateUIClasses({ mouse: _ }));
        }
        this.stopExtendedInteractions(t2);
      }, oe.toDisplayFeatures = function(t2, e2, n2) {
        e2.properties.active = this.isSelected(e2.properties.id) ? Z : K, n2(e2), this.fireActionable(), e2.properties.active === Z && e2.geometry.type !== L && Vt(e2).forEach(n2);
      }, oe.onTrash = function() {
        this.deleteFeature(this.getSelectedIds()), this.fireActionable();
      }, oe.onCombineFeatures = function() {
        var t2 = this.getSelected();
        if (!(t2.length === 0 || t2.length < 2)) {
          for (var e2 = [], n2 = [], o2 = t2[0].type.replace("Multi", ""), r2 = 0; r2 < t2.length; r2++) {
            var i2 = t2[r2];
            if (i2.type.replace("Multi", "") !== o2)
              return;
            i2.type.includes("Multi") ? i2.getCoordinates().forEach(function(t3) {
              e2.push(t3);
            }) : e2.push(i2.getCoordinates()), n2.push(i2.toGeoJSON());
          }
          if (n2.length > 1) {
            var a2 = this.newFeature({ type: M, properties: n2[0].properties, geometry: { type: "Multi" + o2, coordinates: e2 } });
            this.addFeature(a2), this.deleteFeature(this.getSelectedIds(), { silent: true }), this.setSelected([a2.id]), this.map.fire(J, { createdFeatures: [a2.toGeoJSON()], deletedFeatures: n2 });
          }
          this.fireActionable();
        }
      }, oe.onUncombineFeatures = function() {
        var t2 = this, e2 = this.getSelected();
        if (e2.length !== 0) {
          for (var n2 = [], o2 = [], r2 = function(r3) {
            var i3 = e2[r3];
            t2.isInstanceOf("MultiFeature", i3) && (i3.getFeatures().forEach(function(e3) {
              t2.addFeature(e3), e3.properties = i3.properties, n2.push(e3.toGeoJSON()), t2.select([e3.id]);
            }), t2.deleteFeature(i3.id, { silent: true }), o2.push(i3.toGeoJSON()));
          }, i2 = 0; i2 < e2.length; i2++)
            r2(i2);
          n2.length > 1 && this.map.fire(G, { createdFeatures: n2, deletedFeatures: o2 }), this.fireActionable();
        }
      };
      var re = Pt(Y), ie = Pt(q), ae = { fireUpdate: function() {
        this.map.fire(N, { action: $, features: this.getSelected().map(function(t2) {
          return t2.toGeoJSON();
        }) });
      }, fireActionable: function(t2) {
        this.setActionableState({ combineFeatures: false, uncombineFeatures: false, trash: t2.selectedCoordPaths.length > 0 });
      }, startDragging: function(t2, e2) {
        this.map.dragPan.disable(), t2.canDragMove = true, t2.dragMoveLocation = e2.lngLat;
      }, stopDragging: function(t2) {
        this.map.dragPan.enable(), t2.dragMoving = false, t2.canDragMove = false, t2.dragMoveLocation = null;
      }, onVertex: function(t2, e2) {
        this.startDragging(t2, e2);
        var n2 = e2.featureTarget.properties, o2 = t2.selectedCoordPaths.indexOf(n2.coord_path);
        jt(e2) || o2 !== -1 ? jt(e2) && o2 === -1 && t2.selectedCoordPaths.push(n2.coord_path) : t2.selectedCoordPaths = [n2.coord_path];
        var r2 = this.pathsToCoordinates(t2.featureId, t2.selectedCoordPaths);
        this.setSelectedCoordinates(r2);
      }, onMidpoint: function(t2, e2) {
        this.startDragging(t2, e2);
        var n2 = e2.featureTarget.properties;
        t2.feature.addCoordinate(n2.coord_path, n2.lng, n2.lat), this.fireUpdate(), t2.selectedCoordPaths = [n2.coord_path];
      }, pathsToCoordinates: function(t2, e2) {
        return e2.map(function(e3) {
          return { feature_id: t2, coord_path: e3 };
        });
      }, onFeature: function(t2, e2) {
        t2.selectedCoordPaths.length === 0 ? this.startDragging(t2, e2) : this.stopDragging(t2);
      }, dragFeature: function(t2, e2, n2) {
        ne(this.getSelected(), n2), t2.dragMoveLocation = e2.lngLat;
      }, dragVertex: function(t2, e2, n2) {
        for (var o2 = t2.selectedCoordPaths.map(function(e3) {
          return t2.feature.getCoordinate(e3);
        }), r2 = ee(o2.map(function(t3) {
          return { type: M, properties: {}, geometry: { type: L, coordinates: t3 } };
        }), n2), i2 = 0; i2 < o2.length; i2++) {
          var a2 = o2[i2];
          t2.feature.updateCoordinate(t2.selectedCoordPaths[i2], a2[0] + r2.lng, a2[1] + r2.lat);
        }
      }, clickNoTarget: function() {
        this.changeMode(j.SIMPLE_SELECT);
      }, clickInactive: function() {
        this.changeMode(j.SIMPLE_SELECT);
      }, clickActiveFeature: function(t2) {
        t2.selectedCoordPaths = [], this.clearSelectedCoordinates(), t2.feature.changed();
      }, onSetup: function(t2) {
        var e2 = t2.featureId, n2 = this.getFeature(e2);
        if (!n2)
          throw new Error("You must provide a featureId to enter direct_select mode");
        if (n2.type === L)
          throw new TypeError("direct_select mode doesn't handle point features");
        var o2 = { featureId: e2, feature: n2, dragMoveLocation: t2.startPos || null, dragMoving: false, canDragMove: false, selectedCoordPaths: t2.coordPath ? [t2.coordPath] : [] };
        return this.setSelectedCoordinates(this.pathsToCoordinates(e2, o2.selectedCoordPaths)), this.setSelected(e2), Gt(this), this.setActionableState({ trash: true }), o2;
      }, onStop: function() {
        Jt(this), this.clearSelectedCoordinates();
      }, toDisplayFeatures: function(t2, e2, n2) {
        t2.featureId === e2.properties.id ? (e2.properties.active = Z, n2(e2), Vt(e2, { map: this.map, midpoints: true, selectedPaths: t2.selectedCoordPaths }).forEach(n2)) : (e2.properties.active = K, n2(e2)), this.fireActionable(t2);
      }, onTrash: function(t2) {
        t2.selectedCoordPaths.sort(function(t3, e2) {
          return e2.localeCompare(t3, "en", { numeric: true });
        }).forEach(function(e2) {
          return t2.feature.removeCoordinate(e2);
        }), this.fireUpdate(), t2.selectedCoordPaths = [], this.clearSelectedCoordinates(), this.fireActionable(t2), t2.feature.isValid() === false && (this.deleteFeature([t2.featureId]), this.changeMode(j.SIMPLE_SELECT, {}));
      }, onMouseMove: function(t2, e2) {
        var n2 = Ft(e2), o2 = re(e2), r2 = t2.selectedCoordPaths.length === 0;
        return n2 && r2 || o2 && !r2 ? this.updateUIClasses({ mouse: _ }) : this.updateUIClasses({ mouse: C }), this.stopDragging(t2), true;
      }, onMouseOut: function(t2) {
        return t2.dragMoving && this.fireUpdate(), true;
      } };
      ae.onTouchStart = ae.onMouseDown = function(t2, e2) {
        return re(e2) ? this.onVertex(t2, e2) : Ft(e2) ? this.onFeature(t2, e2) : ie(e2) ? this.onMidpoint(t2, e2) : void 0;
      }, ae.onDrag = function(t2, e2) {
        if (t2.canDragMove === true) {
          t2.dragMoving = true, e2.originalEvent.stopPropagation();
          var n2 = { lng: e2.lngLat.lng - t2.dragMoveLocation.lng, lat: e2.lngLat.lat - t2.dragMoveLocation.lat };
          t2.selectedCoordPaths.length > 0 ? this.dragVertex(t2, e2, n2) : this.dragFeature(t2, e2, n2), t2.dragMoveLocation = e2.lngLat;
        }
      }, ae.onClick = function(t2, e2) {
        return kt(e2) ? this.clickNoTarget(t2, e2) : Ft(e2) ? this.clickActiveFeature(t2, e2) : Ot(e2) ? this.clickInactive(t2, e2) : void this.stopDragging(t2);
      }, ae.onTap = function(t2, e2) {
        return kt(e2) ? this.clickNoTarget(t2, e2) : Ft(e2) ? this.clickActiveFeature(t2, e2) : Ot(e2) ? this.clickInactive(t2, e2) : void 0;
      }, ae.onTouchEnd = ae.onMouseUp = function(t2) {
        t2.dragMoving && this.fireUpdate(), this.stopDragging(t2);
      };
      var se = {};
      function ue(t2, e2) {
        return !!t2.lngLat && (t2.lngLat.lng === e2[0] && t2.lngLat.lat === e2[1]);
      }
      se.onSetup = function() {
        var t2 = this.newFeature({ type: M, properties: {}, geometry: { type: L, coordinates: [] } });
        return this.addFeature(t2), this.clearSelectedFeatures(), this.updateUIClasses({ mouse: b }), this.activateUIButton(E.POINT), this.setActionableState({ trash: true }), { point: t2 };
      }, se.stopDrawingAndRemove = function(t2) {
        this.deleteFeature([t2.point.id], { silent: true }), this.changeMode(j.SIMPLE_SELECT);
      }, se.onTap = se.onClick = function(t2, e2) {
        this.updateUIClasses({ mouse: _ }), t2.point.updateCoordinate("", e2.lngLat.lng, e2.lngLat.lat), this.map.fire(A, { features: [t2.point.toGeoJSON()] }), this.changeMode(j.SIMPLE_SELECT, { featureIds: [t2.point.id] });
      }, se.onStop = function(t2) {
        this.activateUIButton(), t2.point.getCoordinate().length || this.deleteFeature([t2.point.id], { silent: true });
      }, se.toDisplayFeatures = function(t2, e2, n2) {
        var o2 = e2.properties.id === t2.point.id;
        if (e2.properties.active = o2 ? Z : K, !o2)
          return n2(e2);
      }, se.onTrash = se.stopDrawingAndRemove, se.onKeyUp = function(t2, e2) {
        if (At(e2) || Dt(e2))
          return this.stopDrawingAndRemove(t2, e2);
      };
      var ce = { onSetup: function() {
        var t2 = this.newFeature({ type: M, properties: {}, geometry: { type: w, coordinates: [[]] } });
        return this.addFeature(t2), this.clearSelectedFeatures(), Gt(this), this.updateUIClasses({ mouse: b }), this.activateUIButton(E.POLYGON), this.setActionableState({ trash: true }), { polygon: t2, currentVertexPosition: 0 };
      }, clickAnywhere: function(t2, e2) {
        if (t2.currentVertexPosition > 0 && ue(e2, t2.polygon.coordinates[0][t2.currentVertexPosition - 1]))
          return this.changeMode(j.SIMPLE_SELECT, { featureIds: [t2.polygon.id] });
        this.updateUIClasses({ mouse: b }), t2.polygon.updateCoordinate("0." + t2.currentVertexPosition, e2.lngLat.lng, e2.lngLat.lat), t2.currentVertexPosition++, t2.polygon.updateCoordinate("0." + t2.currentVertexPosition, e2.lngLat.lng, e2.lngLat.lat);
      }, clickOnVertex: function(t2) {
        return this.changeMode(j.SIMPLE_SELECT, { featureIds: [t2.polygon.id] });
      }, onMouseMove: function(t2, e2) {
        t2.polygon.updateCoordinate("0." + t2.currentVertexPosition, e2.lngLat.lng, e2.lngLat.lat), Tt(e2) && this.updateUIClasses({ mouse: x });
      } };
      ce.onTap = ce.onClick = function(t2, e2) {
        return Tt(e2) ? this.clickOnVertex(t2, e2) : this.clickAnywhere(t2, e2);
      }, ce.onKeyUp = function(t2, e2) {
        At(e2) ? (this.deleteFeature([t2.polygon.id], { silent: true }), this.changeMode(j.SIMPLE_SELECT)) : Dt(e2) && this.changeMode(j.SIMPLE_SELECT, { featureIds: [t2.polygon.id] });
      }, ce.onStop = function(t2) {
        this.updateUIClasses({ mouse: C }), Jt(this), this.activateUIButton(), this.getFeature(t2.polygon.id) !== void 0 && (t2.polygon.removeCoordinate("0." + t2.currentVertexPosition), t2.polygon.isValid() ? this.map.fire(A, { features: [t2.polygon.toGeoJSON()] }) : (this.deleteFeature([t2.polygon.id], { silent: true }), this.changeMode(j.SIMPLE_SELECT, {}, { silent: true })));
      }, ce.toDisplayFeatures = function(t2, e2, n2) {
        var o2 = e2.properties.id === t2.polygon.id;
        if (e2.properties.active = o2 ? Z : K, !o2)
          return n2(e2);
        if (e2.geometry.coordinates.length !== 0) {
          var r2 = e2.geometry.coordinates[0].length;
          if (!(r2 < 3)) {
            if (e2.properties.meta = W, n2(Bt(t2.polygon.id, e2.geometry.coordinates[0][0], "0.0", false)), r2 > 3) {
              var i2 = e2.geometry.coordinates[0].length - 3;
              n2(Bt(t2.polygon.id, e2.geometry.coordinates[0][i2], "0." + i2, false));
            }
            if (r2 <= 4) {
              var a2 = [[e2.geometry.coordinates[0][0][0], e2.geometry.coordinates[0][0][1]], [e2.geometry.coordinates[0][1][0], e2.geometry.coordinates[0][1][1]]];
              if (n2({ type: M, properties: e2.properties, geometry: { coordinates: a2, type: I } }), r2 === 3)
                return;
            }
            return n2(e2);
          }
        }
      }, ce.onTrash = function(t2) {
        this.deleteFeature([t2.polygon.id], { silent: true }), this.changeMode(j.SIMPLE_SELECT);
      };
      var le = { onSetup: function(t2) {
        var e2, n2, o2 = (t2 = t2 || {}).featureId, r2 = "forward";
        if (o2) {
          if (!(e2 = this.getFeature(o2)))
            throw new Error("Could not find a feature with the provided featureId");
          var i2 = t2.from;
          if (i2 && i2.type === "Feature" && i2.geometry && i2.geometry.type === "Point" && (i2 = i2.geometry), i2 && i2.type === "Point" && i2.coordinates && i2.coordinates.length === 2 && (i2 = i2.coordinates), !i2 || !Array.isArray(i2))
            throw new Error("Please use the `from` property to indicate which point to continue the line from");
          var a2 = e2.coordinates.length - 1;
          if (e2.coordinates[a2][0] === i2[0] && e2.coordinates[a2][1] === i2[1])
            n2 = a2 + 1, e2.addCoordinate.apply(e2, [n2].concat(e2.coordinates[a2]));
          else {
            if (e2.coordinates[0][0] !== i2[0] || e2.coordinates[0][1] !== i2[1])
              throw new Error("`from` should match the point at either the start or the end of the provided LineString");
            r2 = "backwards", n2 = 0, e2.addCoordinate.apply(e2, [n2].concat(e2.coordinates[0]));
          }
        } else
          e2 = this.newFeature({ type: M, properties: {}, geometry: { type: I, coordinates: [] } }), n2 = 0, this.addFeature(e2);
        return this.clearSelectedFeatures(), Gt(this), this.updateUIClasses({ mouse: b }), this.activateUIButton(E.LINE), this.setActionableState({ trash: true }), { line: e2, currentVertexPosition: n2, direction: r2 };
      }, clickAnywhere: function(t2, e2) {
        if (t2.currentVertexPosition > 0 && ue(e2, t2.line.coordinates[t2.currentVertexPosition - 1]) || t2.direction === "backwards" && ue(e2, t2.line.coordinates[t2.currentVertexPosition + 1]))
          return this.changeMode(j.SIMPLE_SELECT, { featureIds: [t2.line.id] });
        this.updateUIClasses({ mouse: b }), t2.line.updateCoordinate(t2.currentVertexPosition, e2.lngLat.lng, e2.lngLat.lat), t2.direction === "forward" ? (t2.currentVertexPosition++, t2.line.updateCoordinate(t2.currentVertexPosition, e2.lngLat.lng, e2.lngLat.lat)) : t2.line.addCoordinate(0, e2.lngLat.lng, e2.lngLat.lat);
      }, clickOnVertex: function(t2) {
        return this.changeMode(j.SIMPLE_SELECT, { featureIds: [t2.line.id] });
      }, onMouseMove: function(t2, e2) {
        t2.line.updateCoordinate(t2.currentVertexPosition, e2.lngLat.lng, e2.lngLat.lat), Tt(e2) && this.updateUIClasses({ mouse: x });
      } };
      le.onTap = le.onClick = function(t2, e2) {
        if (Tt(e2))
          return this.clickOnVertex(t2, e2);
        this.clickAnywhere(t2, e2);
      }, le.onKeyUp = function(t2, e2) {
        Dt(e2) ? this.changeMode(j.SIMPLE_SELECT, { featureIds: [t2.line.id] }) : At(e2) && (this.deleteFeature([t2.line.id], { silent: true }), this.changeMode(j.SIMPLE_SELECT));
      }, le.onStop = function(t2) {
        Jt(this), this.activateUIButton(), this.getFeature(t2.line.id) !== void 0 && (t2.line.removeCoordinate("" + t2.currentVertexPosition), t2.line.isValid() ? this.map.fire(A, { features: [t2.line.toGeoJSON()] }) : (this.deleteFeature([t2.line.id], { silent: true }), this.changeMode(j.SIMPLE_SELECT, {}, { silent: true })));
      }, le.onTrash = function(t2) {
        this.deleteFeature([t2.line.id], { silent: true }), this.changeMode(j.SIMPLE_SELECT);
      }, le.toDisplayFeatures = function(t2, e2, n2) {
        var o2 = e2.properties.id === t2.line.id;
        if (e2.properties.active = o2 ? Z : K, !o2)
          return n2(e2);
        e2.geometry.coordinates.length < 2 || (e2.properties.meta = W, n2(Bt(t2.line.id, e2.geometry.coordinates[t2.direction === "forward" ? e2.geometry.coordinates.length - 2 : 1], "" + (t2.direction === "forward" ? e2.geometry.coordinates.length - 2 : 1), false)), n2(e2));
      };
      var de = { simple_select: oe, direct_select: ae, draw_point: se, draw_polygon: ce, draw_line_string: le }, pe = { defaultMode: j.SIMPLE_SELECT, keybindings: true, touchEnabled: true, clickBuffer: 2, touchBuffer: 25, boxSelect: true, displayControlsDefault: true, styles: [{ id: "gl-draw-polygon-fill-inactive", type: "fill", filter: ["all", ["==", "active", "false"], ["==", "$type", "Polygon"], ["!=", "mode", "static"]], paint: { "fill-color": "#3bb2d0", "fill-outline-color": "#3bb2d0", "fill-opacity": 0.1 } }, { id: "gl-draw-polygon-fill-active", type: "fill", filter: ["all", ["==", "active", "true"], ["==", "$type", "Polygon"]], paint: { "fill-color": "#fbb03b", "fill-outline-color": "#fbb03b", "fill-opacity": 0.1 } }, { id: "gl-draw-polygon-midpoint", type: "circle", filter: ["all", ["==", "$type", "Point"], ["==", "meta", "midpoint"]], paint: { "circle-radius": 3, "circle-color": "#fbb03b" } }, { id: "gl-draw-polygon-stroke-inactive", type: "line", filter: ["all", ["==", "active", "false"], ["==", "$type", "Polygon"], ["!=", "mode", "static"]], layout: { "line-cap": "round", "line-join": "round" }, paint: { "line-color": "#3bb2d0", "line-width": 2 } }, { id: "gl-draw-polygon-stroke-active", type: "line", filter: ["all", ["==", "active", "true"], ["==", "$type", "Polygon"]], layout: { "line-cap": "round", "line-join": "round" }, paint: { "line-color": "#fbb03b", "line-dasharray": [0.2, 2], "line-width": 2 } }, { id: "gl-draw-line-inactive", type: "line", filter: ["all", ["==", "active", "false"], ["==", "$type", "LineString"], ["!=", "mode", "static"]], layout: { "line-cap": "round", "line-join": "round" }, paint: { "line-color": "#3bb2d0", "line-width": 2 } }, { id: "gl-draw-line-active", type: "line", filter: ["all", ["==", "$type", "LineString"], ["==", "active", "true"]], layout: { "line-cap": "round", "line-join": "round" }, paint: { "line-color": "#fbb03b", "line-dasharray": [0.2, 2], "line-width": 2 } }, { id: "gl-draw-polygon-and-line-vertex-stroke-inactive", type: "circle", filter: ["all", ["==", "meta", "vertex"], ["==", "$type", "Point"], ["!=", "mode", "static"]], paint: { "circle-radius": 5, "circle-color": "#fff" } }, { id: "gl-draw-polygon-and-line-vertex-inactive", type: "circle", filter: ["all", ["==", "meta", "vertex"], ["==", "$type", "Point"], ["!=", "mode", "static"]], paint: { "circle-radius": 3, "circle-color": "#fbb03b" } }, { id: "gl-draw-point-point-stroke-inactive", type: "circle", filter: ["all", ["==", "active", "false"], ["==", "$type", "Point"], ["==", "meta", "feature"], ["!=", "mode", "static"]], paint: { "circle-radius": 5, "circle-opacity": 1, "circle-color": "#fff" } }, { id: "gl-draw-point-inactive", type: "circle", filter: ["all", ["==", "active", "false"], ["==", "$type", "Point"], ["==", "meta", "feature"], ["!=", "mode", "static"]], paint: { "circle-radius": 3, "circle-color": "#3bb2d0" } }, { id: "gl-draw-point-stroke-active", type: "circle", filter: ["all", ["==", "$type", "Point"], ["==", "active", "true"], ["!=", "meta", "midpoint"]], paint: { "circle-radius": 7, "circle-color": "#fff" } }, { id: "gl-draw-point-active", type: "circle", filter: ["all", ["==", "$type", "Point"], ["!=", "meta", "midpoint"], ["==", "active", "true"]], paint: { "circle-radius": 5, "circle-color": "#fbb03b" } }, { id: "gl-draw-polygon-fill-static", type: "fill", filter: ["all", ["==", "mode", "static"], ["==", "$type", "Polygon"]], paint: { "fill-color": "#404040", "fill-outline-color": "#404040", "fill-opacity": 0.1 } }, { id: "gl-draw-polygon-stroke-static", type: "line", filter: ["all", ["==", "mode", "static"], ["==", "$type", "Polygon"]], layout: { "line-cap": "round", "line-join": "round" }, paint: { "line-color": "#404040", "line-width": 2 } }, { id: "gl-draw-line-static", type: "line", filter: ["all", ["==", "mode", "static"], ["==", "$type", "LineString"]], layout: { "line-cap": "round", "line-join": "round" }, paint: { "line-color": "#404040", "line-width": 2 } }, { id: "gl-draw-point-static", type: "circle", filter: ["all", ["==", "mode", "static"], ["==", "$type", "Point"]], paint: { "circle-radius": 5, "circle-color": "#404040" } }], modes: de, controls: {}, userProperties: false }, fe = { point: true, line_string: true, polygon: true, trash: true, combine_features: true, uncombine_features: true }, he = { point: false, line_string: false, polygon: false, trash: false, combine_features: false, uncombine_features: false };
      function ge(t2, e2) {
        return t2.map(function(t3) {
          return t3.source ? t3 : Mt(t3, { id: t3.id + "." + e2, source: e2 === "hot" ? v : m });
        });
      }
      var ye = ut(function(t2, e2) {
        var n2 = "[object Arguments]", o2 = "[object Map]", r2 = "[object Object]", i2 = "[object Set]", a2 = /^\[object .+?Constructor\]$/, s2 = /^(?:0|[1-9]\d*)$/, u2 = {};
        u2["[object Float32Array]"] = u2["[object Float64Array]"] = u2["[object Int8Array]"] = u2["[object Int16Array]"] = u2["[object Int32Array]"] = u2["[object Uint8Array]"] = u2["[object Uint8ClampedArray]"] = u2["[object Uint16Array]"] = u2["[object Uint32Array]"] = true, u2[n2] = u2["[object Array]"] = u2["[object ArrayBuffer]"] = u2["[object Boolean]"] = u2["[object DataView]"] = u2["[object Date]"] = u2["[object Error]"] = u2["[object Function]"] = u2[o2] = u2["[object Number]"] = u2[r2] = u2["[object RegExp]"] = u2[i2] = u2["[object String]"] = u2["[object WeakMap]"] = false;
        var c2 = typeof global == "object" && global && global.Object === Object && global, l2 = typeof self == "object" && self && self.Object === Object && self, d2 = c2 || l2 || Function("return this")(), p2 = e2 && !e2.nodeType && e2, f2 = p2 && t2 && !t2.nodeType && t2, h2 = f2 && f2.exports === p2, g2 = h2 && c2.process, y2 = function() {
          try {
            return g2 && g2.binding && g2.binding("util");
          } catch (t3) {
          }
        }(), v2 = y2 && y2.isTypedArray;
        function m2(t3, e3) {
          for (var n3 = -1, o3 = t3 == null ? 0 : t3.length; ++n3 < o3; )
            if (e3(t3[n3], n3, t3))
              return true;
          return false;
        }
        function b2(t3) {
          var e3 = -1, n3 = Array(t3.size);
          return t3.forEach(function(t4, o3) {
            n3[++e3] = [o3, t4];
          }), n3;
        }
        function _2(t3) {
          var e3 = -1, n3 = Array(t3.size);
          return t3.forEach(function(t4) {
            n3[++e3] = t4;
          }), n3;
        }
        var S2, x2, C2, E2 = Array.prototype, M2 = Function.prototype, w2 = Object.prototype, I2 = d2["__core-js_shared__"], L2 = M2.toString, P2 = w2.hasOwnProperty, F2 = (S2 = /[^.]+$/.exec(I2 && I2.keys && I2.keys.IE_PROTO || "")) ? "Symbol(src)_1." + S2 : "", O2 = w2.toString, k2 = RegExp("^" + L2.call(P2).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"), T2 = h2 ? d2.Buffer : void 0, j2 = d2.Symbol, A2 = d2.Uint8Array, D2 = w2.propertyIsEnumerable, N2 = E2.splice, U2 = j2 ? j2.toStringTag : void 0, R2 = Object.getOwnPropertySymbols, B2 = T2 ? T2.isBuffer : void 0, V2 = (x2 = Object.keys, C2 = Object, function(t3) {
          return x2(C2(t3));
        }), J2 = yt2(d2, "DataView"), G2 = yt2(d2, "Map"), z2 = yt2(d2, "Promise"), $2 = yt2(d2, "Set"), W2 = yt2(d2, "WeakMap"), q2 = yt2(Object, "create"), Y2 = _t2(J2), Z2 = _t2(G2), K2 = _t2(z2), X2 = _t2($2), H2 = _t2(W2), Q2 = j2 ? j2.prototype : void 0, tt2 = Q2 ? Q2.valueOf : void 0;
        function et2(t3) {
          var e3 = -1, n3 = t3 == null ? 0 : t3.length;
          for (this.clear(); ++e3 < n3; ) {
            var o3 = t3[e3];
            this.set(o3[0], o3[1]);
          }
        }
        function nt2(t3) {
          var e3 = -1, n3 = t3 == null ? 0 : t3.length;
          for (this.clear(); ++e3 < n3; ) {
            var o3 = t3[e3];
            this.set(o3[0], o3[1]);
          }
        }
        function ot2(t3) {
          var e3 = -1, n3 = t3 == null ? 0 : t3.length;
          for (this.clear(); ++e3 < n3; ) {
            var o3 = t3[e3];
            this.set(o3[0], o3[1]);
          }
        }
        function rt2(t3) {
          var e3 = -1, n3 = t3 == null ? 0 : t3.length;
          for (this.__data__ = new ot2(); ++e3 < n3; )
            this.add(t3[e3]);
        }
        function it2(t3) {
          var e3 = this.__data__ = new nt2(t3);
          this.size = e3.size;
        }
        function at2(t3, e3) {
          var n3 = Ct2(t3), o3 = !n3 && xt2(t3), r3 = !n3 && !o3 && Et2(t3), i3 = !n3 && !o3 && !r3 && Pt2(t3), a3 = n3 || o3 || r3 || i3, s3 = a3 ? function(t4, e4) {
            for (var n4 = -1, o4 = Array(t4); ++n4 < t4; )
              o4[n4] = e4(n4);
            return o4;
          }(t3.length, String) : [], u3 = s3.length;
          for (var c3 in t3)
            !e3 && !P2.call(t3, c3) || a3 && (c3 == "length" || r3 && (c3 == "offset" || c3 == "parent") || i3 && (c3 == "buffer" || c3 == "byteLength" || c3 == "byteOffset") || bt2(c3, u3)) || s3.push(c3);
          return s3;
        }
        function st2(t3, e3) {
          for (var n3 = t3.length; n3--; )
            if (St2(t3[n3][0], e3))
              return n3;
          return -1;
        }
        function ut2(t3) {
          return t3 == null ? t3 === void 0 ? "[object Undefined]" : "[object Null]" : U2 && U2 in Object(t3) ? function(t4) {
            var e3 = P2.call(t4, U2), n3 = t4[U2];
            try {
              t4[U2] = void 0;
              var o3 = true;
            } catch (t5) {
            }
            var r3 = O2.call(t4);
            o3 && (e3 ? t4[U2] = n3 : delete t4[U2]);
            return r3;
          }(t3) : function(t4) {
            return O2.call(t4);
          }(t3);
        }
        function ct2(t3) {
          return Lt2(t3) && ut2(t3) == n2;
        }
        function lt2(t3, e3, a3, s3, u3) {
          return t3 === e3 || (t3 == null || e3 == null || !Lt2(t3) && !Lt2(e3) ? t3 != t3 && e3 != e3 : function(t4, e4, a4, s4, u4, c3) {
            var l3 = Ct2(t4), d3 = Ct2(e4), p3 = l3 ? "[object Array]" : mt2(t4), f3 = d3 ? "[object Array]" : mt2(e4), h3 = (p3 = p3 == n2 ? r2 : p3) == r2, g3 = (f3 = f3 == n2 ? r2 : f3) == r2, y3 = p3 == f3;
            if (y3 && Et2(t4)) {
              if (!Et2(e4))
                return false;
              l3 = true, h3 = false;
            }
            if (y3 && !h3)
              return c3 || (c3 = new it2()), l3 || Pt2(t4) ? ft2(t4, e4, a4, s4, u4, c3) : function(t5, e5, n3, r3, a5, s5, u5) {
                switch (n3) {
                  case "[object DataView]":
                    if (t5.byteLength != e5.byteLength || t5.byteOffset != e5.byteOffset)
                      return false;
                    t5 = t5.buffer, e5 = e5.buffer;
                  case "[object ArrayBuffer]":
                    return !(t5.byteLength != e5.byteLength || !s5(new A2(t5), new A2(e5)));
                  case "[object Boolean]":
                  case "[object Date]":
                  case "[object Number]":
                    return St2(+t5, +e5);
                  case "[object Error]":
                    return t5.name == e5.name && t5.message == e5.message;
                  case "[object RegExp]":
                  case "[object String]":
                    return t5 == e5 + "";
                  case o2:
                    var c4 = b2;
                  case i2:
                    var l4 = 1 & r3;
                    if (c4 || (c4 = _2), t5.size != e5.size && !l4)
                      return false;
                    var d4 = u5.get(t5);
                    if (d4)
                      return d4 == e5;
                    r3 |= 2, u5.set(t5, e5);
                    var p4 = ft2(c4(t5), c4(e5), r3, a5, s5, u5);
                    return u5.delete(t5), p4;
                  case "[object Symbol]":
                    if (tt2)
                      return tt2.call(t5) == tt2.call(e5);
                }
                return false;
              }(t4, e4, p3, a4, s4, u4, c3);
            if (!(1 & a4)) {
              var v3 = h3 && P2.call(t4, "__wrapped__"), m3 = g3 && P2.call(e4, "__wrapped__");
              if (v3 || m3) {
                var S3 = v3 ? t4.value() : t4, x3 = m3 ? e4.value() : e4;
                return c3 || (c3 = new it2()), u4(S3, x3, a4, s4, c3);
              }
            }
            if (!y3)
              return false;
            return c3 || (c3 = new it2()), function(t5, e5, n3, o3, r3, i3) {
              var a5 = 1 & n3, s5 = ht2(t5), u5 = s5.length, c4 = ht2(e5).length;
              if (u5 != c4 && !a5)
                return false;
              var l4 = u5;
              for (; l4--; ) {
                var d4 = s5[l4];
                if (!(a5 ? d4 in e5 : P2.call(e5, d4)))
                  return false;
              }
              var p4 = i3.get(t5);
              if (p4 && i3.get(e5))
                return p4 == e5;
              var f4 = true;
              i3.set(t5, e5), i3.set(e5, t5);
              var h4 = a5;
              for (; ++l4 < u5; ) {
                d4 = s5[l4];
                var g4 = t5[d4], y4 = e5[d4];
                if (o3)
                  var v4 = a5 ? o3(y4, g4, d4, e5, t5, i3) : o3(g4, y4, d4, t5, e5, i3);
                if (!(v4 === void 0 ? g4 === y4 || r3(g4, y4, n3, o3, i3) : v4)) {
                  f4 = false;
                  break;
                }
                h4 || (h4 = d4 == "constructor");
              }
              if (f4 && !h4) {
                var m4 = t5.constructor, b3 = e5.constructor;
                m4 == b3 || !("constructor" in t5) || !("constructor" in e5) || typeof m4 == "function" && m4 instanceof m4 && typeof b3 == "function" && b3 instanceof b3 || (f4 = false);
              }
              return i3.delete(t5), i3.delete(e5), f4;
            }(t4, e4, a4, s4, u4, c3);
          }(t3, e3, a3, s3, lt2, u3));
        }
        function dt2(t3) {
          return !(!It2(t3) || function(t4) {
            return !!F2 && F2 in t4;
          }(t3)) && (Mt2(t3) ? k2 : a2).test(_t2(t3));
        }
        function pt2(t3) {
          if (n3 = (e3 = t3) && e3.constructor, o3 = typeof n3 == "function" && n3.prototype || w2, e3 !== o3)
            return V2(t3);
          var e3, n3, o3, r3 = [];
          for (var i3 in Object(t3))
            P2.call(t3, i3) && i3 != "constructor" && r3.push(i3);
          return r3;
        }
        function ft2(t3, e3, n3, o3, r3, i3) {
          var a3 = 1 & n3, s3 = t3.length, u3 = e3.length;
          if (s3 != u3 && !(a3 && u3 > s3))
            return false;
          var c3 = i3.get(t3);
          if (c3 && i3.get(e3))
            return c3 == e3;
          var l3 = -1, d3 = true, p3 = 2 & n3 ? new rt2() : void 0;
          for (i3.set(t3, e3), i3.set(e3, t3); ++l3 < s3; ) {
            var f3 = t3[l3], h3 = e3[l3];
            if (o3)
              var g3 = a3 ? o3(h3, f3, l3, e3, t3, i3) : o3(f3, h3, l3, t3, e3, i3);
            if (g3 !== void 0) {
              if (g3)
                continue;
              d3 = false;
              break;
            }
            if (p3) {
              if (!m2(e3, function(t4, e4) {
                if (a4 = e4, !p3.has(a4) && (f3 === t4 || r3(f3, t4, n3, o3, i3)))
                  return p3.push(e4);
                var a4;
              })) {
                d3 = false;
                break;
              }
            } else if (f3 !== h3 && !r3(f3, h3, n3, o3, i3)) {
              d3 = false;
              break;
            }
          }
          return i3.delete(t3), i3.delete(e3), d3;
        }
        function ht2(t3) {
          return function(t4, e3, n3) {
            var o3 = e3(t4);
            return Ct2(t4) ? o3 : function(t5, e4) {
              for (var n4 = -1, o4 = e4.length, r3 = t5.length; ++n4 < o4; )
                t5[r3 + n4] = e4[n4];
              return t5;
            }(o3, n3(t4));
          }(t3, Ft2, vt2);
        }
        function gt2(t3, e3) {
          var n3, o3, r3 = t3.__data__;
          return ((o3 = typeof (n3 = e3)) == "string" || o3 == "number" || o3 == "symbol" || o3 == "boolean" ? n3 !== "__proto__" : n3 === null) ? r3[typeof e3 == "string" ? "string" : "hash"] : r3.map;
        }
        function yt2(t3, e3) {
          var n3 = function(t4, e4) {
            return t4 == null ? void 0 : t4[e4];
          }(t3, e3);
          return dt2(n3) ? n3 : void 0;
        }
        et2.prototype.clear = function() {
          this.__data__ = q2 ? q2(null) : {}, this.size = 0;
        }, et2.prototype.delete = function(t3) {
          var e3 = this.has(t3) && delete this.__data__[t3];
          return this.size -= e3 ? 1 : 0, e3;
        }, et2.prototype.get = function(t3) {
          var e3 = this.__data__;
          if (q2) {
            var n3 = e3[t3];
            return n3 === "__lodash_hash_undefined__" ? void 0 : n3;
          }
          return P2.call(e3, t3) ? e3[t3] : void 0;
        }, et2.prototype.has = function(t3) {
          var e3 = this.__data__;
          return q2 ? e3[t3] !== void 0 : P2.call(e3, t3);
        }, et2.prototype.set = function(t3, e3) {
          var n3 = this.__data__;
          return this.size += this.has(t3) ? 0 : 1, n3[t3] = q2 && e3 === void 0 ? "__lodash_hash_undefined__" : e3, this;
        }, nt2.prototype.clear = function() {
          this.__data__ = [], this.size = 0;
        }, nt2.prototype.delete = function(t3) {
          var e3 = this.__data__, n3 = st2(e3, t3);
          return !(n3 < 0) && (n3 == e3.length - 1 ? e3.pop() : N2.call(e3, n3, 1), --this.size, true);
        }, nt2.prototype.get = function(t3) {
          var e3 = this.__data__, n3 = st2(e3, t3);
          return n3 < 0 ? void 0 : e3[n3][1];
        }, nt2.prototype.has = function(t3) {
          return st2(this.__data__, t3) > -1;
        }, nt2.prototype.set = function(t3, e3) {
          var n3 = this.__data__, o3 = st2(n3, t3);
          return o3 < 0 ? (++this.size, n3.push([t3, e3])) : n3[o3][1] = e3, this;
        }, ot2.prototype.clear = function() {
          this.size = 0, this.__data__ = { hash: new et2(), map: new (G2 || nt2)(), string: new et2() };
        }, ot2.prototype.delete = function(t3) {
          var e3 = gt2(this, t3).delete(t3);
          return this.size -= e3 ? 1 : 0, e3;
        }, ot2.prototype.get = function(t3) {
          return gt2(this, t3).get(t3);
        }, ot2.prototype.has = function(t3) {
          return gt2(this, t3).has(t3);
        }, ot2.prototype.set = function(t3, e3) {
          var n3 = gt2(this, t3), o3 = n3.size;
          return n3.set(t3, e3), this.size += n3.size == o3 ? 0 : 1, this;
        }, rt2.prototype.add = rt2.prototype.push = function(t3) {
          return this.__data__.set(t3, "__lodash_hash_undefined__"), this;
        }, rt2.prototype.has = function(t3) {
          return this.__data__.has(t3);
        }, it2.prototype.clear = function() {
          this.__data__ = new nt2(), this.size = 0;
        }, it2.prototype.delete = function(t3) {
          var e3 = this.__data__, n3 = e3.delete(t3);
          return this.size = e3.size, n3;
        }, it2.prototype.get = function(t3) {
          return this.__data__.get(t3);
        }, it2.prototype.has = function(t3) {
          return this.__data__.has(t3);
        }, it2.prototype.set = function(t3, e3) {
          var n3 = this.__data__;
          if (n3 instanceof nt2) {
            var o3 = n3.__data__;
            if (!G2 || o3.length < 199)
              return o3.push([t3, e3]), this.size = ++n3.size, this;
            n3 = this.__data__ = new ot2(o3);
          }
          return n3.set(t3, e3), this.size = n3.size, this;
        };
        var vt2 = R2 ? function(t3) {
          return t3 == null ? [] : (t3 = Object(t3), function(t4, e3) {
            for (var n3 = -1, o3 = t4 == null ? 0 : t4.length, r3 = 0, i3 = []; ++n3 < o3; ) {
              var a3 = t4[n3];
              e3(a3, n3, t4) && (i3[r3++] = a3);
            }
            return i3;
          }(R2(t3), function(e3) {
            return D2.call(t3, e3);
          }));
        } : function() {
          return [];
        }, mt2 = ut2;
        function bt2(t3, e3) {
          return !!(e3 = e3 == null ? 9007199254740991 : e3) && (typeof t3 == "number" || s2.test(t3)) && t3 > -1 && t3 % 1 == 0 && t3 < e3;
        }
        function _t2(t3) {
          if (t3 != null) {
            try {
              return L2.call(t3);
            } catch (t4) {
            }
            try {
              return t3 + "";
            } catch (t4) {
            }
          }
          return "";
        }
        function St2(t3, e3) {
          return t3 === e3 || t3 != t3 && e3 != e3;
        }
        (J2 && mt2(new J2(new ArrayBuffer(1))) != "[object DataView]" || G2 && mt2(new G2()) != o2 || z2 && mt2(z2.resolve()) != "[object Promise]" || $2 && mt2(new $2()) != i2 || W2 && mt2(new W2()) != "[object WeakMap]") && (mt2 = function(t3) {
          var e3 = ut2(t3), n3 = e3 == r2 ? t3.constructor : void 0, a3 = n3 ? _t2(n3) : "";
          if (a3)
            switch (a3) {
              case Y2:
                return "[object DataView]";
              case Z2:
                return o2;
              case K2:
                return "[object Promise]";
              case X2:
                return i2;
              case H2:
                return "[object WeakMap]";
            }
          return e3;
        });
        var xt2 = ct2(function() {
          return arguments;
        }()) ? ct2 : function(t3) {
          return Lt2(t3) && P2.call(t3, "callee") && !D2.call(t3, "callee");
        }, Ct2 = Array.isArray;
        var Et2 = B2 || function() {
          return false;
        };
        function Mt2(t3) {
          if (!It2(t3))
            return false;
          var e3 = ut2(t3);
          return e3 == "[object Function]" || e3 == "[object GeneratorFunction]" || e3 == "[object AsyncFunction]" || e3 == "[object Proxy]";
        }
        function wt2(t3) {
          return typeof t3 == "number" && t3 > -1 && t3 % 1 == 0 && t3 <= 9007199254740991;
        }
        function It2(t3) {
          var e3 = typeof t3;
          return t3 != null && (e3 == "object" || e3 == "function");
        }
        function Lt2(t3) {
          return t3 != null && typeof t3 == "object";
        }
        var Pt2 = v2 ? function(t3) {
          return function(e3) {
            return t3(e3);
          };
        }(v2) : function(t3) {
          return Lt2(t3) && wt2(t3.length) && !!u2[ut2(t3)];
        };
        function Ft2(t3) {
          return (e3 = t3) != null && wt2(e3.length) && !Mt2(e3) ? at2(t3) : pt2(t3);
          var e3;
        }
        t2.exports = function(t3, e3) {
          return lt2(t3, e3);
        };
      });
      var ve = { Polygon: ft, LineString: pt, Point: dt, MultiPolygon: yt, MultiLineString: yt, MultiPoint: yt };
      function me(t2, e2) {
        return e2.modes = j, e2.getFeatureIdsAt = function(e3) {
          return nt.click({ point: e3 }, null, t2).map(function(t3) {
            return t3.properties.id;
          });
        }, e2.getSelectedIds = function() {
          return t2.store.getSelectedIds();
        }, e2.getSelected = function() {
          return { type: P, features: t2.store.getSelectedIds().map(function(e3) {
            return t2.store.get(e3);
          }).map(function(t3) {
            return t3.toGeoJSON();
          }) };
        }, e2.getSelectedPoints = function() {
          return { type: P, features: t2.store.getSelectedCoordinates().map(function(t3) {
            return { type: M, properties: {}, geometry: { type: L, coordinates: t3.coordinates } };
          }) };
        }, e2.set = function(n2) {
          if (n2.type === void 0 || n2.type !== P || !Array.isArray(n2.features))
            throw new Error("Invalid FeatureCollection");
          var o2 = t2.store.createRenderBatch(), r2 = t2.store.getAllIds().slice(), i2 = e2.add(n2), a2 = new tt(i2);
          return (r2 = r2.filter(function(t3) {
            return !a2.has(t3);
          })).length && e2.delete(r2), o2(), i2;
        }, e2.add = function(e3) {
          var n2 = JSON.parse(JSON.stringify(zt(e3))).features.map(function(e4) {
            if (e4.id = e4.id || ct(), e4.geometry === null)
              throw new Error("Invalid geometry: null");
            if (t2.store.get(e4.id) === void 0 || t2.store.get(e4.id).type !== e4.geometry.type) {
              var n3 = ve[e4.geometry.type];
              if (n3 === void 0)
                throw new Error("Invalid geometry type: " + e4.geometry.type + ".");
              var o2 = new n3(t2, e4);
              t2.store.add(o2);
            } else {
              var r2 = t2.store.get(e4.id);
              r2.properties = e4.properties, ye(r2.getCoordinates(), e4.geometry.coordinates) || r2.incomingCoords(e4.geometry.coordinates);
            }
            return e4.id;
          });
          return t2.store.render(), n2;
        }, e2.get = function(e3) {
          var n2 = t2.store.get(e3);
          if (n2)
            return n2.toGeoJSON();
        }, e2.getAll = function() {
          return { type: P, features: t2.store.getAll().map(function(t3) {
            return t3.toGeoJSON();
          }) };
        }, e2.delete = function(n2) {
          return t2.store.delete(n2, { silent: true }), e2.getMode() !== j.DIRECT_SELECT || t2.store.getSelectedIds().length ? t2.store.render() : t2.events.changeMode(j.SIMPLE_SELECT, void 0, { silent: true }), e2;
        }, e2.deleteAll = function() {
          return t2.store.delete(t2.store.getAllIds(), { silent: true }), e2.getMode() === j.DIRECT_SELECT ? t2.events.changeMode(j.SIMPLE_SELECT, void 0, { silent: true }) : t2.store.render(), e2;
        }, e2.changeMode = function(n2, o2) {
          return o2 === void 0 && (o2 = {}), n2 === j.SIMPLE_SELECT && e2.getMode() === j.SIMPLE_SELECT ? (r2 = o2.featureIds || [], i2 = t2.store.getSelectedIds(), r2.length === i2.length && JSON.stringify(r2.map(function(t3) {
            return t3;
          }).sort()) === JSON.stringify(i2.map(function(t3) {
            return t3;
          }).sort()) || (t2.store.setSelected(o2.featureIds, { silent: true }), t2.store.render()), e2) : (n2 === j.DIRECT_SELECT && e2.getMode() === j.DIRECT_SELECT && o2.featureId === t2.store.getSelectedIds()[0] || t2.events.changeMode(n2, o2, { silent: true }), e2);
          var r2, i2;
        }, e2.getMode = function() {
          return t2.events.getMode();
        }, e2.trash = function() {
          return t2.events.trash({ silent: true }), e2;
        }, e2.combineFeatures = function() {
          return t2.events.combineFeatures({ silent: true }), e2;
        }, e2.uncombineFeatures = function() {
          return t2.events.uncombineFeatures({ silent: true }), e2;
        }, e2.setFeatureProperty = function(n2, o2, r2) {
          return t2.store.setFeatureProperty(n2, o2, r2), e2;
        }, e2;
      }
      var be = function(t2, e2) {
        var n2 = { options: t2 = function(t3) {
          t3 === void 0 && (t3 = {});
          var e3 = Mt(t3);
          return t3.controls || (e3.controls = {}), t3.displayControlsDefault === false ? e3.controls = Mt(he, t3.controls) : e3.controls = Mt(fe, t3.controls), (e3 = Mt(pe, e3)).styles = ge(e3.styles, "cold").concat(ge(e3.styles, "hot")), e3;
        }(t2) };
        e2 = me(n2, e2), n2.api = e2;
        var o2 = Lt(n2);
        return e2.onAdd = o2.onAdd, e2.onRemove = o2.onRemove, e2.types = E, e2.options = t2, e2;
      };
      function _e(t2) {
        be(t2, this);
      }
      return _e.modes = de, _e;
    });
  }
});

// dep:@mapbox_mapbox-gl-draw
var mapbox_mapbox_gl_draw_default = require_mapbox_gl_draw();
export {
  mapbox_mapbox_gl_draw_default as default
};
//# sourceMappingURL=@mapbox_mapbox-gl-draw.js.map
